/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.org.emoflon.neo.example.companytoit;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.v1.Value;
import org.neo4j.driver.v1.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_CompanyToITTriplesForTesting {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_CompanyToITTriplesForTesting(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_CompanyToITTriplesForTesting(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		spec = (EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI);
		this.builder = builder;
	}

	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.0
	public Model getModel_ConsistentSrc1(){
		return (Model) spec.getEntities().get(0);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.1
	public Model getModel_ConsistentTrg1(){
		return (Model) spec.getEntities().get(1);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.2
	public CreateCorrs1Access getRule_CreateCorrs1() {
		return new CreateCorrs1Access();
	}
	
	public class CreateCorrs1Access extends NeoRuleCoAccess<CreateCorrs1Data, CreateCorrs1CoData, CreateCorrs1Mask> {
		public final String _c = "c";
		public final String _it = "it";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs1Data(d));
		}
			
		@Override
		public Stream<CreateCorrs1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs1CoData(d));
		}
		
		@Override
		public CreateCorrs1Mask mask() {
			return new CreateCorrs1Mask();
		}
	}
	
	public class CreateCorrs1Data extends NeoData {
		public final CNode _c;
		public final ItNode _it;
		
		public CreateCorrs1Data(Record data) {
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _it = data.get("it");
			this._it = new ItNode(_it);
		}
		
		
		public class CNode {
			public String _name;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
			}
		}
		
		public class ItNode {
			public String _name;
			
			public ItNode(Value _it) {
				if(!_it.get("name").isNull())
					this._name = _it.get("name").asString();
			}
		}
		
	}
	
	public class CreateCorrs1CoData extends NeoData {
		public final CNode _c;
		public final C_corr_0_itRel _c_corr_0_it;
		public final ItNode _it;
	
		public CreateCorrs1CoData(Record data) {
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _c_corr_0_it = data.get("c_corr_0_it");
			this._c_corr_0_it = new C_corr_0_itRel(_c_corr_0_it);
			var _it = data.get("it");
			this._it = new ItNode(_it);
		}
		
	
		public class CNode {
			public String _name;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
			}
		}
		
		public class C_corr_0_itRel {
			public String __type_;
		
			public C_corr_0_itRel(Value _c_corr_0_it) {
				if(!_c_corr_0_it.get("_type_").isNull())
					this.__type_ = _c_corr_0_it.get("_type_").asString();
			}
		}
		public class ItNode {
			public String _name;
			
			public ItNode(Value _it) {
				if(!_it.get("name").isNull())
					this._name = _it.get("name").asString();
			}
		}
		
	}
	
	public class CreateCorrs1Mask extends NeoMask {
		public CreateCorrs1Mask setC(Long value) {
			nodeMask.put("c", value);
			return this;
		}
		public CreateCorrs1Mask setCName(String value) {
			attributeMask.put("c.name", value);
			return this;
		}
		public CreateCorrs1Mask setC_corr_0_it_type_(String value) {
			attributeMask.put("c_corr_0_it._type_", value);
			return this;
		}
		public CreateCorrs1Mask setIt(Long value) {
			nodeMask.put("it", value);
			return this;
		}
		public CreateCorrs1Mask setItName(String value) {
			attributeMask.put("it.name", value);
			return this;
		}
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.3
	public Model getModel_ConsistentTrg2(){
		return (Model) spec.getEntities().get(3);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.4
	public Model getModel_ConsistentSrc2(){
		return (Model) spec.getEntities().get(4);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.5
	public CreateCorrs2Access getRule_CreateCorrs2() {
		return new CreateCorrs2Access();
	}
	
	public class CreateCorrs2Access extends NeoRuleCoAccess<CreateCorrs2Data, CreateCorrs2CoData, CreateCorrs2Mask> {
		public final String _it2 = "it2";
		public final String _it1 = "it1";
		public final String _c1 = "c1";
		public final String _c2 = "c2";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs2Data(d));
		}
			
		@Override
		public Stream<CreateCorrs2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs2CoData(d));
		}
		
		@Override
		public CreateCorrs2Mask mask() {
			return new CreateCorrs2Mask();
		}
	}
	
	public class CreateCorrs2Data extends NeoData {
		public final It2Node _it2;
		public final It1Node _it1;
		public final C1Node _c1;
		public final C2Node _c2;
		
		public CreateCorrs2Data(Record data) {
			var _it2 = data.get("it2");
			this._it2 = new It2Node(_it2);
			var _it1 = data.get("it1");
			this._it1 = new It1Node(_it1);
			var _c1 = data.get("c1");
			this._c1 = new C1Node(_c1);
			var _c2 = data.get("c2");
			this._c2 = new C2Node(_c2);
		}
		
		
		public class It2Node {
			public String _name;
			
			public It2Node(Value _it2) {
				if(!_it2.get("name").isNull())
					this._name = _it2.get("name").asString();
			}
		}
		
		public class It1Node {
			public String _name;
			
			public It1Node(Value _it1) {
				if(!_it1.get("name").isNull())
					this._name = _it1.get("name").asString();
			}
		}
		
		public class C1Node {
			public String _name;
			
			public C1Node(Value _c1) {
				if(!_c1.get("name").isNull())
					this._name = _c1.get("name").asString();
			}
		}
		
		public class C2Node {
			public String _name;
			
			public C2Node(Value _c2) {
				if(!_c2.get("name").isNull())
					this._name = _c2.get("name").asString();
			}
		}
		
	}
	
	public class CreateCorrs2CoData extends NeoData {
		public final It2Node _it2;
		public final It1Node _it1;
		public final C1Node _c1;
		public final C1_corr_0_it1Rel _c1_corr_0_it1;
		public final C2Node _c2;
		public final C2_corr_0_it2Rel _c2_corr_0_it2;
	
		public CreateCorrs2CoData(Record data) {
			var _it2 = data.get("it2");
			this._it2 = new It2Node(_it2);
			var _it1 = data.get("it1");
			this._it1 = new It1Node(_it1);
			var _c1 = data.get("c1");
			this._c1 = new C1Node(_c1);
			var _c1_corr_0_it1 = data.get("c1_corr_0_it1");
			this._c1_corr_0_it1 = new C1_corr_0_it1Rel(_c1_corr_0_it1);
			var _c2 = data.get("c2");
			this._c2 = new C2Node(_c2);
			var _c2_corr_0_it2 = data.get("c2_corr_0_it2");
			this._c2_corr_0_it2 = new C2_corr_0_it2Rel(_c2_corr_0_it2);
		}
		
	
		public class It2Node {
			public String _name;
			
			public It2Node(Value _it2) {
				if(!_it2.get("name").isNull())
					this._name = _it2.get("name").asString();
			}
		}
		
		public class It1Node {
			public String _name;
			
			public It1Node(Value _it1) {
				if(!_it1.get("name").isNull())
					this._name = _it1.get("name").asString();
			}
		}
		
		public class C1Node {
			public String _name;
			
			public C1Node(Value _c1) {
				if(!_c1.get("name").isNull())
					this._name = _c1.get("name").asString();
			}
		}
		
		public class C1_corr_0_it1Rel {
			public String __type_;
		
			public C1_corr_0_it1Rel(Value _c1_corr_0_it1) {
				if(!_c1_corr_0_it1.get("_type_").isNull())
					this.__type_ = _c1_corr_0_it1.get("_type_").asString();
			}
		}
		public class C2Node {
			public String _name;
			
			public C2Node(Value _c2) {
				if(!_c2.get("name").isNull())
					this._name = _c2.get("name").asString();
			}
		}
		
		public class C2_corr_0_it2Rel {
			public String __type_;
		
			public C2_corr_0_it2Rel(Value _c2_corr_0_it2) {
				if(!_c2_corr_0_it2.get("_type_").isNull())
					this.__type_ = _c2_corr_0_it2.get("_type_").asString();
			}
		}
	}
	
	public class CreateCorrs2Mask extends NeoMask {
		public CreateCorrs2Mask setIt2(Long value) {
			nodeMask.put("it2", value);
			return this;
		}
		public CreateCorrs2Mask setIt2Name(String value) {
			attributeMask.put("it2.name", value);
			return this;
		}
		public CreateCorrs2Mask setIt1(Long value) {
			nodeMask.put("it1", value);
			return this;
		}
		public CreateCorrs2Mask setIt1Name(String value) {
			attributeMask.put("it1.name", value);
			return this;
		}
		public CreateCorrs2Mask setC1(Long value) {
			nodeMask.put("c1", value);
			return this;
		}
		public CreateCorrs2Mask setC1Name(String value) {
			attributeMask.put("c1.name", value);
			return this;
		}
		public CreateCorrs2Mask setC1_corr_0_it1_type_(String value) {
			attributeMask.put("c1_corr_0_it1._type_", value);
			return this;
		}
		public CreateCorrs2Mask setC2(Long value) {
			nodeMask.put("c2", value);
			return this;
		}
		public CreateCorrs2Mask setC2Name(String value) {
			attributeMask.put("c2.name", value);
			return this;
		}
		public CreateCorrs2Mask setC2_corr_0_it2_type_(String value) {
			attributeMask.put("c2_corr_0_it2._type_", value);
			return this;
		}
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.6
	public Model getModel_ConsistentSrc3(){
		return (Model) spec.getEntities().get(6);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.7
	public Model getModel_ConsistentTrg3(){
		return (Model) spec.getEntities().get(7);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.8
	public CreateCorrs3Access getRule_CreateCorrs3() {
		return new CreateCorrs3Access();
	}
	
	public class CreateCorrs3Access extends NeoRuleCoAccess<CreateCorrs3Data, CreateCorrs3CoData, CreateCorrs3Mask> {
		public final String _router = "router";
		public final String _c = "c";
		public final String _admin = "admin";
		public final String _it = "it";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs3Data(d));
		}
			
		@Override
		public Stream<CreateCorrs3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs3CoData(d));
		}
		
		@Override
		public CreateCorrs3Mask mask() {
			return new CreateCorrs3Mask();
		}
	}
	
	public class CreateCorrs3Data extends NeoData {
		public final RouterNode _router;
		public final CNode _c;
		public final AdminNode _admin;
		public final ItNode _it;
		
		public CreateCorrs3Data(Record data) {
			var _router = data.get("router");
			this._router = new RouterNode(_router);
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _admin = data.get("admin");
			this._admin = new AdminNode(_admin);
			var _it = data.get("it");
			this._it = new ItNode(_it);
		}
		
		
		public class RouterNode {
			public String _name;
			
			public RouterNode(Value _router) {
				if(!_router.get("name").isNull())
					this._name = _router.get("name").asString();
			}
		}
		
		public class CNode {
			public String _name;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
			}
		}
		
		public class AdminNode {
			public String _name;
			
			public AdminNode(Value _admin) {
				if(!_admin.get("name").isNull())
					this._name = _admin.get("name").asString();
			}
		}
		
		public class ItNode {
			public String _name;
			
			public ItNode(Value _it) {
				if(!_it.get("name").isNull())
					this._name = _it.get("name").asString();
			}
		}
		
	}
	
	public class CreateCorrs3CoData extends NeoData {
		public final RouterNode _router;
		public final CNode _c;
		public final C_corr_0_itRel _c_corr_0_it;
		public final AdminNode _admin;
		public final Admin_corr_0_routerRel _admin_corr_0_router;
		public final ItNode _it;
	
		public CreateCorrs3CoData(Record data) {
			var _router = data.get("router");
			this._router = new RouterNode(_router);
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _c_corr_0_it = data.get("c_corr_0_it");
			this._c_corr_0_it = new C_corr_0_itRel(_c_corr_0_it);
			var _admin = data.get("admin");
			this._admin = new AdminNode(_admin);
			var _admin_corr_0_router = data.get("admin_corr_0_router");
			this._admin_corr_0_router = new Admin_corr_0_routerRel(_admin_corr_0_router);
			var _it = data.get("it");
			this._it = new ItNode(_it);
		}
		
	
		public class RouterNode {
			public String _name;
			
			public RouterNode(Value _router) {
				if(!_router.get("name").isNull())
					this._name = _router.get("name").asString();
			}
		}
		
		public class CNode {
			public String _name;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
			}
		}
		
		public class C_corr_0_itRel {
			public String __type_;
		
			public C_corr_0_itRel(Value _c_corr_0_it) {
				if(!_c_corr_0_it.get("_type_").isNull())
					this.__type_ = _c_corr_0_it.get("_type_").asString();
			}
		}
		public class AdminNode {
			public String _name;
			
			public AdminNode(Value _admin) {
				if(!_admin.get("name").isNull())
					this._name = _admin.get("name").asString();
			}
		}
		
		public class Admin_corr_0_routerRel {
			public String __type_;
		
			public Admin_corr_0_routerRel(Value _admin_corr_0_router) {
				if(!_admin_corr_0_router.get("_type_").isNull())
					this.__type_ = _admin_corr_0_router.get("_type_").asString();
			}
		}
		public class ItNode {
			public String _name;
			
			public ItNode(Value _it) {
				if(!_it.get("name").isNull())
					this._name = _it.get("name").asString();
			}
		}
		
	}
	
	public class CreateCorrs3Mask extends NeoMask {
		public CreateCorrs3Mask setRouter(Long value) {
			nodeMask.put("router", value);
			return this;
		}
		public CreateCorrs3Mask setRouterName(String value) {
			attributeMask.put("router.name", value);
			return this;
		}
		public CreateCorrs3Mask setC(Long value) {
			nodeMask.put("c", value);
			return this;
		}
		public CreateCorrs3Mask setCName(String value) {
			attributeMask.put("c.name", value);
			return this;
		}
		public CreateCorrs3Mask setC_corr_0_it_type_(String value) {
			attributeMask.put("c_corr_0_it._type_", value);
			return this;
		}
		public CreateCorrs3Mask setAdmin(Long value) {
			nodeMask.put("admin", value);
			return this;
		}
		public CreateCorrs3Mask setAdminName(String value) {
			attributeMask.put("admin.name", value);
			return this;
		}
		public CreateCorrs3Mask setAdmin_corr_0_router_type_(String value) {
			attributeMask.put("admin_corr_0_router._type_", value);
			return this;
		}
		public CreateCorrs3Mask setIt(Long value) {
			nodeMask.put("it", value);
			return this;
		}
		public CreateCorrs3Mask setItName(String value) {
			attributeMask.put("it.name", value);
			return this;
		}
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.9
	public Model getModel_ConsistentSrc4(){
		return (Model) spec.getEntities().get(9);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.10
	public Model getModel_ConsistentTrg4(){
		return (Model) spec.getEntities().get(10);
	}
	
	//:~> platform:/resource/TestSuiteTGG/src/org/emoflon/neo/example/companytoit/CompanyToITTriplesForTesting.msl#//@entities.11
	public CreateCorrs4Access getRule_CreateCorrs4() {
		return new CreateCorrs4Access();
	}
	
	public class CreateCorrs4Access extends NeoRuleCoAccess<CreateCorrs4Data, CreateCorrs4CoData, CreateCorrs4Mask> {
		public final String _router = "router";
		public final String _computer = "computer";
		public final String _c = "c";
		public final String _admin = "admin";
		public final String _it = "it";
		public final String _employee = "employee";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs4Data(d));
		}
			
		@Override
		public Stream<CreateCorrs4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs4CoData(d));
		}
		
		@Override
		public CreateCorrs4Mask mask() {
			return new CreateCorrs4Mask();
		}
	}
	
	public class CreateCorrs4Data extends NeoData {
		public final RouterNode _router;
		public final ComputerNode _computer;
		public final CNode _c;
		public final AdminNode _admin;
		public final ItNode _it;
		public final EmployeeNode _employee;
		
		public CreateCorrs4Data(Record data) {
			var _router = data.get("router");
			this._router = new RouterNode(_router);
			var _computer = data.get("computer");
			this._computer = new ComputerNode(_computer);
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _admin = data.get("admin");
			this._admin = new AdminNode(_admin);
			var _it = data.get("it");
			this._it = new ItNode(_it);
			var _employee = data.get("employee");
			this._employee = new EmployeeNode(_employee);
		}
		
		
		public class RouterNode {
			public String _name;
			
			public RouterNode(Value _router) {
				if(!_router.get("name").isNull())
					this._name = _router.get("name").asString();
			}
		}
		
		public class ComputerNode {
			public String _name;
			
			public ComputerNode(Value _computer) {
				if(!_computer.get("name").isNull())
					this._name = _computer.get("name").asString();
			}
		}
		
		public class CNode {
			public String _name;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
			}
		}
		
		public class AdminNode {
			public String _name;
			
			public AdminNode(Value _admin) {
				if(!_admin.get("name").isNull())
					this._name = _admin.get("name").asString();
			}
		}
		
		public class ItNode {
			public String _name;
			
			public ItNode(Value _it) {
				if(!_it.get("name").isNull())
					this._name = _it.get("name").asString();
			}
		}
		
		public class EmployeeNode {
			public String _name;
			
			public EmployeeNode(Value _employee) {
				if(!_employee.get("name").isNull())
					this._name = _employee.get("name").asString();
			}
		}
		
	}
	
	public class CreateCorrs4CoData extends NeoData {
		public final RouterNode _router;
		public final ComputerNode _computer;
		public final CNode _c;
		public final C_corr_0_itRel _c_corr_0_it;
		public final AdminNode _admin;
		public final Admin_corr_0_routerRel _admin_corr_0_router;
		public final ItNode _it;
		public final EmployeeNode _employee;
		public final Employee_corr_0_computerRel _employee_corr_0_computer;
	
		public CreateCorrs4CoData(Record data) {
			var _router = data.get("router");
			this._router = new RouterNode(_router);
			var _computer = data.get("computer");
			this._computer = new ComputerNode(_computer);
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _c_corr_0_it = data.get("c_corr_0_it");
			this._c_corr_0_it = new C_corr_0_itRel(_c_corr_0_it);
			var _admin = data.get("admin");
			this._admin = new AdminNode(_admin);
			var _admin_corr_0_router = data.get("admin_corr_0_router");
			this._admin_corr_0_router = new Admin_corr_0_routerRel(_admin_corr_0_router);
			var _it = data.get("it");
			this._it = new ItNode(_it);
			var _employee = data.get("employee");
			this._employee = new EmployeeNode(_employee);
			var _employee_corr_0_computer = data.get("employee_corr_0_computer");
			this._employee_corr_0_computer = new Employee_corr_0_computerRel(_employee_corr_0_computer);
		}
		
	
		public class RouterNode {
			public String _name;
			
			public RouterNode(Value _router) {
				if(!_router.get("name").isNull())
					this._name = _router.get("name").asString();
			}
		}
		
		public class ComputerNode {
			public String _name;
			
			public ComputerNode(Value _computer) {
				if(!_computer.get("name").isNull())
					this._name = _computer.get("name").asString();
			}
		}
		
		public class CNode {
			public String _name;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
			}
		}
		
		public class C_corr_0_itRel {
			public String __type_;
		
			public C_corr_0_itRel(Value _c_corr_0_it) {
				if(!_c_corr_0_it.get("_type_").isNull())
					this.__type_ = _c_corr_0_it.get("_type_").asString();
			}
		}
		public class AdminNode {
			public String _name;
			
			public AdminNode(Value _admin) {
				if(!_admin.get("name").isNull())
					this._name = _admin.get("name").asString();
			}
		}
		
		public class Admin_corr_0_routerRel {
			public String __type_;
		
			public Admin_corr_0_routerRel(Value _admin_corr_0_router) {
				if(!_admin_corr_0_router.get("_type_").isNull())
					this.__type_ = _admin_corr_0_router.get("_type_").asString();
			}
		}
		public class ItNode {
			public String _name;
			
			public ItNode(Value _it) {
				if(!_it.get("name").isNull())
					this._name = _it.get("name").asString();
			}
		}
		
		public class EmployeeNode {
			public String _name;
			
			public EmployeeNode(Value _employee) {
				if(!_employee.get("name").isNull())
					this._name = _employee.get("name").asString();
			}
		}
		
		public class Employee_corr_0_computerRel {
			public String __type_;
		
			public Employee_corr_0_computerRel(Value _employee_corr_0_computer) {
				if(!_employee_corr_0_computer.get("_type_").isNull())
					this.__type_ = _employee_corr_0_computer.get("_type_").asString();
			}
		}
	}
	
	public class CreateCorrs4Mask extends NeoMask {
		public CreateCorrs4Mask setRouter(Long value) {
			nodeMask.put("router", value);
			return this;
		}
		public CreateCorrs4Mask setRouterName(String value) {
			attributeMask.put("router.name", value);
			return this;
		}
		public CreateCorrs4Mask setComputer(Long value) {
			nodeMask.put("computer", value);
			return this;
		}
		public CreateCorrs4Mask setComputerName(String value) {
			attributeMask.put("computer.name", value);
			return this;
		}
		public CreateCorrs4Mask setC(Long value) {
			nodeMask.put("c", value);
			return this;
		}
		public CreateCorrs4Mask setCName(String value) {
			attributeMask.put("c.name", value);
			return this;
		}
		public CreateCorrs4Mask setC_corr_0_it_type_(String value) {
			attributeMask.put("c_corr_0_it._type_", value);
			return this;
		}
		public CreateCorrs4Mask setAdmin(Long value) {
			nodeMask.put("admin", value);
			return this;
		}
		public CreateCorrs4Mask setAdminName(String value) {
			attributeMask.put("admin.name", value);
			return this;
		}
		public CreateCorrs4Mask setAdmin_corr_0_router_type_(String value) {
			attributeMask.put("admin_corr_0_router._type_", value);
			return this;
		}
		public CreateCorrs4Mask setIt(Long value) {
			nodeMask.put("it", value);
			return this;
		}
		public CreateCorrs4Mask setItName(String value) {
			attributeMask.put("it.name", value);
			return this;
		}
		public CreateCorrs4Mask setEmployee(Long value) {
			nodeMask.put("employee", value);
			return this;
		}
		public CreateCorrs4Mask setEmployeeName(String value) {
			attributeMask.put("employee.name", value);
			return this;
		}
		public CreateCorrs4Mask setEmployee_corr_0_computer_type_(String value) {
			attributeMask.put("employee_corr_0_computer._type_", value);
			return this;
		}
	}
}
