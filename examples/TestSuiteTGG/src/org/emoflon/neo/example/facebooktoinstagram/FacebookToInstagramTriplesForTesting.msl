import "platform:/resource/FacebookToInstagram/src/Facebook.msl"
import "platform:/resource/FacebookToInstagram/src/Instagram.msl"

// 1.

model ConsistentSrc1 {
	fn : FacebookLanguage.Network {
		.description : "A network"
	}
}

model ConsistentTrg1 {
	in : InstagramLanguage.Network {
		.description : "A network"
	}
}

rule createCorrs1 {
	fn : FacebookLanguage.Network {
		.description : "A network"
		++ -corr-> in {
			._type_ := "NetworkToNetwork"
		}
	}
	
	in : InstagramLanguage.Network {
		.description : "A network"
	}
}

// 2.

model ConsistentSrc2 -> ConsistentSrc1 {
	fn : FacebookLanguage.Network {
		-users-> fu
	}
	
	fu : FacebookLanguage.User {
		.name : "Heinz"
	}
}

model ConsistentTrg2 -> ConsistentTrg1 {
	in : InstagramLanguage.Network {
		-users-> iu
	}
	
	iu : InstagramLanguage.User {
		.name : "Heinz"
	}
}

rule createCorrs2 -> createCorrs1 {
	fn : FacebookLanguage.Network {
		-users-> fu
	}
	
	fu : FacebookLanguage.User {
		.name : "Heinz"
		++ -corr-> iu {
			._type_ := "FbUserToInUser"
		}
	}
	
	in : InstagramLanguage.Network {
		-users-> iu
	}
	
	iu : InstagramLanguage.User {
		.name : "Heinz"
	}
}

// 3.

model ConsistentSrc3 -> ConsistentSrc2[fu -> fu1] {
	fn : FacebookLanguage.Network {
		-users-> fu2
		-friendships-> friendship
	}
	
	fu1 : FacebookLanguage.User
	
	fu2 : FacebookLanguage.User {
		.name : "Otto"
	}
	
	friendship : Friendship {
		-friends-> fu1
		-friends-> fu2
	}
}

model ConsistentTrg3 -> ConsistentTrg2[iu -> iu1] {
	in : InstagramLanguage.Network {
		-users-> iu2
	}
	
	iu1 : InstagramLanguage.User {
		-follows-> iu2
	}
	
	iu2 : InstagramLanguage.User {
		.name : "Otto"
		-follows-> iu1
	}
}

rule createCorrs3 -> createCorrs2[fu -> fu1, iu -> iu1] {
	fn : FacebookLanguage.Network {
		-users-> fu2
	}
	
	fu2 : FacebookLanguage.User {
		.name : "Otto"
		++ -corr-> iu2 {
			._type_ := "FbUserToInUser"
		}
	}
	
	in : InstagramLanguage.Network {
		-users-> iu2
	}
	
	iu2 : InstagramLanguage.User {
		.name : "Otto"
	}
}