import "platform:/resource/CompanyToIT/src/metamodels/IT.msl"
import "platform:/resource/CompanyToIT/src/metamodels/Company.msl"

model ConsistentSource1{
	c: Company{
		.name : "Fraunhofer"
		-ceo-> ceo1
		-admin-> a1
		-employee-> e1
		-employee-> e2
	}
	
	e1: Employee{
		.name : "Mario"
	}
	
	e2: Employee{
		.name : "Michael"
	}	
	
	ceo1: CEO {
		-employee-> e1
		-employee-> e2
		.name : "Fraunhofer"
	}
	
	a1 : Admin {
		-ceo-> ceo1
		.name : "Friedhelm"
	}
}

model ConsistentTarget1{
	it : IT {
		-network-> network
		-router-> router
		.name : "Fraunhofer"
	}
	
	network : Network {
		.name : "Friedhelm"
		-laptop->l1
		-laptop->l2
	}
	
	router : Router {
		.name : "Friedhelm"
		-network->network
	}
	
	l1 : Laptop{
		.name : "Laptop1"
	}
	
	l2 : Laptop{
		.name : "Laptop2"
	}
}

rule ConsistentTriple1{
	c: Company{
		.name : "Fraunhofer"
		++ -corr-> it{
			._type_ := "CompanyToIT"
		}
	}
	
	a1: Admin {
		.name : "Friedhelm"
		++ -corr-> router{
			._type_ := "AdminToRouter"
		}
	}
	
	e1: Employee{
		.name : "Mario"
		++ -corr-> l1{
			._type_ := "EmployeeToLaptop"
		}
	}
	
	e2: Employee{
		.name : "Michael"
		++ -corr-> l2{
			._type_ := "EmployeeToLaptop"
		}
	}

	it : IT {
		.name : "Fraunhofer"
	}
	
	router : Router{
		.name : "Friedhelm"
	}
	
	network : Network{
		.name : "Friedhelm"
	}
	
	l1 : Laptop{
		.name : "Laptop1"
	}
	
	l2 : Laptop{
		.name : "Laptop2"
	}
}

model InConsistentTarget1{
	it : IT {
		.name : "Fraunhofer"
		-network-> network
	}
	
	network : Network {
		.name : "AnyNetwork"
		-laptop->l1
	}
	
	l1 : Laptop{
		.name : "Laptop1"
	}
}

rule InConsistentTriple1{
	it : IT {
		.name : "Fraunhofer"
		++ -corr-> c{
			._type_ := "CompanyToIT"
		}
	}
	
	l1 : Laptop{
		.name : "Laptop1"
		++ -corr-> e1{
			._type_ := "EmployeeToLaptop"
		}
	}
	
	c: Company{
		.name : "Fraunhofer"
	}
	
	e1: Employee{
		.name : "Mario"
	}
}

model InConsistentSource1{
	c: Company{
		.name : "Fraunhofer"
		-employee-> e1
	}
	
	e1: Employee{
		.name : "Mario"
	}
}

model ConsistentSource2{
	c: Company{
		.name: "Fraunhofer"
		-admin->ad
	}
	
	ad: Admin{
		.name : "Rene"
	}
}

model ConsistentTarget2{
	it: IT{
		.name : "Fraunhofer"
		-router->rout
	}
	
	rout: Router{
		.name : "Router1"
		-network->net
	}
	
	net: Network{
		.name : "AnyNetwork"
	}
}

rule ConsistentTriple2{
	it: IT{
		.name : "Fraunhofer"
		++ -corr->c{
			._type_ := "CompanyToIT"
		}
	}
	
	rout: Router{
		.name : "Router1"
		++ -corr->ad{
			._type_ := "AdminToRouter"
		}
	}
	
	c: Company{
		.name: "Fraunhofer"
	}
	
	ad: Admin{
		.name : "Rene"
	}
}

model InConsistentTarget2{
	it: IT{
		.name : "Fraunhofer"
		-router->rout
	}
	
	rout: Router{
		.name : "Router1"
		-network->net
		-network->net1
	}
	
	net: Network{
		.name : "AnyNetwork"
	}
	
	net1: Network{
		.name : "Network2"
	}
}

model ConsistentSource3{
	c: Company{
		.name: "Fraunhofer"
		-admin->ad
	}
	
	ad: Admin{
		.name : "Rene"
		-ceo->ceo
	}
	
	ceo: CEO{
		.name : "Julius"
	}
}

model ConsistentTarget3{
	it: IT{
		.name: "Fraunhofer"
		-router->rout
	}
	
	rout: Router{
		.name: "Router1"
	}
}

model InConsistentSource3{
	c: Company{
		.name: "Fraunhofer"
		-admin->ad
	}
	
	ad: Admin{
		.name : "Rene"
		-ceo->ceo
		-ceo->ceo2
	}
	
	ceo: CEO{
		.name : "Julius"
	}
	
	ceo2: CEO{
		.name : "kai"
	}
}