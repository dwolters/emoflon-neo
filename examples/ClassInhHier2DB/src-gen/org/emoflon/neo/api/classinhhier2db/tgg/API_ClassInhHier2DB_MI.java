/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_ClassInhHier2DB_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_ClassInhHier2DB_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_ClassInhHier2DB_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_ClassInhHier2DB_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForClassInhHier2DB_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_PackageToDatabaseRule().rule());
		rules.add(getRule_PackageToDatabaseRule_1().rule());
		rules.add(getRule_PackageToDatabaseRule_3().rule());
		rules.add(getRule_PackageToDatabaseRule_5().rule());
		rules.add(getRule_ClassToTableRule().rule());
		rules.add(getRule_ClassToTableRule_1().rule());
		rules.add(getRule_ClassToTableRule_2().rule());
		rules.add(getRule_ClassToTableRule_3().rule());
		rules.add(getRule_ClassToTableRule_7().rule());
		rules.add(getRule_ClassToTableRule_16().rule());
		rules.add(getRule_ClassToTableRule_17().rule());
		rules.add(getRule_ClassToTableRule_25().rule());
		rules.add(getRule_SubClassToTableRule().rule());
		rules.add(getRule_SubClassToTableRule_1().rule());
		rules.add(getRule_SubClassToTableRule_4().rule());
		rules.add(getRule_SubClassToTableRule_5().rule());
		rules.add(getRule_SubClassToTableRule_8().rule());
		rules.add(getRule_SubClassToTableRule_9().rule());
		rules.add(getRule_SubClassToTableRule_12().rule());
		rules.add(getRule_SubClassToTableRule_13().rule());
		rules.add(getRule_AttributeToColumnRule().rule());
		rules.add(getRule_AttributeToColumnRule_1().rule());
		rules.add(getRule_AttributeToColumnRule_4().rule());
		rules.add(getRule_AttributeToColumnRule_5().rule());
		rules.add(getRule_AttributeToColumnRule_7().rule());
		rules.add(getRule_AttributeToColumnRule_8().rule());
		rules.add(getRule_AttributeToColumnRule_9().rule());
		rules.add(getRule_AttributeToColumnRule_25().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForClassInhHier2DB_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForClassInhHier2DB_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.1
	public PackageToDatabaseRuleAccess getRule_PackageToDatabaseRule() {
		return new PackageToDatabaseRuleAccess();
	}
	
	public class PackageToDatabaseRuleAccess extends NeoRuleCoAccess<PackageToDatabaseRuleData, PackageToDatabaseRuleCoData, PackageToDatabaseRuleMask> {
		public final String _classpackage = "classpackage";
		public final String _db = "db";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PackageToDatabaseRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRuleData(d));
		}
			
		@Override
		public Stream<PackageToDatabaseRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRuleCoData(d));
		}
		
		@Override
		public PackageToDatabaseRuleMask mask() {
			return new PackageToDatabaseRuleMask();
		}
	}
	
	public class PackageToDatabaseRuleData extends NeoData {
		public PackageToDatabaseRuleData(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRuleCoData extends NeoData {
		public PackageToDatabaseRuleCoData(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.2
	public PackageToDatabaseRule_1Access getRule_PackageToDatabaseRule_1() {
		return new PackageToDatabaseRule_1Access();
	}
	
	public class PackageToDatabaseRule_1Access extends NeoRuleCoAccess<PackageToDatabaseRule_1Data, PackageToDatabaseRule_1CoData, PackageToDatabaseRule_1Mask> {
		public final String _classpackage = "classpackage";
		public final String _db = "db";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PackageToDatabaseRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRule_1Data(d));
		}
			
		@Override
		public Stream<PackageToDatabaseRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRule_1CoData(d));
		}
		
		@Override
		public PackageToDatabaseRule_1Mask mask() {
			return new PackageToDatabaseRule_1Mask();
		}
	}
	
	public class PackageToDatabaseRule_1Data extends NeoData {
		public PackageToDatabaseRule_1Data(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRule_1CoData extends NeoData {
		public PackageToDatabaseRule_1CoData(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.3
	public PackageToDatabaseRule_3Access getRule_PackageToDatabaseRule_3() {
		return new PackageToDatabaseRule_3Access();
	}
	
	public class PackageToDatabaseRule_3Access extends NeoRuleCoAccess<PackageToDatabaseRule_3Data, PackageToDatabaseRule_3CoData, PackageToDatabaseRule_3Mask> {
		public final String _classpackage = "classpackage";
		public final String _db = "db";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PackageToDatabaseRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRule_3Data(d));
		}
			
		@Override
		public Stream<PackageToDatabaseRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRule_3CoData(d));
		}
		
		@Override
		public PackageToDatabaseRule_3Mask mask() {
			return new PackageToDatabaseRule_3Mask();
		}
	}
	
	public class PackageToDatabaseRule_3Data extends NeoData {
		public PackageToDatabaseRule_3Data(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRule_3CoData extends NeoData {
		public PackageToDatabaseRule_3CoData(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.4
	public PackageToDatabaseRule_5Access getRule_PackageToDatabaseRule_5() {
		return new PackageToDatabaseRule_5Access();
	}
	
	public class PackageToDatabaseRule_5Access extends NeoRuleCoAccess<PackageToDatabaseRule_5Data, PackageToDatabaseRule_5CoData, PackageToDatabaseRule_5Mask> {
		public final String _classpackage = "classpackage";
		public final String _db = "db";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PackageToDatabaseRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRule_5Data(d));
		}
			
		@Override
		public Stream<PackageToDatabaseRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageToDatabaseRule_5CoData(d));
		}
		
		@Override
		public PackageToDatabaseRule_5Mask mask() {
			return new PackageToDatabaseRule_5Mask();
		}
	}
	
	public class PackageToDatabaseRule_5Data extends NeoData {
		public PackageToDatabaseRule_5Data(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRule_5CoData extends NeoData {
		public PackageToDatabaseRule_5CoData(Record data) {
		
		}
	}
	
	public class PackageToDatabaseRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.5
	public ClassToTableRuleAccess getRule_ClassToTableRule() {
		return new ClassToTableRuleAccess();
	}
	
	public class ClassToTableRuleAccess extends NeoRuleCoAccess<ClassToTableRuleData, ClassToTableRuleCoData, ClassToTableRuleMask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRuleData(d));
		}
			
		@Override
		public Stream<ClassToTableRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRuleCoData(d));
		}
		
		@Override
		public ClassToTableRuleMask mask() {
			return new ClassToTableRuleMask();
		}
	}
	
	public class ClassToTableRuleData extends NeoData {
		public ClassToTableRuleData(Record data) {
		
		}
	}
	
	public class ClassToTableRuleCoData extends NeoData {
		public ClassToTableRuleCoData(Record data) {
		
		}
	}
	
	public class ClassToTableRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.6
	public ClassToTableRule_1Access getRule_ClassToTableRule_1() {
		return new ClassToTableRule_1Access();
	}
	
	public class ClassToTableRule_1Access extends NeoRuleCoAccess<ClassToTableRule_1Data, ClassToTableRule_1CoData, ClassToTableRule_1Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_1Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_1CoData(d));
		}
		
		@Override
		public ClassToTableRule_1Mask mask() {
			return new ClassToTableRule_1Mask();
		}
	}
	
	public class ClassToTableRule_1Data extends NeoData {
		public ClassToTableRule_1Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_1CoData extends NeoData {
		public ClassToTableRule_1CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.7
	public ClassToTableRule_2Access getRule_ClassToTableRule_2() {
		return new ClassToTableRule_2Access();
	}
	
	public class ClassToTableRule_2Access extends NeoRuleCoAccess<ClassToTableRule_2Data, ClassToTableRule_2CoData, ClassToTableRule_2Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_2Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_2CoData(d));
		}
		
		@Override
		public ClassToTableRule_2Mask mask() {
			return new ClassToTableRule_2Mask();
		}
	}
	
	public class ClassToTableRule_2Data extends NeoData {
		public ClassToTableRule_2Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_2CoData extends NeoData {
		public ClassToTableRule_2CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.8
	public ClassToTableRule_3Access getRule_ClassToTableRule_3() {
		return new ClassToTableRule_3Access();
	}
	
	public class ClassToTableRule_3Access extends NeoRuleCoAccess<ClassToTableRule_3Data, ClassToTableRule_3CoData, ClassToTableRule_3Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_3Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_3CoData(d));
		}
		
		@Override
		public ClassToTableRule_3Mask mask() {
			return new ClassToTableRule_3Mask();
		}
	}
	
	public class ClassToTableRule_3Data extends NeoData {
		public ClassToTableRule_3Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_3CoData extends NeoData {
		public ClassToTableRule_3CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.9
	public ClassToTableRule_7Access getRule_ClassToTableRule_7() {
		return new ClassToTableRule_7Access();
	}
	
	public class ClassToTableRule_7Access extends NeoRuleCoAccess<ClassToTableRule_7Data, ClassToTableRule_7CoData, ClassToTableRule_7Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_7Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_7CoData(d));
		}
		
		@Override
		public ClassToTableRule_7Mask mask() {
			return new ClassToTableRule_7Mask();
		}
	}
	
	public class ClassToTableRule_7Data extends NeoData {
		public ClassToTableRule_7Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_7CoData extends NeoData {
		public ClassToTableRule_7CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.10
	public ClassToTableRule_16Access getRule_ClassToTableRule_16() {
		return new ClassToTableRule_16Access();
	}
	
	public class ClassToTableRule_16Access extends NeoRuleCoAccess<ClassToTableRule_16Data, ClassToTableRule_16CoData, ClassToTableRule_16Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_16Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_16CoData(d));
		}
		
		@Override
		public ClassToTableRule_16Mask mask() {
			return new ClassToTableRule_16Mask();
		}
	}
	
	public class ClassToTableRule_16Data extends NeoData {
		public ClassToTableRule_16Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_16CoData extends NeoData {
		public ClassToTableRule_16CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.11
	public ClassToTableRule_17Access getRule_ClassToTableRule_17() {
		return new ClassToTableRule_17Access();
	}
	
	public class ClassToTableRule_17Access extends NeoRuleCoAccess<ClassToTableRule_17Data, ClassToTableRule_17CoData, ClassToTableRule_17Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_17Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_17CoData(d));
		}
		
		@Override
		public ClassToTableRule_17Mask mask() {
			return new ClassToTableRule_17Mask();
		}
	}
	
	public class ClassToTableRule_17Data extends NeoData {
		public ClassToTableRule_17Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_17CoData extends NeoData {
		public ClassToTableRule_17CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.12
	public ClassToTableRule_25Access getRule_ClassToTableRule_25() {
		return new ClassToTableRule_25Access();
	}
	
	public class ClassToTableRule_25Access extends NeoRuleCoAccess<ClassToTableRule_25Data, ClassToTableRule_25CoData, ClassToTableRule_25Mask> {
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _db = "db";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClassToTableRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_25Data(d));
		}
			
		@Override
		public Stream<ClassToTableRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClassToTableRule_25CoData(d));
		}
		
		@Override
		public ClassToTableRule_25Mask mask() {
			return new ClassToTableRule_25Mask();
		}
	}
	
	public class ClassToTableRule_25Data extends NeoData {
		public ClassToTableRule_25Data(Record data) {
		
		}
	}
	
	public class ClassToTableRule_25CoData extends NeoData {
		public ClassToTableRule_25CoData(Record data) {
		
		}
	}
	
	public class ClassToTableRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.13
	public SubClassToTableRuleAccess getRule_SubClassToTableRule() {
		return new SubClassToTableRuleAccess();
	}
	
	public class SubClassToTableRuleAccess extends NeoRuleCoAccess<SubClassToTableRuleData, SubClassToTableRuleCoData, SubClassToTableRuleMask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRuleData(d));
		}
			
		@Override
		public Stream<SubClassToTableRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRuleCoData(d));
		}
		
		@Override
		public SubClassToTableRuleMask mask() {
			return new SubClassToTableRuleMask();
		}
	}
	
	public class SubClassToTableRuleData extends NeoData {
		public SubClassToTableRuleData(Record data) {
		
		}
	}
	
	public class SubClassToTableRuleCoData extends NeoData {
		public SubClassToTableRuleCoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.14
	public SubClassToTableRule_1Access getRule_SubClassToTableRule_1() {
		return new SubClassToTableRule_1Access();
	}
	
	public class SubClassToTableRule_1Access extends NeoRuleCoAccess<SubClassToTableRule_1Data, SubClassToTableRule_1CoData, SubClassToTableRule_1Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_1Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_1CoData(d));
		}
		
		@Override
		public SubClassToTableRule_1Mask mask() {
			return new SubClassToTableRule_1Mask();
		}
	}
	
	public class SubClassToTableRule_1Data extends NeoData {
		public SubClassToTableRule_1Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_1CoData extends NeoData {
		public SubClassToTableRule_1CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.15
	public SubClassToTableRule_4Access getRule_SubClassToTableRule_4() {
		return new SubClassToTableRule_4Access();
	}
	
	public class SubClassToTableRule_4Access extends NeoRuleCoAccess<SubClassToTableRule_4Data, SubClassToTableRule_4CoData, SubClassToTableRule_4Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_4Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_4CoData(d));
		}
		
		@Override
		public SubClassToTableRule_4Mask mask() {
			return new SubClassToTableRule_4Mask();
		}
	}
	
	public class SubClassToTableRule_4Data extends NeoData {
		public SubClassToTableRule_4Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_4CoData extends NeoData {
		public SubClassToTableRule_4CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.16
	public SubClassToTableRule_5Access getRule_SubClassToTableRule_5() {
		return new SubClassToTableRule_5Access();
	}
	
	public class SubClassToTableRule_5Access extends NeoRuleCoAccess<SubClassToTableRule_5Data, SubClassToTableRule_5CoData, SubClassToTableRule_5Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_5Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_5CoData(d));
		}
		
		@Override
		public SubClassToTableRule_5Mask mask() {
			return new SubClassToTableRule_5Mask();
		}
	}
	
	public class SubClassToTableRule_5Data extends NeoData {
		public SubClassToTableRule_5Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_5CoData extends NeoData {
		public SubClassToTableRule_5CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.17
	public SubClassToTableRule_8Access getRule_SubClassToTableRule_8() {
		return new SubClassToTableRule_8Access();
	}
	
	public class SubClassToTableRule_8Access extends NeoRuleCoAccess<SubClassToTableRule_8Data, SubClassToTableRule_8CoData, SubClassToTableRule_8Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_8Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_8CoData(d));
		}
		
		@Override
		public SubClassToTableRule_8Mask mask() {
			return new SubClassToTableRule_8Mask();
		}
	}
	
	public class SubClassToTableRule_8Data extends NeoData {
		public SubClassToTableRule_8Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_8CoData extends NeoData {
		public SubClassToTableRule_8CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.18
	public SubClassToTableRule_9Access getRule_SubClassToTableRule_9() {
		return new SubClassToTableRule_9Access();
	}
	
	public class SubClassToTableRule_9Access extends NeoRuleCoAccess<SubClassToTableRule_9Data, SubClassToTableRule_9CoData, SubClassToTableRule_9Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_9Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_9CoData(d));
		}
		
		@Override
		public SubClassToTableRule_9Mask mask() {
			return new SubClassToTableRule_9Mask();
		}
	}
	
	public class SubClassToTableRule_9Data extends NeoData {
		public SubClassToTableRule_9Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_9CoData extends NeoData {
		public SubClassToTableRule_9CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.19
	public SubClassToTableRule_12Access getRule_SubClassToTableRule_12() {
		return new SubClassToTableRule_12Access();
	}
	
	public class SubClassToTableRule_12Access extends NeoRuleCoAccess<SubClassToTableRule_12Data, SubClassToTableRule_12CoData, SubClassToTableRule_12Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_12Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_12Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_12CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_12CoData(d));
		}
		
		@Override
		public SubClassToTableRule_12Mask mask() {
			return new SubClassToTableRule_12Mask();
		}
	}
	
	public class SubClassToTableRule_12Data extends NeoData {
		public SubClassToTableRule_12Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_12CoData extends NeoData {
		public SubClassToTableRule_12CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_12Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.20
	public SubClassToTableRule_13Access getRule_SubClassToTableRule_13() {
		return new SubClassToTableRule_13Access();
	}
	
	public class SubClassToTableRule_13Access extends NeoRuleCoAccess<SubClassToTableRule_13Data, SubClassToTableRule_13CoData, SubClassToTableRule_13Mask> {
		public final String _subClazz = "subClazz";
		public final String _classpackage = "classpackage";
		public final String _clazz = "clazz";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClassToTableRule_13Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_13Data(d));
		}
			
		@Override
		public Stream<SubClassToTableRule_13CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClassToTableRule_13CoData(d));
		}
		
		@Override
		public SubClassToTableRule_13Mask mask() {
			return new SubClassToTableRule_13Mask();
		}
	}
	
	public class SubClassToTableRule_13Data extends NeoData {
		public SubClassToTableRule_13Data(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_13CoData extends NeoData {
		public SubClassToTableRule_13CoData(Record data) {
		
		}
	}
	
	public class SubClassToTableRule_13Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.21
	public AttributeToColumnRuleAccess getRule_AttributeToColumnRule() {
		return new AttributeToColumnRuleAccess();
	}
	
	public class AttributeToColumnRuleAccess extends NeoRuleCoAccess<AttributeToColumnRuleData, AttributeToColumnRuleCoData, AttributeToColumnRuleMask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRuleData(d));
		}
			
		@Override
		public Stream<AttributeToColumnRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRuleCoData(d));
		}
		
		@Override
		public AttributeToColumnRuleMask mask() {
			return new AttributeToColumnRuleMask();
		}
	}
	
	public class AttributeToColumnRuleData extends NeoData {
		public AttributeToColumnRuleData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRuleCoData extends NeoData {
		public AttributeToColumnRuleCoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.22
	public AttributeToColumnRule_1Access getRule_AttributeToColumnRule_1() {
		return new AttributeToColumnRule_1Access();
	}
	
	public class AttributeToColumnRule_1Access extends NeoRuleCoAccess<AttributeToColumnRule_1Data, AttributeToColumnRule_1CoData, AttributeToColumnRule_1Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_1Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_1CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_1Mask mask() {
			return new AttributeToColumnRule_1Mask();
		}
	}
	
	public class AttributeToColumnRule_1Data extends NeoData {
		public AttributeToColumnRule_1Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_1CoData extends NeoData {
		public AttributeToColumnRule_1CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.23
	public AttributeToColumnRule_4Access getRule_AttributeToColumnRule_4() {
		return new AttributeToColumnRule_4Access();
	}
	
	public class AttributeToColumnRule_4Access extends NeoRuleCoAccess<AttributeToColumnRule_4Data, AttributeToColumnRule_4CoData, AttributeToColumnRule_4Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_4Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_4CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_4Mask mask() {
			return new AttributeToColumnRule_4Mask();
		}
	}
	
	public class AttributeToColumnRule_4Data extends NeoData {
		public AttributeToColumnRule_4Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_4CoData extends NeoData {
		public AttributeToColumnRule_4CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.24
	public AttributeToColumnRule_5Access getRule_AttributeToColumnRule_5() {
		return new AttributeToColumnRule_5Access();
	}
	
	public class AttributeToColumnRule_5Access extends NeoRuleCoAccess<AttributeToColumnRule_5Data, AttributeToColumnRule_5CoData, AttributeToColumnRule_5Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_5Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_5CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_5Mask mask() {
			return new AttributeToColumnRule_5Mask();
		}
	}
	
	public class AttributeToColumnRule_5Data extends NeoData {
		public AttributeToColumnRule_5Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_5CoData extends NeoData {
		public AttributeToColumnRule_5CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.25
	public AttributeToColumnRule_7Access getRule_AttributeToColumnRule_7() {
		return new AttributeToColumnRule_7Access();
	}
	
	public class AttributeToColumnRule_7Access extends NeoRuleCoAccess<AttributeToColumnRule_7Data, AttributeToColumnRule_7CoData, AttributeToColumnRule_7Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_7Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_7CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_7Mask mask() {
			return new AttributeToColumnRule_7Mask();
		}
	}
	
	public class AttributeToColumnRule_7Data extends NeoData {
		public AttributeToColumnRule_7Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_7CoData extends NeoData {
		public AttributeToColumnRule_7CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.26
	public AttributeToColumnRule_8Access getRule_AttributeToColumnRule_8() {
		return new AttributeToColumnRule_8Access();
	}
	
	public class AttributeToColumnRule_8Access extends NeoRuleCoAccess<AttributeToColumnRule_8Data, AttributeToColumnRule_8CoData, AttributeToColumnRule_8Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_8Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_8CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_8Mask mask() {
			return new AttributeToColumnRule_8Mask();
		}
	}
	
	public class AttributeToColumnRule_8Data extends NeoData {
		public AttributeToColumnRule_8Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_8CoData extends NeoData {
		public AttributeToColumnRule_8CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.27
	public AttributeToColumnRule_9Access getRule_AttributeToColumnRule_9() {
		return new AttributeToColumnRule_9Access();
	}
	
	public class AttributeToColumnRule_9Access extends NeoRuleCoAccess<AttributeToColumnRule_9Data, AttributeToColumnRule_9CoData, AttributeToColumnRule_9Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_9Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_9CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_9Mask mask() {
			return new AttributeToColumnRule_9Mask();
		}
	}
	
	public class AttributeToColumnRule_9Data extends NeoData {
		public AttributeToColumnRule_9Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_9CoData extends NeoData {
		public AttributeToColumnRule_9CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/tgg/ClassInhHier2DB_MI.msl#//@entities.28
	public AttributeToColumnRule_25Access getRule_AttributeToColumnRule_25() {
		return new AttributeToColumnRule_25Access();
	}
	
	public class AttributeToColumnRule_25Access extends NeoRuleCoAccess<AttributeToColumnRule_25Data, AttributeToColumnRule_25CoData, AttributeToColumnRule_25Mask> {
		public final String _clazz = "clazz";
		public final String _attribute = "attribute";
		public final String _column = "column";
		public final String _table = "table";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AttributeToColumnRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_25Data(d));
		}
			
		@Override
		public Stream<AttributeToColumnRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttributeToColumnRule_25CoData(d));
		}
		
		@Override
		public AttributeToColumnRule_25Mask mask() {
			return new AttributeToColumnRule_25Mask();
		}
	}
	
	public class AttributeToColumnRule_25Data extends NeoData {
		public AttributeToColumnRule_25Data(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_25CoData extends NeoData {
		public AttributeToColumnRule_25CoData(Record data) {
		
		}
	}
	
	public class AttributeToColumnRule_25Mask extends NeoMask {
	}
}
