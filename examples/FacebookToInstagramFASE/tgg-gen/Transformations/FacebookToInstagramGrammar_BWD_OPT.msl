import "platform:/resource/FacebookToInstagramFASE/src/Facebook.msl"
import "platform:/resource/FacebookToInstagramFASE/src/Instagram.msl"

grammar FacebookToInstagramGrammar__BWD_OPT {
	createSrcModel
	NetworkToNetwork
	UserToUser
	RequestFriendship
	AcceptFriendship
}

rule createSrcModel {
	++ srcM : Model {
		.ename := <__srcModelName>
		++ -conformsTo-> mmFacebookLanguage
	}

	mmFacebookLanguage : MetaModel {
		.ename : "FacebookLanguage"
	}
} when forbid srcModelExists

pattern srcModelExists {
	srcM : Model {
		.ename : <__srcModelName>
	}
}


rule NetworkToNetwork {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	++fl:FacebookLanguage.Network {
		++-elementOf->srcM
		++-corr->il
		{
			._type_ := "NetworkToNetwork"
		}
		.description : il::description
	}

	il:InstagramLanguage.Network {
		-elementOf->trgM
	}
} 


rule UserToUser {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	++fu:FacebookLanguage.User {
		++-elementOf->srcM
		++-corr->iu
		{
			._type_ := "FbUserToInUser"
		}
	}
	
	fn:FacebookLanguage.Network {
		-elementOf->srcM
		++-users->fu
		-corr->in
		{
			._type_ : "NetworkToNetwork"
		}
	}

	iu:InstagramLanguage.User {
		-elementOf->trgM
		.name : fu::name
	}
	
	in:InstagramLanguage.Network {
		-elementOf->trgM
		-users->iu
	}
} 


rule RequestFriendship {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	fu1:FacebookLanguage.User {
		-elementOf->srcM
		-corr->iu1
		{
			._type_ : "FbUserToInUser"
		}
	}
	
	fu2:FacebookLanguage.User {
		-elementOf->srcM
		-corr->iu2
		{
			._type_ : "FbUserToInUser"
		}
	}
	
	fn:FacebookLanguage.Network {
		-elementOf->srcM
		-users->fu1
		-users->fu2
		-corr->in
		{
			._type_ : "NetworkToNetwork"
		}
	}

	in:InstagramLanguage.Network {
		-elementOf->trgM
		-users->iu1
		-users->iu2
	}
	
	iu1:InstagramLanguage.User {
		-elementOf->trgM
		-follows->iu2
	}
	
	iu2:InstagramLanguage.User {
		-elementOf->trgM
	}
} 


rule AcceptFriendship {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	fu1:FacebookLanguage.User {
		-elementOf->srcM
		-corr->iu1
		{
			._type_ : "FbUserToInUser"
		}
	}
	
	fu2:FacebookLanguage.User {
		-elementOf->srcM
		-corr->iu2
		{
			._type_ : "FbUserToInUser"
		}
	}
	
	fn:FacebookLanguage.Network {
		-elementOf->srcM
		-users->fu1
		-users->fu2
		++-friendships->fri
		-corr->in
		{
			._type_ : "NetworkToNetwork"
		}
	}
	
	++fri:Friendship {
		++-elementOf->srcM
		++-friends->fu1
		++-friends->fu2
	}

	iu1:InstagramLanguage.User {
		-elementOf->trgM
		-follows->iu2
	}
	
	iu2:InstagramLanguage.User {
		-elementOf->trgM
		-follows->iu1
	}
	
	in:InstagramLanguage.Network {
		-elementOf->trgM
		-users->iu1
		-users->iu2
	}
} 

