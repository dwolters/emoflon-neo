/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.tgg-gen.rules.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_SokobanImportExport_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_SokobanImportExport_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_SokobanImportExport_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_SokobanImportExport_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForSokobanImportExport_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_BoardEndEntryRule().rule());
		rules.add(getRule_BoardEndEntryRule_1().rule());
		rules.add(getRule_BoardEndEntryRule_2().rule());
		rules.add(getRule_BoardEndEntryRule_3().rule());
		rules.add(getRule_BoardEndEntryRule_16().rule());
		rules.add(getRule_BoardEndEntryRule_17().rule());
		rules.add(getRule_BoardEndEntryRule_18().rule());
		rules.add(getRule_BoardEndEntryRule_19().rule());
		rules.add(getRule_BoardEndEntryRule_22().rule());
		rules.add(getRule_BoardEndEntryRule_23().rule());
		rules.add(getRule_BoardEndEntryRule_25().rule());
		rules.add(getRule_BoardEndEntryRule_27().rule());
		rules.add(getRule_BoardEndEntryRule_31().rule());
		rules.add(getRule_BoardEndEntryRule_64().rule());
		rules.add(getRule_BoardEndEntryRule_65().rule());
		rules.add(getRule_BoardEndEntryRule_66().rule());
		rules.add(getRule_BoardEndEntryRule_67().rule());
		rules.add(getRule_BoardEndEntryRule_97().rule());
		rules.add(getRule_BoardEndEntryRule_99().rule());
		rules.add(getRule_BoardEndEntryRule_512().rule());
		rules.add(getRule_BoardEndEntryRule_513().rule());
		rules.add(getRule_BoardEndEntryRule_514().rule());
		rules.add(getRule_BoardEndEntryRule_515().rule());
		rules.add(getRule_BoardEndEntryRule_576().rule());
		rules.add(getRule_BoardEndEntryRule_577().rule());
		rules.add(getRule_BoardEndEntryRule_578().rule());
		rules.add(getRule_BoardEndEntryRule_579().rule());
		rules.add(getRule_BoardEndEntryRule_609().rule());
		rules.add(getRule_BoardEndEntryRule_611().rule());
		rules.add(getRule_BoardEndEntryRule_642().rule());
		rules.add(getRule_BoardEndEntryRule_643().rule());
		rules.add(getRule_BoardEndEntryRule_706().rule());
		rules.add(getRule_BoardEndEntryRule_707().rule());
		rules.add(getRule_BoardEndEntryRule_739().rule());
		rules.add(getRule_BoardEndEntryRule_832().rule());
		rules.add(getRule_BoardEndEntryRule_833().rule());
		rules.add(getRule_BoardEndEntryRule_834().rule());
		rules.add(getRule_BoardEndEntryRule_835().rule());
		rules.add(getRule_BoardEndEntryRule_865().rule());
		rules.add(getRule_BoardEndEntryRule_867().rule());
		rules.add(getRule_BoardEndEntryRule_962().rule());
		rules.add(getRule_BoardEndEntryRule_963().rule());
		rules.add(getRule_BoardEndEntryRule_995().rule());
		rules.add(getRule_BoardNormalEntryRule().rule());
		rules.add(getRule_BoardNormalEntryRule_1().rule());
		rules.add(getRule_BoardNormalEntryRule_2().rule());
		rules.add(getRule_BoardNormalEntryRule_3().rule());
		rules.add(getRule_BoardNormalEntryRule_16().rule());
		rules.add(getRule_BoardNormalEntryRule_17().rule());
		rules.add(getRule_BoardNormalEntryRule_18().rule());
		rules.add(getRule_BoardNormalEntryRule_19().rule());
		rules.add(getRule_BoardNormalEntryRule_22().rule());
		rules.add(getRule_BoardNormalEntryRule_23().rule());
		rules.add(getRule_BoardNormalEntryRule_25().rule());
		rules.add(getRule_BoardNormalEntryRule_27().rule());
		rules.add(getRule_BoardNormalEntryRule_31().rule());
		rules.add(getRule_BoardNormalEntryRule_64().rule());
		rules.add(getRule_BoardNormalEntryRule_65().rule());
		rules.add(getRule_BoardNormalEntryRule_66().rule());
		rules.add(getRule_BoardNormalEntryRule_67().rule());
		rules.add(getRule_BoardNormalEntryRule_97().rule());
		rules.add(getRule_BoardNormalEntryRule_99().rule());
		rules.add(getRule_BoardNormalEntryRule_512().rule());
		rules.add(getRule_BoardNormalEntryRule_513().rule());
		rules.add(getRule_BoardNormalEntryRule_514().rule());
		rules.add(getRule_BoardNormalEntryRule_515().rule());
		rules.add(getRule_BoardNormalEntryRule_576().rule());
		rules.add(getRule_BoardNormalEntryRule_577().rule());
		rules.add(getRule_BoardNormalEntryRule_578().rule());
		rules.add(getRule_BoardNormalEntryRule_579().rule());
		rules.add(getRule_BoardNormalEntryRule_609().rule());
		rules.add(getRule_BoardNormalEntryRule_611().rule());
		rules.add(getRule_BoardNormalEntryRule_642().rule());
		rules.add(getRule_BoardNormalEntryRule_643().rule());
		rules.add(getRule_BoardNormalEntryRule_706().rule());
		rules.add(getRule_BoardNormalEntryRule_707().rule());
		rules.add(getRule_BoardNormalEntryRule_739().rule());
		rules.add(getRule_BoardNormalEntryRule_832().rule());
		rules.add(getRule_BoardNormalEntryRule_833().rule());
		rules.add(getRule_BoardNormalEntryRule_834().rule());
		rules.add(getRule_BoardNormalEntryRule_835().rule());
		rules.add(getRule_BoardNormalEntryRule_865().rule());
		rules.add(getRule_BoardNormalEntryRule_867().rule());
		rules.add(getRule_BoardNormalEntryRule_962().rule());
		rules.add(getRule_BoardNormalEntryRule_963().rule());
		rules.add(getRule_BoardNormalEntryRule_995().rule());
		rules.add(getRule_FirstColAllRowsEnd().rule());
		rules.add(getRule_FirstColAllRowsEnd_1().rule());
		rules.add(getRule_FirstColAllRowsEnd_2().rule());
		rules.add(getRule_FirstColAllRowsEnd_3().rule());
		rules.add(getRule_FirstColAllRowsEnd_4().rule());
		rules.add(getRule_FirstColAllRowsEnd_5().rule());
		rules.add(getRule_FirstColAllRowsEnd_6().rule());
		rules.add(getRule_FirstColAllRowsEnd_7().rule());
		rules.add(getRule_FirstColAllRowsEnd_15().rule());
		rules.add(getRule_FirstColAllRowsEnd_16().rule());
		rules.add(getRule_FirstColAllRowsEnd_17().rule());
		rules.add(getRule_FirstColAllRowsEnd_64().rule());
		rules.add(getRule_FirstColAllRowsEnd_65().rule());
		rules.add(getRule_FirstColAllRowsEnd_80().rule());
		rules.add(getRule_FirstColAllRowsEnd_81().rule());
		rules.add(getRule_FirstColAllRowsEnd_112().rule());
		rules.add(getRule_FirstColAllRowsEnd_113().rule());
		rules.add(getRule_FirstColAllRowsEnd_193().rule());
		rules.add(getRule_FirstColAllRowsEnd_209().rule());
		rules.add(getRule_FirstColAllRowsEnd_241().rule());
		rules.add(getRule_FirstColAllRowsNormal().rule());
		rules.add(getRule_FirstColAllRowsNormal_1().rule());
		rules.add(getRule_FirstColAllRowsNormal_2().rule());
		rules.add(getRule_FirstColAllRowsNormal_3().rule());
		rules.add(getRule_FirstColAllRowsNormal_4().rule());
		rules.add(getRule_FirstColAllRowsNormal_5().rule());
		rules.add(getRule_FirstColAllRowsNormal_6().rule());
		rules.add(getRule_FirstColAllRowsNormal_7().rule());
		rules.add(getRule_FirstColAllRowsNormal_15().rule());
		rules.add(getRule_FirstColAllRowsNormal_16().rule());
		rules.add(getRule_FirstColAllRowsNormal_17().rule());
		rules.add(getRule_FirstColAllRowsNormal_64().rule());
		rules.add(getRule_FirstColAllRowsNormal_65().rule());
		rules.add(getRule_FirstColAllRowsNormal_80().rule());
		rules.add(getRule_FirstColAllRowsNormal_81().rule());
		rules.add(getRule_FirstColAllRowsNormal_112().rule());
		rules.add(getRule_FirstColAllRowsNormal_113().rule());
		rules.add(getRule_FirstColAllRowsNormal_193().rule());
		rules.add(getRule_FirstColAllRowsNormal_209().rule());
		rules.add(getRule_FirstColAllRowsNormal_241().rule());
		rules.add(getRule_FirstRowAllColsEnd().rule());
		rules.add(getRule_FirstRowAllColsEnd_1().rule());
		rules.add(getRule_FirstRowAllColsEnd_2().rule());
		rules.add(getRule_FirstRowAllColsEnd_3().rule());
		rules.add(getRule_FirstRowAllColsEnd_4().rule());
		rules.add(getRule_FirstRowAllColsEnd_5().rule());
		rules.add(getRule_FirstRowAllColsEnd_6().rule());
		rules.add(getRule_FirstRowAllColsEnd_7().rule());
		rules.add(getRule_FirstRowAllColsEnd_15().rule());
		rules.add(getRule_FirstRowAllColsEnd_16().rule());
		rules.add(getRule_FirstRowAllColsEnd_17().rule());
		rules.add(getRule_FirstRowAllColsEnd_49().rule());
		rules.add(getRule_FirstRowAllColsNormal().rule());
		rules.add(getRule_FirstRowAllColsNormal_1().rule());
		rules.add(getRule_FirstRowAllColsNormal_2().rule());
		rules.add(getRule_FirstRowAllColsNormal_3().rule());
		rules.add(getRule_FirstRowAllColsNormal_4().rule());
		rules.add(getRule_FirstRowAllColsNormal_5().rule());
		rules.add(getRule_FirstRowAllColsNormal_6().rule());
		rules.add(getRule_FirstRowAllColsNormal_7().rule());
		rules.add(getRule_FirstRowAllColsNormal_15().rule());
		rules.add(getRule_FirstRowAllColsNormal_16().rule());
		rules.add(getRule_FirstRowAllColsNormal_17().rule());
		rules.add(getRule_FirstRowAllColsNormal_49().rule());
		rules.add(getRule_AllOtherFieldsEnd().rule());
		rules.add(getRule_AllOtherFieldsEnd_1().rule());
		rules.add(getRule_AllOtherFieldsEnd_2().rule());
		rules.add(getRule_AllOtherFieldsEnd_3().rule());
		rules.add(getRule_AllOtherFieldsEnd_8().rule());
		rules.add(getRule_AllOtherFieldsEnd_9().rule());
		rules.add(getRule_AllOtherFieldsEnd_10().rule());
		rules.add(getRule_AllOtherFieldsEnd_11().rule());
		rules.add(getRule_AllOtherFieldsEnd_16().rule());
		rules.add(getRule_AllOtherFieldsEnd_17().rule());
		rules.add(getRule_AllOtherFieldsEnd_18().rule());
		rules.add(getRule_AllOtherFieldsEnd_19().rule());
		rules.add(getRule_AllOtherFieldsEnd_24().rule());
		rules.add(getRule_AllOtherFieldsEnd_25().rule());
		rules.add(getRule_AllOtherFieldsEnd_26().rule());
		rules.add(getRule_AllOtherFieldsEnd_27().rule());
		rules.add(getRule_AllOtherFieldsEnd_31().rule());
		rules.add(getRule_AllOtherFieldsEnd_64().rule());
		rules.add(getRule_AllOtherFieldsEnd_65().rule());
		rules.add(getRule_AllOtherFieldsEnd_97().rule());
		rules.add(getRule_AllOtherFieldsNormal().rule());
		rules.add(getRule_AllOtherFieldsNormal_1().rule());
		rules.add(getRule_AllOtherFieldsNormal_2().rule());
		rules.add(getRule_AllOtherFieldsNormal_3().rule());
		rules.add(getRule_AllOtherFieldsNormal_8().rule());
		rules.add(getRule_AllOtherFieldsNormal_9().rule());
		rules.add(getRule_AllOtherFieldsNormal_10().rule());
		rules.add(getRule_AllOtherFieldsNormal_11().rule());
		rules.add(getRule_AllOtherFieldsNormal_16().rule());
		rules.add(getRule_AllOtherFieldsNormal_17().rule());
		rules.add(getRule_AllOtherFieldsNormal_18().rule());
		rules.add(getRule_AllOtherFieldsNormal_19().rule());
		rules.add(getRule_AllOtherFieldsNormal_24().rule());
		rules.add(getRule_AllOtherFieldsNormal_25().rule());
		rules.add(getRule_AllOtherFieldsNormal_26().rule());
		rules.add(getRule_AllOtherFieldsNormal_27().rule());
		rules.add(getRule_AllOtherFieldsNormal_31().rule());
		rules.add(getRule_AllOtherFieldsNormal_64().rule());
		rules.add(getRule_AllOtherFieldsNormal_65().rule());
		rules.add(getRule_AllOtherFieldsNormal_97().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForSokobanImportExport_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForSokobanImportExport_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		rules.add((Rule) spec.getEntities().get(29));
		rules.add((Rule) spec.getEntities().get(30));
		rules.add((Rule) spec.getEntities().get(31));
		rules.add((Rule) spec.getEntities().get(32));
		rules.add((Rule) spec.getEntities().get(33));
		rules.add((Rule) spec.getEntities().get(34));
		rules.add((Rule) spec.getEntities().get(35));
		rules.add((Rule) spec.getEntities().get(36));
		rules.add((Rule) spec.getEntities().get(37));
		rules.add((Rule) spec.getEntities().get(38));
		rules.add((Rule) spec.getEntities().get(39));
		rules.add((Rule) spec.getEntities().get(40));
		rules.add((Rule) spec.getEntities().get(41));
		rules.add((Rule) spec.getEntities().get(42));
		rules.add((Rule) spec.getEntities().get(43));
		rules.add((Rule) spec.getEntities().get(44));
		rules.add((Rule) spec.getEntities().get(45));
		rules.add((Rule) spec.getEntities().get(46));
		rules.add((Rule) spec.getEntities().get(47));
		rules.add((Rule) spec.getEntities().get(48));
		rules.add((Rule) spec.getEntities().get(49));
		rules.add((Rule) spec.getEntities().get(50));
		rules.add((Rule) spec.getEntities().get(51));
		rules.add((Rule) spec.getEntities().get(52));
		rules.add((Rule) spec.getEntities().get(53));
		rules.add((Rule) spec.getEntities().get(54));
		rules.add((Rule) spec.getEntities().get(55));
		rules.add((Rule) spec.getEntities().get(56));
		rules.add((Rule) spec.getEntities().get(57));
		rules.add((Rule) spec.getEntities().get(58));
		rules.add((Rule) spec.getEntities().get(59));
		rules.add((Rule) spec.getEntities().get(60));
		rules.add((Rule) spec.getEntities().get(61));
		rules.add((Rule) spec.getEntities().get(62));
		rules.add((Rule) spec.getEntities().get(63));
		rules.add((Rule) spec.getEntities().get(64));
		rules.add((Rule) spec.getEntities().get(65));
		rules.add((Rule) spec.getEntities().get(66));
		rules.add((Rule) spec.getEntities().get(67));
		rules.add((Rule) spec.getEntities().get(68));
		rules.add((Rule) spec.getEntities().get(69));
		rules.add((Rule) spec.getEntities().get(70));
		rules.add((Rule) spec.getEntities().get(71));
		rules.add((Rule) spec.getEntities().get(72));
		rules.add((Rule) spec.getEntities().get(73));
		rules.add((Rule) spec.getEntities().get(74));
		rules.add((Rule) spec.getEntities().get(75));
		rules.add((Rule) spec.getEntities().get(76));
		rules.add((Rule) spec.getEntities().get(77));
		rules.add((Rule) spec.getEntities().get(78));
		rules.add((Rule) spec.getEntities().get(79));
		rules.add((Rule) spec.getEntities().get(80));
		rules.add((Rule) spec.getEntities().get(81));
		rules.add((Rule) spec.getEntities().get(82));
		rules.add((Rule) spec.getEntities().get(83));
		rules.add((Rule) spec.getEntities().get(84));
		rules.add((Rule) spec.getEntities().get(85));
		rules.add((Rule) spec.getEntities().get(86));
		rules.add((Rule) spec.getEntities().get(87));
		rules.add((Rule) spec.getEntities().get(88));
		rules.add((Rule) spec.getEntities().get(89));
		rules.add((Rule) spec.getEntities().get(90));
		rules.add((Rule) spec.getEntities().get(91));
		rules.add((Rule) spec.getEntities().get(92));
		rules.add((Rule) spec.getEntities().get(93));
		rules.add((Rule) spec.getEntities().get(94));
		rules.add((Rule) spec.getEntities().get(95));
		rules.add((Rule) spec.getEntities().get(96));
		rules.add((Rule) spec.getEntities().get(97));
		rules.add((Rule) spec.getEntities().get(98));
		rules.add((Rule) spec.getEntities().get(99));
		rules.add((Rule) spec.getEntities().get(100));
		rules.add((Rule) spec.getEntities().get(101));
		rules.add((Rule) spec.getEntities().get(102));
		rules.add((Rule) spec.getEntities().get(103));
		rules.add((Rule) spec.getEntities().get(104));
		rules.add((Rule) spec.getEntities().get(105));
		rules.add((Rule) spec.getEntities().get(106));
		rules.add((Rule) spec.getEntities().get(107));
		rules.add((Rule) spec.getEntities().get(108));
		rules.add((Rule) spec.getEntities().get(109));
		rules.add((Rule) spec.getEntities().get(110));
		rules.add((Rule) spec.getEntities().get(111));
		rules.add((Rule) spec.getEntities().get(112));
		rules.add((Rule) spec.getEntities().get(113));
		rules.add((Rule) spec.getEntities().get(114));
		rules.add((Rule) spec.getEntities().get(115));
		rules.add((Rule) spec.getEntities().get(116));
		rules.add((Rule) spec.getEntities().get(117));
		rules.add((Rule) spec.getEntities().get(118));
		rules.add((Rule) spec.getEntities().get(119));
		rules.add((Rule) spec.getEntities().get(120));
		rules.add((Rule) spec.getEntities().get(121));
		rules.add((Rule) spec.getEntities().get(122));
		rules.add((Rule) spec.getEntities().get(123));
		rules.add((Rule) spec.getEntities().get(124));
		rules.add((Rule) spec.getEntities().get(125));
		rules.add((Rule) spec.getEntities().get(126));
		rules.add((Rule) spec.getEntities().get(127));
		rules.add((Rule) spec.getEntities().get(128));
		rules.add((Rule) spec.getEntities().get(129));
		rules.add((Rule) spec.getEntities().get(130));
		rules.add((Rule) spec.getEntities().get(131));
		rules.add((Rule) spec.getEntities().get(132));
		rules.add((Rule) spec.getEntities().get(133));
		rules.add((Rule) spec.getEntities().get(134));
		rules.add((Rule) spec.getEntities().get(135));
		rules.add((Rule) spec.getEntities().get(136));
		rules.add((Rule) spec.getEntities().get(137));
		rules.add((Rule) spec.getEntities().get(138));
		rules.add((Rule) spec.getEntities().get(139));
		rules.add((Rule) spec.getEntities().get(140));
		rules.add((Rule) spec.getEntities().get(141));
		rules.add((Rule) spec.getEntities().get(142));
		rules.add((Rule) spec.getEntities().get(143));
		rules.add((Rule) spec.getEntities().get(144));
		rules.add((Rule) spec.getEntities().get(145));
		rules.add((Rule) spec.getEntities().get(146));
		rules.add((Rule) spec.getEntities().get(147));
		rules.add((Rule) spec.getEntities().get(148));
		rules.add((Rule) spec.getEntities().get(149));
		rules.add((Rule) spec.getEntities().get(150));
		rules.add((Rule) spec.getEntities().get(151));
		rules.add((Rule) spec.getEntities().get(152));
		rules.add((Rule) spec.getEntities().get(153));
		rules.add((Rule) spec.getEntities().get(154));
		rules.add((Rule) spec.getEntities().get(155));
		rules.add((Rule) spec.getEntities().get(156));
		rules.add((Rule) spec.getEntities().get(157));
		rules.add((Rule) spec.getEntities().get(158));
		rules.add((Rule) spec.getEntities().get(159));
		rules.add((Rule) spec.getEntities().get(160));
		rules.add((Rule) spec.getEntities().get(161));
		rules.add((Rule) spec.getEntities().get(162));
		rules.add((Rule) spec.getEntities().get(163));
		rules.add((Rule) spec.getEntities().get(164));
		rules.add((Rule) spec.getEntities().get(165));
		rules.add((Rule) spec.getEntities().get(166));
		rules.add((Rule) spec.getEntities().get(167));
		rules.add((Rule) spec.getEntities().get(168));
		rules.add((Rule) spec.getEntities().get(169));
		rules.add((Rule) spec.getEntities().get(170));
		rules.add((Rule) spec.getEntities().get(171));
		rules.add((Rule) spec.getEntities().get(172));
		rules.add((Rule) spec.getEntities().get(173));
		rules.add((Rule) spec.getEntities().get(174));
		rules.add((Rule) spec.getEntities().get(175));
		rules.add((Rule) spec.getEntities().get(176));
		rules.add((Rule) spec.getEntities().get(177));
		rules.add((Rule) spec.getEntities().get(178));
		rules.add((Rule) spec.getEntities().get(179));
		rules.add((Rule) spec.getEntities().get(180));
		rules.add((Rule) spec.getEntities().get(181));
		rules.add((Rule) spec.getEntities().get(182));
		rules.add((Rule) spec.getEntities().get(183));
		rules.add((Rule) spec.getEntities().get(184));
		rules.add((Rule) spec.getEntities().get(185));
		rules.add((Rule) spec.getEntities().get(186));
		rules.add((Rule) spec.getEntities().get(187));
		rules.add((Rule) spec.getEntities().get(188));
		rules.add((Rule) spec.getEntities().get(189));
		rules.add((Rule) spec.getEntities().get(190));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.1
	public BoardEndEntryRuleAccess getRule_BoardEndEntryRule() {
		return new BoardEndEntryRuleAccess();
	}
	
	public class BoardEndEntryRuleAccess extends NeoRuleCoAccess<BoardEndEntryRuleData, BoardEndEntryRuleCoData, BoardEndEntryRuleMask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRuleData(d));
		}
			
		@Override
		public Stream<BoardEndEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRuleCoData(d));
		}
		
		@Override
		public BoardEndEntryRuleMask mask() {
			return new BoardEndEntryRuleMask();
		}
	}
	
	public class BoardEndEntryRuleData extends NeoData {
		public BoardEndEntryRuleData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRuleCoData extends NeoData {
		public BoardEndEntryRuleCoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.2
	public BoardEndEntryRule_1Access getRule_BoardEndEntryRule_1() {
		return new BoardEndEntryRule_1Access();
	}
	
	public class BoardEndEntryRule_1Access extends NeoRuleCoAccess<BoardEndEntryRule_1Data, BoardEndEntryRule_1CoData, BoardEndEntryRule_1Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_1Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_1CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_1Mask mask() {
			return new BoardEndEntryRule_1Mask();
		}
	}
	
	public class BoardEndEntryRule_1Data extends NeoData {
		public BoardEndEntryRule_1Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_1CoData extends NeoData {
		public BoardEndEntryRule_1CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.3
	public BoardEndEntryRule_2Access getRule_BoardEndEntryRule_2() {
		return new BoardEndEntryRule_2Access();
	}
	
	public class BoardEndEntryRule_2Access extends NeoRuleCoAccess<BoardEndEntryRule_2Data, BoardEndEntryRule_2CoData, BoardEndEntryRule_2Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_2Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_2CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_2Mask mask() {
			return new BoardEndEntryRule_2Mask();
		}
	}
	
	public class BoardEndEntryRule_2Data extends NeoData {
		public BoardEndEntryRule_2Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_2CoData extends NeoData {
		public BoardEndEntryRule_2CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.4
	public BoardEndEntryRule_3Access getRule_BoardEndEntryRule_3() {
		return new BoardEndEntryRule_3Access();
	}
	
	public class BoardEndEntryRule_3Access extends NeoRuleCoAccess<BoardEndEntryRule_3Data, BoardEndEntryRule_3CoData, BoardEndEntryRule_3Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_3Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_3CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_3Mask mask() {
			return new BoardEndEntryRule_3Mask();
		}
	}
	
	public class BoardEndEntryRule_3Data extends NeoData {
		public BoardEndEntryRule_3Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_3CoData extends NeoData {
		public BoardEndEntryRule_3CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.5
	public BoardEndEntryRule_16Access getRule_BoardEndEntryRule_16() {
		return new BoardEndEntryRule_16Access();
	}
	
	public class BoardEndEntryRule_16Access extends NeoRuleCoAccess<BoardEndEntryRule_16Data, BoardEndEntryRule_16CoData, BoardEndEntryRule_16Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_16Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_16CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_16Mask mask() {
			return new BoardEndEntryRule_16Mask();
		}
	}
	
	public class BoardEndEntryRule_16Data extends NeoData {
		public BoardEndEntryRule_16Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_16CoData extends NeoData {
		public BoardEndEntryRule_16CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.6
	public BoardEndEntryRule_17Access getRule_BoardEndEntryRule_17() {
		return new BoardEndEntryRule_17Access();
	}
	
	public class BoardEndEntryRule_17Access extends NeoRuleCoAccess<BoardEndEntryRule_17Data, BoardEndEntryRule_17CoData, BoardEndEntryRule_17Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_17Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_17CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_17Mask mask() {
			return new BoardEndEntryRule_17Mask();
		}
	}
	
	public class BoardEndEntryRule_17Data extends NeoData {
		public BoardEndEntryRule_17Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_17CoData extends NeoData {
		public BoardEndEntryRule_17CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.7
	public BoardEndEntryRule_18Access getRule_BoardEndEntryRule_18() {
		return new BoardEndEntryRule_18Access();
	}
	
	public class BoardEndEntryRule_18Access extends NeoRuleCoAccess<BoardEndEntryRule_18Data, BoardEndEntryRule_18CoData, BoardEndEntryRule_18Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_18Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_18Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_18CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_18CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_18Mask mask() {
			return new BoardEndEntryRule_18Mask();
		}
	}
	
	public class BoardEndEntryRule_18Data extends NeoData {
		public BoardEndEntryRule_18Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_18CoData extends NeoData {
		public BoardEndEntryRule_18CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_18Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.8
	public BoardEndEntryRule_19Access getRule_BoardEndEntryRule_19() {
		return new BoardEndEntryRule_19Access();
	}
	
	public class BoardEndEntryRule_19Access extends NeoRuleCoAccess<BoardEndEntryRule_19Data, BoardEndEntryRule_19CoData, BoardEndEntryRule_19Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_19Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_19Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_19CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_19CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_19Mask mask() {
			return new BoardEndEntryRule_19Mask();
		}
	}
	
	public class BoardEndEntryRule_19Data extends NeoData {
		public BoardEndEntryRule_19Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_19CoData extends NeoData {
		public BoardEndEntryRule_19CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_19Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.9
	public BoardEndEntryRule_22Access getRule_BoardEndEntryRule_22() {
		return new BoardEndEntryRule_22Access();
	}
	
	public class BoardEndEntryRule_22Access extends NeoRuleCoAccess<BoardEndEntryRule_22Data, BoardEndEntryRule_22CoData, BoardEndEntryRule_22Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_22Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_22Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_22CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_22CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_22Mask mask() {
			return new BoardEndEntryRule_22Mask();
		}
	}
	
	public class BoardEndEntryRule_22Data extends NeoData {
		public BoardEndEntryRule_22Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_22CoData extends NeoData {
		public BoardEndEntryRule_22CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_22Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.10
	public BoardEndEntryRule_23Access getRule_BoardEndEntryRule_23() {
		return new BoardEndEntryRule_23Access();
	}
	
	public class BoardEndEntryRule_23Access extends NeoRuleCoAccess<BoardEndEntryRule_23Data, BoardEndEntryRule_23CoData, BoardEndEntryRule_23Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_23Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_23Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_23CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_23CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_23Mask mask() {
			return new BoardEndEntryRule_23Mask();
		}
	}
	
	public class BoardEndEntryRule_23Data extends NeoData {
		public BoardEndEntryRule_23Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_23CoData extends NeoData {
		public BoardEndEntryRule_23CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_23Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.11
	public BoardEndEntryRule_25Access getRule_BoardEndEntryRule_25() {
		return new BoardEndEntryRule_25Access();
	}
	
	public class BoardEndEntryRule_25Access extends NeoRuleCoAccess<BoardEndEntryRule_25Data, BoardEndEntryRule_25CoData, BoardEndEntryRule_25Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_25Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_25CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_25Mask mask() {
			return new BoardEndEntryRule_25Mask();
		}
	}
	
	public class BoardEndEntryRule_25Data extends NeoData {
		public BoardEndEntryRule_25Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_25CoData extends NeoData {
		public BoardEndEntryRule_25CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.12
	public BoardEndEntryRule_27Access getRule_BoardEndEntryRule_27() {
		return new BoardEndEntryRule_27Access();
	}
	
	public class BoardEndEntryRule_27Access extends NeoRuleCoAccess<BoardEndEntryRule_27Data, BoardEndEntryRule_27CoData, BoardEndEntryRule_27Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_27Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_27Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_27CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_27CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_27Mask mask() {
			return new BoardEndEntryRule_27Mask();
		}
	}
	
	public class BoardEndEntryRule_27Data extends NeoData {
		public BoardEndEntryRule_27Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_27CoData extends NeoData {
		public BoardEndEntryRule_27CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_27Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.13
	public BoardEndEntryRule_31Access getRule_BoardEndEntryRule_31() {
		return new BoardEndEntryRule_31Access();
	}
	
	public class BoardEndEntryRule_31Access extends NeoRuleCoAccess<BoardEndEntryRule_31Data, BoardEndEntryRule_31CoData, BoardEndEntryRule_31Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_31Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_31Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_31CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_31CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_31Mask mask() {
			return new BoardEndEntryRule_31Mask();
		}
	}
	
	public class BoardEndEntryRule_31Data extends NeoData {
		public BoardEndEntryRule_31Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_31CoData extends NeoData {
		public BoardEndEntryRule_31CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_31Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.14
	public BoardEndEntryRule_64Access getRule_BoardEndEntryRule_64() {
		return new BoardEndEntryRule_64Access();
	}
	
	public class BoardEndEntryRule_64Access extends NeoRuleCoAccess<BoardEndEntryRule_64Data, BoardEndEntryRule_64CoData, BoardEndEntryRule_64Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_64Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_64CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_64Mask mask() {
			return new BoardEndEntryRule_64Mask();
		}
	}
	
	public class BoardEndEntryRule_64Data extends NeoData {
		public BoardEndEntryRule_64Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_64CoData extends NeoData {
		public BoardEndEntryRule_64CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.15
	public BoardEndEntryRule_65Access getRule_BoardEndEntryRule_65() {
		return new BoardEndEntryRule_65Access();
	}
	
	public class BoardEndEntryRule_65Access extends NeoRuleCoAccess<BoardEndEntryRule_65Data, BoardEndEntryRule_65CoData, BoardEndEntryRule_65Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_65Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_65CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_65Mask mask() {
			return new BoardEndEntryRule_65Mask();
		}
	}
	
	public class BoardEndEntryRule_65Data extends NeoData {
		public BoardEndEntryRule_65Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_65CoData extends NeoData {
		public BoardEndEntryRule_65CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.16
	public BoardEndEntryRule_66Access getRule_BoardEndEntryRule_66() {
		return new BoardEndEntryRule_66Access();
	}
	
	public class BoardEndEntryRule_66Access extends NeoRuleCoAccess<BoardEndEntryRule_66Data, BoardEndEntryRule_66CoData, BoardEndEntryRule_66Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_66Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_66Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_66CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_66CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_66Mask mask() {
			return new BoardEndEntryRule_66Mask();
		}
	}
	
	public class BoardEndEntryRule_66Data extends NeoData {
		public BoardEndEntryRule_66Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_66CoData extends NeoData {
		public BoardEndEntryRule_66CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_66Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.17
	public BoardEndEntryRule_67Access getRule_BoardEndEntryRule_67() {
		return new BoardEndEntryRule_67Access();
	}
	
	public class BoardEndEntryRule_67Access extends NeoRuleCoAccess<BoardEndEntryRule_67Data, BoardEndEntryRule_67CoData, BoardEndEntryRule_67Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_67Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_67Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_67CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_67CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_67Mask mask() {
			return new BoardEndEntryRule_67Mask();
		}
	}
	
	public class BoardEndEntryRule_67Data extends NeoData {
		public BoardEndEntryRule_67Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_67CoData extends NeoData {
		public BoardEndEntryRule_67CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_67Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.18
	public BoardEndEntryRule_97Access getRule_BoardEndEntryRule_97() {
		return new BoardEndEntryRule_97Access();
	}
	
	public class BoardEndEntryRule_97Access extends NeoRuleCoAccess<BoardEndEntryRule_97Data, BoardEndEntryRule_97CoData, BoardEndEntryRule_97Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_97Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_97CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_97Mask mask() {
			return new BoardEndEntryRule_97Mask();
		}
	}
	
	public class BoardEndEntryRule_97Data extends NeoData {
		public BoardEndEntryRule_97Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_97CoData extends NeoData {
		public BoardEndEntryRule_97CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.19
	public BoardEndEntryRule_99Access getRule_BoardEndEntryRule_99() {
		return new BoardEndEntryRule_99Access();
	}
	
	public class BoardEndEntryRule_99Access extends NeoRuleCoAccess<BoardEndEntryRule_99Data, BoardEndEntryRule_99CoData, BoardEndEntryRule_99Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_99Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_99Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_99CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_99CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_99Mask mask() {
			return new BoardEndEntryRule_99Mask();
		}
	}
	
	public class BoardEndEntryRule_99Data extends NeoData {
		public BoardEndEntryRule_99Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_99CoData extends NeoData {
		public BoardEndEntryRule_99CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_99Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.20
	public BoardEndEntryRule_512Access getRule_BoardEndEntryRule_512() {
		return new BoardEndEntryRule_512Access();
	}
	
	public class BoardEndEntryRule_512Access extends NeoRuleCoAccess<BoardEndEntryRule_512Data, BoardEndEntryRule_512CoData, BoardEndEntryRule_512Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_512Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_512Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_512CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_512CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_512Mask mask() {
			return new BoardEndEntryRule_512Mask();
		}
	}
	
	public class BoardEndEntryRule_512Data extends NeoData {
		public BoardEndEntryRule_512Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_512CoData extends NeoData {
		public BoardEndEntryRule_512CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_512Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.21
	public BoardEndEntryRule_513Access getRule_BoardEndEntryRule_513() {
		return new BoardEndEntryRule_513Access();
	}
	
	public class BoardEndEntryRule_513Access extends NeoRuleCoAccess<BoardEndEntryRule_513Data, BoardEndEntryRule_513CoData, BoardEndEntryRule_513Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_513Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_513Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_513CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_513CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_513Mask mask() {
			return new BoardEndEntryRule_513Mask();
		}
	}
	
	public class BoardEndEntryRule_513Data extends NeoData {
		public BoardEndEntryRule_513Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_513CoData extends NeoData {
		public BoardEndEntryRule_513CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_513Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.22
	public BoardEndEntryRule_514Access getRule_BoardEndEntryRule_514() {
		return new BoardEndEntryRule_514Access();
	}
	
	public class BoardEndEntryRule_514Access extends NeoRuleCoAccess<BoardEndEntryRule_514Data, BoardEndEntryRule_514CoData, BoardEndEntryRule_514Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_514Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_514Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_514CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_514CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_514Mask mask() {
			return new BoardEndEntryRule_514Mask();
		}
	}
	
	public class BoardEndEntryRule_514Data extends NeoData {
		public BoardEndEntryRule_514Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_514CoData extends NeoData {
		public BoardEndEntryRule_514CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_514Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.23
	public BoardEndEntryRule_515Access getRule_BoardEndEntryRule_515() {
		return new BoardEndEntryRule_515Access();
	}
	
	public class BoardEndEntryRule_515Access extends NeoRuleCoAccess<BoardEndEntryRule_515Data, BoardEndEntryRule_515CoData, BoardEndEntryRule_515Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_515Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_515Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_515CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_515CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_515Mask mask() {
			return new BoardEndEntryRule_515Mask();
		}
	}
	
	public class BoardEndEntryRule_515Data extends NeoData {
		public BoardEndEntryRule_515Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_515CoData extends NeoData {
		public BoardEndEntryRule_515CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_515Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.24
	public BoardEndEntryRule_576Access getRule_BoardEndEntryRule_576() {
		return new BoardEndEntryRule_576Access();
	}
	
	public class BoardEndEntryRule_576Access extends NeoRuleCoAccess<BoardEndEntryRule_576Data, BoardEndEntryRule_576CoData, BoardEndEntryRule_576Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_576Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_576Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_576CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_576CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_576Mask mask() {
			return new BoardEndEntryRule_576Mask();
		}
	}
	
	public class BoardEndEntryRule_576Data extends NeoData {
		public BoardEndEntryRule_576Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_576CoData extends NeoData {
		public BoardEndEntryRule_576CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_576Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.25
	public BoardEndEntryRule_577Access getRule_BoardEndEntryRule_577() {
		return new BoardEndEntryRule_577Access();
	}
	
	public class BoardEndEntryRule_577Access extends NeoRuleCoAccess<BoardEndEntryRule_577Data, BoardEndEntryRule_577CoData, BoardEndEntryRule_577Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_577Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_577Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_577CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_577CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_577Mask mask() {
			return new BoardEndEntryRule_577Mask();
		}
	}
	
	public class BoardEndEntryRule_577Data extends NeoData {
		public BoardEndEntryRule_577Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_577CoData extends NeoData {
		public BoardEndEntryRule_577CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_577Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.26
	public BoardEndEntryRule_578Access getRule_BoardEndEntryRule_578() {
		return new BoardEndEntryRule_578Access();
	}
	
	public class BoardEndEntryRule_578Access extends NeoRuleCoAccess<BoardEndEntryRule_578Data, BoardEndEntryRule_578CoData, BoardEndEntryRule_578Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_578Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_578Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_578CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_578CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_578Mask mask() {
			return new BoardEndEntryRule_578Mask();
		}
	}
	
	public class BoardEndEntryRule_578Data extends NeoData {
		public BoardEndEntryRule_578Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_578CoData extends NeoData {
		public BoardEndEntryRule_578CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_578Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.27
	public BoardEndEntryRule_579Access getRule_BoardEndEntryRule_579() {
		return new BoardEndEntryRule_579Access();
	}
	
	public class BoardEndEntryRule_579Access extends NeoRuleCoAccess<BoardEndEntryRule_579Data, BoardEndEntryRule_579CoData, BoardEndEntryRule_579Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_579Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_579Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_579CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_579CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_579Mask mask() {
			return new BoardEndEntryRule_579Mask();
		}
	}
	
	public class BoardEndEntryRule_579Data extends NeoData {
		public BoardEndEntryRule_579Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_579CoData extends NeoData {
		public BoardEndEntryRule_579CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_579Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.28
	public BoardEndEntryRule_609Access getRule_BoardEndEntryRule_609() {
		return new BoardEndEntryRule_609Access();
	}
	
	public class BoardEndEntryRule_609Access extends NeoRuleCoAccess<BoardEndEntryRule_609Data, BoardEndEntryRule_609CoData, BoardEndEntryRule_609Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_609Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_609Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_609CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_609CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_609Mask mask() {
			return new BoardEndEntryRule_609Mask();
		}
	}
	
	public class BoardEndEntryRule_609Data extends NeoData {
		public BoardEndEntryRule_609Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_609CoData extends NeoData {
		public BoardEndEntryRule_609CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_609Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.29
	public BoardEndEntryRule_611Access getRule_BoardEndEntryRule_611() {
		return new BoardEndEntryRule_611Access();
	}
	
	public class BoardEndEntryRule_611Access extends NeoRuleCoAccess<BoardEndEntryRule_611Data, BoardEndEntryRule_611CoData, BoardEndEntryRule_611Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_611Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_611Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_611CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_611CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_611Mask mask() {
			return new BoardEndEntryRule_611Mask();
		}
	}
	
	public class BoardEndEntryRule_611Data extends NeoData {
		public BoardEndEntryRule_611Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_611CoData extends NeoData {
		public BoardEndEntryRule_611CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_611Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.30
	public BoardEndEntryRule_642Access getRule_BoardEndEntryRule_642() {
		return new BoardEndEntryRule_642Access();
	}
	
	public class BoardEndEntryRule_642Access extends NeoRuleCoAccess<BoardEndEntryRule_642Data, BoardEndEntryRule_642CoData, BoardEndEntryRule_642Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(30);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_642Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_642Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_642CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_642CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_642Mask mask() {
			return new BoardEndEntryRule_642Mask();
		}
	}
	
	public class BoardEndEntryRule_642Data extends NeoData {
		public BoardEndEntryRule_642Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_642CoData extends NeoData {
		public BoardEndEntryRule_642CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_642Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.31
	public BoardEndEntryRule_643Access getRule_BoardEndEntryRule_643() {
		return new BoardEndEntryRule_643Access();
	}
	
	public class BoardEndEntryRule_643Access extends NeoRuleCoAccess<BoardEndEntryRule_643Data, BoardEndEntryRule_643CoData, BoardEndEntryRule_643Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(31);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_643Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_643Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_643CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_643CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_643Mask mask() {
			return new BoardEndEntryRule_643Mask();
		}
	}
	
	public class BoardEndEntryRule_643Data extends NeoData {
		public BoardEndEntryRule_643Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_643CoData extends NeoData {
		public BoardEndEntryRule_643CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_643Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.32
	public BoardEndEntryRule_706Access getRule_BoardEndEntryRule_706() {
		return new BoardEndEntryRule_706Access();
	}
	
	public class BoardEndEntryRule_706Access extends NeoRuleCoAccess<BoardEndEntryRule_706Data, BoardEndEntryRule_706CoData, BoardEndEntryRule_706Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(32);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_706Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_706Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_706CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_706CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_706Mask mask() {
			return new BoardEndEntryRule_706Mask();
		}
	}
	
	public class BoardEndEntryRule_706Data extends NeoData {
		public BoardEndEntryRule_706Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_706CoData extends NeoData {
		public BoardEndEntryRule_706CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_706Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.33
	public BoardEndEntryRule_707Access getRule_BoardEndEntryRule_707() {
		return new BoardEndEntryRule_707Access();
	}
	
	public class BoardEndEntryRule_707Access extends NeoRuleCoAccess<BoardEndEntryRule_707Data, BoardEndEntryRule_707CoData, BoardEndEntryRule_707Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(33);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_707Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_707Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_707CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_707CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_707Mask mask() {
			return new BoardEndEntryRule_707Mask();
		}
	}
	
	public class BoardEndEntryRule_707Data extends NeoData {
		public BoardEndEntryRule_707Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_707CoData extends NeoData {
		public BoardEndEntryRule_707CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_707Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.34
	public BoardEndEntryRule_739Access getRule_BoardEndEntryRule_739() {
		return new BoardEndEntryRule_739Access();
	}
	
	public class BoardEndEntryRule_739Access extends NeoRuleCoAccess<BoardEndEntryRule_739Data, BoardEndEntryRule_739CoData, BoardEndEntryRule_739Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(34);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_739Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_739Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_739CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_739CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_739Mask mask() {
			return new BoardEndEntryRule_739Mask();
		}
	}
	
	public class BoardEndEntryRule_739Data extends NeoData {
		public BoardEndEntryRule_739Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_739CoData extends NeoData {
		public BoardEndEntryRule_739CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_739Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.35
	public BoardEndEntryRule_832Access getRule_BoardEndEntryRule_832() {
		return new BoardEndEntryRule_832Access();
	}
	
	public class BoardEndEntryRule_832Access extends NeoRuleCoAccess<BoardEndEntryRule_832Data, BoardEndEntryRule_832CoData, BoardEndEntryRule_832Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(35);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_832Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_832Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_832CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_832CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_832Mask mask() {
			return new BoardEndEntryRule_832Mask();
		}
	}
	
	public class BoardEndEntryRule_832Data extends NeoData {
		public BoardEndEntryRule_832Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_832CoData extends NeoData {
		public BoardEndEntryRule_832CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_832Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.36
	public BoardEndEntryRule_833Access getRule_BoardEndEntryRule_833() {
		return new BoardEndEntryRule_833Access();
	}
	
	public class BoardEndEntryRule_833Access extends NeoRuleCoAccess<BoardEndEntryRule_833Data, BoardEndEntryRule_833CoData, BoardEndEntryRule_833Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(36);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_833Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_833Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_833CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_833CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_833Mask mask() {
			return new BoardEndEntryRule_833Mask();
		}
	}
	
	public class BoardEndEntryRule_833Data extends NeoData {
		public BoardEndEntryRule_833Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_833CoData extends NeoData {
		public BoardEndEntryRule_833CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_833Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.37
	public BoardEndEntryRule_834Access getRule_BoardEndEntryRule_834() {
		return new BoardEndEntryRule_834Access();
	}
	
	public class BoardEndEntryRule_834Access extends NeoRuleCoAccess<BoardEndEntryRule_834Data, BoardEndEntryRule_834CoData, BoardEndEntryRule_834Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(37);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_834Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_834Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_834CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_834CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_834Mask mask() {
			return new BoardEndEntryRule_834Mask();
		}
	}
	
	public class BoardEndEntryRule_834Data extends NeoData {
		public BoardEndEntryRule_834Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_834CoData extends NeoData {
		public BoardEndEntryRule_834CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_834Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.38
	public BoardEndEntryRule_835Access getRule_BoardEndEntryRule_835() {
		return new BoardEndEntryRule_835Access();
	}
	
	public class BoardEndEntryRule_835Access extends NeoRuleCoAccess<BoardEndEntryRule_835Data, BoardEndEntryRule_835CoData, BoardEndEntryRule_835Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(38);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_835Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_835Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_835CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_835CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_835Mask mask() {
			return new BoardEndEntryRule_835Mask();
		}
	}
	
	public class BoardEndEntryRule_835Data extends NeoData {
		public BoardEndEntryRule_835Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_835CoData extends NeoData {
		public BoardEndEntryRule_835CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_835Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.39
	public BoardEndEntryRule_865Access getRule_BoardEndEntryRule_865() {
		return new BoardEndEntryRule_865Access();
	}
	
	public class BoardEndEntryRule_865Access extends NeoRuleCoAccess<BoardEndEntryRule_865Data, BoardEndEntryRule_865CoData, BoardEndEntryRule_865Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(39);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_865Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_865Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_865CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_865CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_865Mask mask() {
			return new BoardEndEntryRule_865Mask();
		}
	}
	
	public class BoardEndEntryRule_865Data extends NeoData {
		public BoardEndEntryRule_865Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_865CoData extends NeoData {
		public BoardEndEntryRule_865CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_865Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.40
	public BoardEndEntryRule_867Access getRule_BoardEndEntryRule_867() {
		return new BoardEndEntryRule_867Access();
	}
	
	public class BoardEndEntryRule_867Access extends NeoRuleCoAccess<BoardEndEntryRule_867Data, BoardEndEntryRule_867CoData, BoardEndEntryRule_867Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(40);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_867Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_867Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_867CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_867CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_867Mask mask() {
			return new BoardEndEntryRule_867Mask();
		}
	}
	
	public class BoardEndEntryRule_867Data extends NeoData {
		public BoardEndEntryRule_867Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_867CoData extends NeoData {
		public BoardEndEntryRule_867CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_867Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.41
	public BoardEndEntryRule_962Access getRule_BoardEndEntryRule_962() {
		return new BoardEndEntryRule_962Access();
	}
	
	public class BoardEndEntryRule_962Access extends NeoRuleCoAccess<BoardEndEntryRule_962Data, BoardEndEntryRule_962CoData, BoardEndEntryRule_962Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(41);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_962Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_962Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_962CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_962CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_962Mask mask() {
			return new BoardEndEntryRule_962Mask();
		}
	}
	
	public class BoardEndEntryRule_962Data extends NeoData {
		public BoardEndEntryRule_962Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_962CoData extends NeoData {
		public BoardEndEntryRule_962CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_962Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.42
	public BoardEndEntryRule_963Access getRule_BoardEndEntryRule_963() {
		return new BoardEndEntryRule_963Access();
	}
	
	public class BoardEndEntryRule_963Access extends NeoRuleCoAccess<BoardEndEntryRule_963Data, BoardEndEntryRule_963CoData, BoardEndEntryRule_963Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(42);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_963Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_963Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_963CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_963CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_963Mask mask() {
			return new BoardEndEntryRule_963Mask();
		}
	}
	
	public class BoardEndEntryRule_963Data extends NeoData {
		public BoardEndEntryRule_963Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_963CoData extends NeoData {
		public BoardEndEntryRule_963CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_963Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.43
	public BoardEndEntryRule_995Access getRule_BoardEndEntryRule_995() {
		return new BoardEndEntryRule_995Access();
	}
	
	public class BoardEndEntryRule_995Access extends NeoRuleCoAccess<BoardEndEntryRule_995Data, BoardEndEntryRule_995CoData, BoardEndEntryRule_995Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(43);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRule_995Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_995Data(d));
		}
			
		@Override
		public Stream<BoardEndEntryRule_995CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRule_995CoData(d));
		}
		
		@Override
		public BoardEndEntryRule_995Mask mask() {
			return new BoardEndEntryRule_995Mask();
		}
	}
	
	public class BoardEndEntryRule_995Data extends NeoData {
		public BoardEndEntryRule_995Data(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_995CoData extends NeoData {
		public BoardEndEntryRule_995CoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRule_995Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.44
	public BoardNormalEntryRuleAccess getRule_BoardNormalEntryRule() {
		return new BoardNormalEntryRuleAccess();
	}
	
	public class BoardNormalEntryRuleAccess extends NeoRuleCoAccess<BoardNormalEntryRuleData, BoardNormalEntryRuleCoData, BoardNormalEntryRuleMask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(44);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRuleData(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRuleCoData(d));
		}
		
		@Override
		public BoardNormalEntryRuleMask mask() {
			return new BoardNormalEntryRuleMask();
		}
	}
	
	public class BoardNormalEntryRuleData extends NeoData {
		public BoardNormalEntryRuleData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRuleCoData extends NeoData {
		public BoardNormalEntryRuleCoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.45
	public BoardNormalEntryRule_1Access getRule_BoardNormalEntryRule_1() {
		return new BoardNormalEntryRule_1Access();
	}
	
	public class BoardNormalEntryRule_1Access extends NeoRuleCoAccess<BoardNormalEntryRule_1Data, BoardNormalEntryRule_1CoData, BoardNormalEntryRule_1Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(45);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_1Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_1CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_1Mask mask() {
			return new BoardNormalEntryRule_1Mask();
		}
	}
	
	public class BoardNormalEntryRule_1Data extends NeoData {
		public BoardNormalEntryRule_1Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_1CoData extends NeoData {
		public BoardNormalEntryRule_1CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.46
	public BoardNormalEntryRule_2Access getRule_BoardNormalEntryRule_2() {
		return new BoardNormalEntryRule_2Access();
	}
	
	public class BoardNormalEntryRule_2Access extends NeoRuleCoAccess<BoardNormalEntryRule_2Data, BoardNormalEntryRule_2CoData, BoardNormalEntryRule_2Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(46);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_2Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_2CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_2Mask mask() {
			return new BoardNormalEntryRule_2Mask();
		}
	}
	
	public class BoardNormalEntryRule_2Data extends NeoData {
		public BoardNormalEntryRule_2Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_2CoData extends NeoData {
		public BoardNormalEntryRule_2CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.47
	public BoardNormalEntryRule_3Access getRule_BoardNormalEntryRule_3() {
		return new BoardNormalEntryRule_3Access();
	}
	
	public class BoardNormalEntryRule_3Access extends NeoRuleCoAccess<BoardNormalEntryRule_3Data, BoardNormalEntryRule_3CoData, BoardNormalEntryRule_3Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(47);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_3Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_3CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_3Mask mask() {
			return new BoardNormalEntryRule_3Mask();
		}
	}
	
	public class BoardNormalEntryRule_3Data extends NeoData {
		public BoardNormalEntryRule_3Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_3CoData extends NeoData {
		public BoardNormalEntryRule_3CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.48
	public BoardNormalEntryRule_16Access getRule_BoardNormalEntryRule_16() {
		return new BoardNormalEntryRule_16Access();
	}
	
	public class BoardNormalEntryRule_16Access extends NeoRuleCoAccess<BoardNormalEntryRule_16Data, BoardNormalEntryRule_16CoData, BoardNormalEntryRule_16Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(48);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_16Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_16CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_16Mask mask() {
			return new BoardNormalEntryRule_16Mask();
		}
	}
	
	public class BoardNormalEntryRule_16Data extends NeoData {
		public BoardNormalEntryRule_16Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_16CoData extends NeoData {
		public BoardNormalEntryRule_16CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.49
	public BoardNormalEntryRule_17Access getRule_BoardNormalEntryRule_17() {
		return new BoardNormalEntryRule_17Access();
	}
	
	public class BoardNormalEntryRule_17Access extends NeoRuleCoAccess<BoardNormalEntryRule_17Data, BoardNormalEntryRule_17CoData, BoardNormalEntryRule_17Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(49);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_17Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_17CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_17Mask mask() {
			return new BoardNormalEntryRule_17Mask();
		}
	}
	
	public class BoardNormalEntryRule_17Data extends NeoData {
		public BoardNormalEntryRule_17Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_17CoData extends NeoData {
		public BoardNormalEntryRule_17CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.50
	public BoardNormalEntryRule_18Access getRule_BoardNormalEntryRule_18() {
		return new BoardNormalEntryRule_18Access();
	}
	
	public class BoardNormalEntryRule_18Access extends NeoRuleCoAccess<BoardNormalEntryRule_18Data, BoardNormalEntryRule_18CoData, BoardNormalEntryRule_18Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(50);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_18Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_18Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_18CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_18CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_18Mask mask() {
			return new BoardNormalEntryRule_18Mask();
		}
	}
	
	public class BoardNormalEntryRule_18Data extends NeoData {
		public BoardNormalEntryRule_18Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_18CoData extends NeoData {
		public BoardNormalEntryRule_18CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_18Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.51
	public BoardNormalEntryRule_19Access getRule_BoardNormalEntryRule_19() {
		return new BoardNormalEntryRule_19Access();
	}
	
	public class BoardNormalEntryRule_19Access extends NeoRuleCoAccess<BoardNormalEntryRule_19Data, BoardNormalEntryRule_19CoData, BoardNormalEntryRule_19Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(51);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_19Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_19Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_19CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_19CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_19Mask mask() {
			return new BoardNormalEntryRule_19Mask();
		}
	}
	
	public class BoardNormalEntryRule_19Data extends NeoData {
		public BoardNormalEntryRule_19Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_19CoData extends NeoData {
		public BoardNormalEntryRule_19CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_19Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.52
	public BoardNormalEntryRule_22Access getRule_BoardNormalEntryRule_22() {
		return new BoardNormalEntryRule_22Access();
	}
	
	public class BoardNormalEntryRule_22Access extends NeoRuleCoAccess<BoardNormalEntryRule_22Data, BoardNormalEntryRule_22CoData, BoardNormalEntryRule_22Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(52);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_22Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_22Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_22CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_22CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_22Mask mask() {
			return new BoardNormalEntryRule_22Mask();
		}
	}
	
	public class BoardNormalEntryRule_22Data extends NeoData {
		public BoardNormalEntryRule_22Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_22CoData extends NeoData {
		public BoardNormalEntryRule_22CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_22Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.53
	public BoardNormalEntryRule_23Access getRule_BoardNormalEntryRule_23() {
		return new BoardNormalEntryRule_23Access();
	}
	
	public class BoardNormalEntryRule_23Access extends NeoRuleCoAccess<BoardNormalEntryRule_23Data, BoardNormalEntryRule_23CoData, BoardNormalEntryRule_23Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(53);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_23Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_23Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_23CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_23CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_23Mask mask() {
			return new BoardNormalEntryRule_23Mask();
		}
	}
	
	public class BoardNormalEntryRule_23Data extends NeoData {
		public BoardNormalEntryRule_23Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_23CoData extends NeoData {
		public BoardNormalEntryRule_23CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_23Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.54
	public BoardNormalEntryRule_25Access getRule_BoardNormalEntryRule_25() {
		return new BoardNormalEntryRule_25Access();
	}
	
	public class BoardNormalEntryRule_25Access extends NeoRuleCoAccess<BoardNormalEntryRule_25Data, BoardNormalEntryRule_25CoData, BoardNormalEntryRule_25Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(54);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_25Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_25CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_25Mask mask() {
			return new BoardNormalEntryRule_25Mask();
		}
	}
	
	public class BoardNormalEntryRule_25Data extends NeoData {
		public BoardNormalEntryRule_25Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_25CoData extends NeoData {
		public BoardNormalEntryRule_25CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.55
	public BoardNormalEntryRule_27Access getRule_BoardNormalEntryRule_27() {
		return new BoardNormalEntryRule_27Access();
	}
	
	public class BoardNormalEntryRule_27Access extends NeoRuleCoAccess<BoardNormalEntryRule_27Data, BoardNormalEntryRule_27CoData, BoardNormalEntryRule_27Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(55);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_27Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_27Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_27CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_27CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_27Mask mask() {
			return new BoardNormalEntryRule_27Mask();
		}
	}
	
	public class BoardNormalEntryRule_27Data extends NeoData {
		public BoardNormalEntryRule_27Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_27CoData extends NeoData {
		public BoardNormalEntryRule_27CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_27Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.56
	public BoardNormalEntryRule_31Access getRule_BoardNormalEntryRule_31() {
		return new BoardNormalEntryRule_31Access();
	}
	
	public class BoardNormalEntryRule_31Access extends NeoRuleCoAccess<BoardNormalEntryRule_31Data, BoardNormalEntryRule_31CoData, BoardNormalEntryRule_31Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(56);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_31Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_31Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_31CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_31CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_31Mask mask() {
			return new BoardNormalEntryRule_31Mask();
		}
	}
	
	public class BoardNormalEntryRule_31Data extends NeoData {
		public BoardNormalEntryRule_31Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_31CoData extends NeoData {
		public BoardNormalEntryRule_31CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_31Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.57
	public BoardNormalEntryRule_64Access getRule_BoardNormalEntryRule_64() {
		return new BoardNormalEntryRule_64Access();
	}
	
	public class BoardNormalEntryRule_64Access extends NeoRuleCoAccess<BoardNormalEntryRule_64Data, BoardNormalEntryRule_64CoData, BoardNormalEntryRule_64Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(57);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_64Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_64CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_64Mask mask() {
			return new BoardNormalEntryRule_64Mask();
		}
	}
	
	public class BoardNormalEntryRule_64Data extends NeoData {
		public BoardNormalEntryRule_64Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_64CoData extends NeoData {
		public BoardNormalEntryRule_64CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.58
	public BoardNormalEntryRule_65Access getRule_BoardNormalEntryRule_65() {
		return new BoardNormalEntryRule_65Access();
	}
	
	public class BoardNormalEntryRule_65Access extends NeoRuleCoAccess<BoardNormalEntryRule_65Data, BoardNormalEntryRule_65CoData, BoardNormalEntryRule_65Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(58);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_65Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_65CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_65Mask mask() {
			return new BoardNormalEntryRule_65Mask();
		}
	}
	
	public class BoardNormalEntryRule_65Data extends NeoData {
		public BoardNormalEntryRule_65Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_65CoData extends NeoData {
		public BoardNormalEntryRule_65CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.59
	public BoardNormalEntryRule_66Access getRule_BoardNormalEntryRule_66() {
		return new BoardNormalEntryRule_66Access();
	}
	
	public class BoardNormalEntryRule_66Access extends NeoRuleCoAccess<BoardNormalEntryRule_66Data, BoardNormalEntryRule_66CoData, BoardNormalEntryRule_66Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(59);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_66Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_66Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_66CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_66CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_66Mask mask() {
			return new BoardNormalEntryRule_66Mask();
		}
	}
	
	public class BoardNormalEntryRule_66Data extends NeoData {
		public BoardNormalEntryRule_66Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_66CoData extends NeoData {
		public BoardNormalEntryRule_66CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_66Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.60
	public BoardNormalEntryRule_67Access getRule_BoardNormalEntryRule_67() {
		return new BoardNormalEntryRule_67Access();
	}
	
	public class BoardNormalEntryRule_67Access extends NeoRuleCoAccess<BoardNormalEntryRule_67Data, BoardNormalEntryRule_67CoData, BoardNormalEntryRule_67Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(60);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_67Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_67Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_67CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_67CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_67Mask mask() {
			return new BoardNormalEntryRule_67Mask();
		}
	}
	
	public class BoardNormalEntryRule_67Data extends NeoData {
		public BoardNormalEntryRule_67Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_67CoData extends NeoData {
		public BoardNormalEntryRule_67CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_67Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.61
	public BoardNormalEntryRule_97Access getRule_BoardNormalEntryRule_97() {
		return new BoardNormalEntryRule_97Access();
	}
	
	public class BoardNormalEntryRule_97Access extends NeoRuleCoAccess<BoardNormalEntryRule_97Data, BoardNormalEntryRule_97CoData, BoardNormalEntryRule_97Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(61);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_97Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_97CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_97Mask mask() {
			return new BoardNormalEntryRule_97Mask();
		}
	}
	
	public class BoardNormalEntryRule_97Data extends NeoData {
		public BoardNormalEntryRule_97Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_97CoData extends NeoData {
		public BoardNormalEntryRule_97CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.62
	public BoardNormalEntryRule_99Access getRule_BoardNormalEntryRule_99() {
		return new BoardNormalEntryRule_99Access();
	}
	
	public class BoardNormalEntryRule_99Access extends NeoRuleCoAccess<BoardNormalEntryRule_99Data, BoardNormalEntryRule_99CoData, BoardNormalEntryRule_99Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(62);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_99Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_99Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_99CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_99CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_99Mask mask() {
			return new BoardNormalEntryRule_99Mask();
		}
	}
	
	public class BoardNormalEntryRule_99Data extends NeoData {
		public BoardNormalEntryRule_99Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_99CoData extends NeoData {
		public BoardNormalEntryRule_99CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_99Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.63
	public BoardNormalEntryRule_512Access getRule_BoardNormalEntryRule_512() {
		return new BoardNormalEntryRule_512Access();
	}
	
	public class BoardNormalEntryRule_512Access extends NeoRuleCoAccess<BoardNormalEntryRule_512Data, BoardNormalEntryRule_512CoData, BoardNormalEntryRule_512Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(63);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_512Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_512Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_512CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_512CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_512Mask mask() {
			return new BoardNormalEntryRule_512Mask();
		}
	}
	
	public class BoardNormalEntryRule_512Data extends NeoData {
		public BoardNormalEntryRule_512Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_512CoData extends NeoData {
		public BoardNormalEntryRule_512CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_512Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.64
	public BoardNormalEntryRule_513Access getRule_BoardNormalEntryRule_513() {
		return new BoardNormalEntryRule_513Access();
	}
	
	public class BoardNormalEntryRule_513Access extends NeoRuleCoAccess<BoardNormalEntryRule_513Data, BoardNormalEntryRule_513CoData, BoardNormalEntryRule_513Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(64);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_513Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_513Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_513CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_513CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_513Mask mask() {
			return new BoardNormalEntryRule_513Mask();
		}
	}
	
	public class BoardNormalEntryRule_513Data extends NeoData {
		public BoardNormalEntryRule_513Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_513CoData extends NeoData {
		public BoardNormalEntryRule_513CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_513Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.65
	public BoardNormalEntryRule_514Access getRule_BoardNormalEntryRule_514() {
		return new BoardNormalEntryRule_514Access();
	}
	
	public class BoardNormalEntryRule_514Access extends NeoRuleCoAccess<BoardNormalEntryRule_514Data, BoardNormalEntryRule_514CoData, BoardNormalEntryRule_514Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(65);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_514Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_514Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_514CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_514CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_514Mask mask() {
			return new BoardNormalEntryRule_514Mask();
		}
	}
	
	public class BoardNormalEntryRule_514Data extends NeoData {
		public BoardNormalEntryRule_514Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_514CoData extends NeoData {
		public BoardNormalEntryRule_514CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_514Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.66
	public BoardNormalEntryRule_515Access getRule_BoardNormalEntryRule_515() {
		return new BoardNormalEntryRule_515Access();
	}
	
	public class BoardNormalEntryRule_515Access extends NeoRuleCoAccess<BoardNormalEntryRule_515Data, BoardNormalEntryRule_515CoData, BoardNormalEntryRule_515Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(66);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_515Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_515Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_515CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_515CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_515Mask mask() {
			return new BoardNormalEntryRule_515Mask();
		}
	}
	
	public class BoardNormalEntryRule_515Data extends NeoData {
		public BoardNormalEntryRule_515Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_515CoData extends NeoData {
		public BoardNormalEntryRule_515CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_515Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.67
	public BoardNormalEntryRule_576Access getRule_BoardNormalEntryRule_576() {
		return new BoardNormalEntryRule_576Access();
	}
	
	public class BoardNormalEntryRule_576Access extends NeoRuleCoAccess<BoardNormalEntryRule_576Data, BoardNormalEntryRule_576CoData, BoardNormalEntryRule_576Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(67);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_576Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_576Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_576CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_576CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_576Mask mask() {
			return new BoardNormalEntryRule_576Mask();
		}
	}
	
	public class BoardNormalEntryRule_576Data extends NeoData {
		public BoardNormalEntryRule_576Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_576CoData extends NeoData {
		public BoardNormalEntryRule_576CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_576Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.68
	public BoardNormalEntryRule_577Access getRule_BoardNormalEntryRule_577() {
		return new BoardNormalEntryRule_577Access();
	}
	
	public class BoardNormalEntryRule_577Access extends NeoRuleCoAccess<BoardNormalEntryRule_577Data, BoardNormalEntryRule_577CoData, BoardNormalEntryRule_577Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(68);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_577Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_577Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_577CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_577CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_577Mask mask() {
			return new BoardNormalEntryRule_577Mask();
		}
	}
	
	public class BoardNormalEntryRule_577Data extends NeoData {
		public BoardNormalEntryRule_577Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_577CoData extends NeoData {
		public BoardNormalEntryRule_577CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_577Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.69
	public BoardNormalEntryRule_578Access getRule_BoardNormalEntryRule_578() {
		return new BoardNormalEntryRule_578Access();
	}
	
	public class BoardNormalEntryRule_578Access extends NeoRuleCoAccess<BoardNormalEntryRule_578Data, BoardNormalEntryRule_578CoData, BoardNormalEntryRule_578Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(69);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_578Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_578Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_578CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_578CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_578Mask mask() {
			return new BoardNormalEntryRule_578Mask();
		}
	}
	
	public class BoardNormalEntryRule_578Data extends NeoData {
		public BoardNormalEntryRule_578Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_578CoData extends NeoData {
		public BoardNormalEntryRule_578CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_578Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.70
	public BoardNormalEntryRule_579Access getRule_BoardNormalEntryRule_579() {
		return new BoardNormalEntryRule_579Access();
	}
	
	public class BoardNormalEntryRule_579Access extends NeoRuleCoAccess<BoardNormalEntryRule_579Data, BoardNormalEntryRule_579CoData, BoardNormalEntryRule_579Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(70);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_579Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_579Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_579CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_579CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_579Mask mask() {
			return new BoardNormalEntryRule_579Mask();
		}
	}
	
	public class BoardNormalEntryRule_579Data extends NeoData {
		public BoardNormalEntryRule_579Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_579CoData extends NeoData {
		public BoardNormalEntryRule_579CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_579Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.71
	public BoardNormalEntryRule_609Access getRule_BoardNormalEntryRule_609() {
		return new BoardNormalEntryRule_609Access();
	}
	
	public class BoardNormalEntryRule_609Access extends NeoRuleCoAccess<BoardNormalEntryRule_609Data, BoardNormalEntryRule_609CoData, BoardNormalEntryRule_609Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(71);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_609Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_609Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_609CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_609CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_609Mask mask() {
			return new BoardNormalEntryRule_609Mask();
		}
	}
	
	public class BoardNormalEntryRule_609Data extends NeoData {
		public BoardNormalEntryRule_609Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_609CoData extends NeoData {
		public BoardNormalEntryRule_609CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_609Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.72
	public BoardNormalEntryRule_611Access getRule_BoardNormalEntryRule_611() {
		return new BoardNormalEntryRule_611Access();
	}
	
	public class BoardNormalEntryRule_611Access extends NeoRuleCoAccess<BoardNormalEntryRule_611Data, BoardNormalEntryRule_611CoData, BoardNormalEntryRule_611Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(72);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_611Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_611Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_611CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_611CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_611Mask mask() {
			return new BoardNormalEntryRule_611Mask();
		}
	}
	
	public class BoardNormalEntryRule_611Data extends NeoData {
		public BoardNormalEntryRule_611Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_611CoData extends NeoData {
		public BoardNormalEntryRule_611CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_611Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.73
	public BoardNormalEntryRule_642Access getRule_BoardNormalEntryRule_642() {
		return new BoardNormalEntryRule_642Access();
	}
	
	public class BoardNormalEntryRule_642Access extends NeoRuleCoAccess<BoardNormalEntryRule_642Data, BoardNormalEntryRule_642CoData, BoardNormalEntryRule_642Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(73);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_642Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_642Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_642CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_642CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_642Mask mask() {
			return new BoardNormalEntryRule_642Mask();
		}
	}
	
	public class BoardNormalEntryRule_642Data extends NeoData {
		public BoardNormalEntryRule_642Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_642CoData extends NeoData {
		public BoardNormalEntryRule_642CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_642Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.74
	public BoardNormalEntryRule_643Access getRule_BoardNormalEntryRule_643() {
		return new BoardNormalEntryRule_643Access();
	}
	
	public class BoardNormalEntryRule_643Access extends NeoRuleCoAccess<BoardNormalEntryRule_643Data, BoardNormalEntryRule_643CoData, BoardNormalEntryRule_643Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(74);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_643Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_643Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_643CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_643CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_643Mask mask() {
			return new BoardNormalEntryRule_643Mask();
		}
	}
	
	public class BoardNormalEntryRule_643Data extends NeoData {
		public BoardNormalEntryRule_643Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_643CoData extends NeoData {
		public BoardNormalEntryRule_643CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_643Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.75
	public BoardNormalEntryRule_706Access getRule_BoardNormalEntryRule_706() {
		return new BoardNormalEntryRule_706Access();
	}
	
	public class BoardNormalEntryRule_706Access extends NeoRuleCoAccess<BoardNormalEntryRule_706Data, BoardNormalEntryRule_706CoData, BoardNormalEntryRule_706Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(75);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_706Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_706Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_706CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_706CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_706Mask mask() {
			return new BoardNormalEntryRule_706Mask();
		}
	}
	
	public class BoardNormalEntryRule_706Data extends NeoData {
		public BoardNormalEntryRule_706Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_706CoData extends NeoData {
		public BoardNormalEntryRule_706CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_706Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.76
	public BoardNormalEntryRule_707Access getRule_BoardNormalEntryRule_707() {
		return new BoardNormalEntryRule_707Access();
	}
	
	public class BoardNormalEntryRule_707Access extends NeoRuleCoAccess<BoardNormalEntryRule_707Data, BoardNormalEntryRule_707CoData, BoardNormalEntryRule_707Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(76);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_707Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_707Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_707CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_707CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_707Mask mask() {
			return new BoardNormalEntryRule_707Mask();
		}
	}
	
	public class BoardNormalEntryRule_707Data extends NeoData {
		public BoardNormalEntryRule_707Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_707CoData extends NeoData {
		public BoardNormalEntryRule_707CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_707Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.77
	public BoardNormalEntryRule_739Access getRule_BoardNormalEntryRule_739() {
		return new BoardNormalEntryRule_739Access();
	}
	
	public class BoardNormalEntryRule_739Access extends NeoRuleCoAccess<BoardNormalEntryRule_739Data, BoardNormalEntryRule_739CoData, BoardNormalEntryRule_739Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(77);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_739Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_739Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_739CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_739CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_739Mask mask() {
			return new BoardNormalEntryRule_739Mask();
		}
	}
	
	public class BoardNormalEntryRule_739Data extends NeoData {
		public BoardNormalEntryRule_739Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_739CoData extends NeoData {
		public BoardNormalEntryRule_739CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_739Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.78
	public BoardNormalEntryRule_832Access getRule_BoardNormalEntryRule_832() {
		return new BoardNormalEntryRule_832Access();
	}
	
	public class BoardNormalEntryRule_832Access extends NeoRuleCoAccess<BoardNormalEntryRule_832Data, BoardNormalEntryRule_832CoData, BoardNormalEntryRule_832Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(78);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_832Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_832Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_832CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_832CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_832Mask mask() {
			return new BoardNormalEntryRule_832Mask();
		}
	}
	
	public class BoardNormalEntryRule_832Data extends NeoData {
		public BoardNormalEntryRule_832Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_832CoData extends NeoData {
		public BoardNormalEntryRule_832CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_832Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.79
	public BoardNormalEntryRule_833Access getRule_BoardNormalEntryRule_833() {
		return new BoardNormalEntryRule_833Access();
	}
	
	public class BoardNormalEntryRule_833Access extends NeoRuleCoAccess<BoardNormalEntryRule_833Data, BoardNormalEntryRule_833CoData, BoardNormalEntryRule_833Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(79);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_833Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_833Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_833CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_833CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_833Mask mask() {
			return new BoardNormalEntryRule_833Mask();
		}
	}
	
	public class BoardNormalEntryRule_833Data extends NeoData {
		public BoardNormalEntryRule_833Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_833CoData extends NeoData {
		public BoardNormalEntryRule_833CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_833Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.80
	public BoardNormalEntryRule_834Access getRule_BoardNormalEntryRule_834() {
		return new BoardNormalEntryRule_834Access();
	}
	
	public class BoardNormalEntryRule_834Access extends NeoRuleCoAccess<BoardNormalEntryRule_834Data, BoardNormalEntryRule_834CoData, BoardNormalEntryRule_834Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(80);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_834Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_834Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_834CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_834CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_834Mask mask() {
			return new BoardNormalEntryRule_834Mask();
		}
	}
	
	public class BoardNormalEntryRule_834Data extends NeoData {
		public BoardNormalEntryRule_834Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_834CoData extends NeoData {
		public BoardNormalEntryRule_834CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_834Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.81
	public BoardNormalEntryRule_835Access getRule_BoardNormalEntryRule_835() {
		return new BoardNormalEntryRule_835Access();
	}
	
	public class BoardNormalEntryRule_835Access extends NeoRuleCoAccess<BoardNormalEntryRule_835Data, BoardNormalEntryRule_835CoData, BoardNormalEntryRule_835Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(81);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_835Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_835Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_835CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_835CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_835Mask mask() {
			return new BoardNormalEntryRule_835Mask();
		}
	}
	
	public class BoardNormalEntryRule_835Data extends NeoData {
		public BoardNormalEntryRule_835Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_835CoData extends NeoData {
		public BoardNormalEntryRule_835CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_835Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.82
	public BoardNormalEntryRule_865Access getRule_BoardNormalEntryRule_865() {
		return new BoardNormalEntryRule_865Access();
	}
	
	public class BoardNormalEntryRule_865Access extends NeoRuleCoAccess<BoardNormalEntryRule_865Data, BoardNormalEntryRule_865CoData, BoardNormalEntryRule_865Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(82);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_865Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_865Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_865CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_865CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_865Mask mask() {
			return new BoardNormalEntryRule_865Mask();
		}
	}
	
	public class BoardNormalEntryRule_865Data extends NeoData {
		public BoardNormalEntryRule_865Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_865CoData extends NeoData {
		public BoardNormalEntryRule_865CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_865Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.83
	public BoardNormalEntryRule_867Access getRule_BoardNormalEntryRule_867() {
		return new BoardNormalEntryRule_867Access();
	}
	
	public class BoardNormalEntryRule_867Access extends NeoRuleCoAccess<BoardNormalEntryRule_867Data, BoardNormalEntryRule_867CoData, BoardNormalEntryRule_867Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(83);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_867Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_867Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_867CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_867CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_867Mask mask() {
			return new BoardNormalEntryRule_867Mask();
		}
	}
	
	public class BoardNormalEntryRule_867Data extends NeoData {
		public BoardNormalEntryRule_867Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_867CoData extends NeoData {
		public BoardNormalEntryRule_867CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_867Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.84
	public BoardNormalEntryRule_962Access getRule_BoardNormalEntryRule_962() {
		return new BoardNormalEntryRule_962Access();
	}
	
	public class BoardNormalEntryRule_962Access extends NeoRuleCoAccess<BoardNormalEntryRule_962Data, BoardNormalEntryRule_962CoData, BoardNormalEntryRule_962Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(84);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_962Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_962Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_962CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_962CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_962Mask mask() {
			return new BoardNormalEntryRule_962Mask();
		}
	}
	
	public class BoardNormalEntryRule_962Data extends NeoData {
		public BoardNormalEntryRule_962Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_962CoData extends NeoData {
		public BoardNormalEntryRule_962CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_962Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.85
	public BoardNormalEntryRule_963Access getRule_BoardNormalEntryRule_963() {
		return new BoardNormalEntryRule_963Access();
	}
	
	public class BoardNormalEntryRule_963Access extends NeoRuleCoAccess<BoardNormalEntryRule_963Data, BoardNormalEntryRule_963CoData, BoardNormalEntryRule_963Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(85);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_963Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_963Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_963CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_963CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_963Mask mask() {
			return new BoardNormalEntryRule_963Mask();
		}
	}
	
	public class BoardNormalEntryRule_963Data extends NeoData {
		public BoardNormalEntryRule_963Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_963CoData extends NeoData {
		public BoardNormalEntryRule_963CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_963Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.86
	public BoardNormalEntryRule_995Access getRule_BoardNormalEntryRule_995() {
		return new BoardNormalEntryRule_995Access();
	}
	
	public class BoardNormalEntryRule_995Access extends NeoRuleCoAccess<BoardNormalEntryRule_995Data, BoardNormalEntryRule_995CoData, BoardNormalEntryRule_995Mask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(86);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRule_995Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_995Data(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRule_995CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRule_995CoData(d));
		}
		
		@Override
		public BoardNormalEntryRule_995Mask mask() {
			return new BoardNormalEntryRule_995Mask();
		}
	}
	
	public class BoardNormalEntryRule_995Data extends NeoData {
		public BoardNormalEntryRule_995Data(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_995CoData extends NeoData {
		public BoardNormalEntryRule_995CoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRule_995Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.87
	public FirstColAllRowsEndAccess getRule_FirstColAllRowsEnd() {
		return new FirstColAllRowsEndAccess();
	}
	
	public class FirstColAllRowsEndAccess extends NeoRuleCoAccess<FirstColAllRowsEndData, FirstColAllRowsEndCoData, FirstColAllRowsEndMask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(87);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEndData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEndData(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEndCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEndCoData(d));
		}
		
		@Override
		public FirstColAllRowsEndMask mask() {
			return new FirstColAllRowsEndMask();
		}
	}
	
	public class FirstColAllRowsEndData extends NeoData {
		public FirstColAllRowsEndData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEndCoData extends NeoData {
		public FirstColAllRowsEndCoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEndMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.88
	public FirstColAllRowsEnd_1Access getRule_FirstColAllRowsEnd_1() {
		return new FirstColAllRowsEnd_1Access();
	}
	
	public class FirstColAllRowsEnd_1Access extends NeoRuleCoAccess<FirstColAllRowsEnd_1Data, FirstColAllRowsEnd_1CoData, FirstColAllRowsEnd_1Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(88);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_1Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_1CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_1Mask mask() {
			return new FirstColAllRowsEnd_1Mask();
		}
	}
	
	public class FirstColAllRowsEnd_1Data extends NeoData {
		public FirstColAllRowsEnd_1Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_1CoData extends NeoData {
		public FirstColAllRowsEnd_1CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.89
	public FirstColAllRowsEnd_2Access getRule_FirstColAllRowsEnd_2() {
		return new FirstColAllRowsEnd_2Access();
	}
	
	public class FirstColAllRowsEnd_2Access extends NeoRuleCoAccess<FirstColAllRowsEnd_2Data, FirstColAllRowsEnd_2CoData, FirstColAllRowsEnd_2Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(89);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_2Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_2CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_2Mask mask() {
			return new FirstColAllRowsEnd_2Mask();
		}
	}
	
	public class FirstColAllRowsEnd_2Data extends NeoData {
		public FirstColAllRowsEnd_2Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_2CoData extends NeoData {
		public FirstColAllRowsEnd_2CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.90
	public FirstColAllRowsEnd_3Access getRule_FirstColAllRowsEnd_3() {
		return new FirstColAllRowsEnd_3Access();
	}
	
	public class FirstColAllRowsEnd_3Access extends NeoRuleCoAccess<FirstColAllRowsEnd_3Data, FirstColAllRowsEnd_3CoData, FirstColAllRowsEnd_3Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(90);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_3Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_3CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_3Mask mask() {
			return new FirstColAllRowsEnd_3Mask();
		}
	}
	
	public class FirstColAllRowsEnd_3Data extends NeoData {
		public FirstColAllRowsEnd_3Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_3CoData extends NeoData {
		public FirstColAllRowsEnd_3CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.91
	public FirstColAllRowsEnd_4Access getRule_FirstColAllRowsEnd_4() {
		return new FirstColAllRowsEnd_4Access();
	}
	
	public class FirstColAllRowsEnd_4Access extends NeoRuleCoAccess<FirstColAllRowsEnd_4Data, FirstColAllRowsEnd_4CoData, FirstColAllRowsEnd_4Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(91);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_4Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_4CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_4Mask mask() {
			return new FirstColAllRowsEnd_4Mask();
		}
	}
	
	public class FirstColAllRowsEnd_4Data extends NeoData {
		public FirstColAllRowsEnd_4Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_4CoData extends NeoData {
		public FirstColAllRowsEnd_4CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.92
	public FirstColAllRowsEnd_5Access getRule_FirstColAllRowsEnd_5() {
		return new FirstColAllRowsEnd_5Access();
	}
	
	public class FirstColAllRowsEnd_5Access extends NeoRuleCoAccess<FirstColAllRowsEnd_5Data, FirstColAllRowsEnd_5CoData, FirstColAllRowsEnd_5Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(92);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_5Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_5CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_5Mask mask() {
			return new FirstColAllRowsEnd_5Mask();
		}
	}
	
	public class FirstColAllRowsEnd_5Data extends NeoData {
		public FirstColAllRowsEnd_5Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_5CoData extends NeoData {
		public FirstColAllRowsEnd_5CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.93
	public FirstColAllRowsEnd_6Access getRule_FirstColAllRowsEnd_6() {
		return new FirstColAllRowsEnd_6Access();
	}
	
	public class FirstColAllRowsEnd_6Access extends NeoRuleCoAccess<FirstColAllRowsEnd_6Data, FirstColAllRowsEnd_6CoData, FirstColAllRowsEnd_6Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(93);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_6Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_6Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_6CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_6CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_6Mask mask() {
			return new FirstColAllRowsEnd_6Mask();
		}
	}
	
	public class FirstColAllRowsEnd_6Data extends NeoData {
		public FirstColAllRowsEnd_6Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_6CoData extends NeoData {
		public FirstColAllRowsEnd_6CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_6Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.94
	public FirstColAllRowsEnd_7Access getRule_FirstColAllRowsEnd_7() {
		return new FirstColAllRowsEnd_7Access();
	}
	
	public class FirstColAllRowsEnd_7Access extends NeoRuleCoAccess<FirstColAllRowsEnd_7Data, FirstColAllRowsEnd_7CoData, FirstColAllRowsEnd_7Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(94);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_7Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_7CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_7Mask mask() {
			return new FirstColAllRowsEnd_7Mask();
		}
	}
	
	public class FirstColAllRowsEnd_7Data extends NeoData {
		public FirstColAllRowsEnd_7Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_7CoData extends NeoData {
		public FirstColAllRowsEnd_7CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.95
	public FirstColAllRowsEnd_15Access getRule_FirstColAllRowsEnd_15() {
		return new FirstColAllRowsEnd_15Access();
	}
	
	public class FirstColAllRowsEnd_15Access extends NeoRuleCoAccess<FirstColAllRowsEnd_15Data, FirstColAllRowsEnd_15CoData, FirstColAllRowsEnd_15Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(95);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_15Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_15Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_15CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_15CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_15Mask mask() {
			return new FirstColAllRowsEnd_15Mask();
		}
	}
	
	public class FirstColAllRowsEnd_15Data extends NeoData {
		public FirstColAllRowsEnd_15Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_15CoData extends NeoData {
		public FirstColAllRowsEnd_15CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_15Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.96
	public FirstColAllRowsEnd_16Access getRule_FirstColAllRowsEnd_16() {
		return new FirstColAllRowsEnd_16Access();
	}
	
	public class FirstColAllRowsEnd_16Access extends NeoRuleCoAccess<FirstColAllRowsEnd_16Data, FirstColAllRowsEnd_16CoData, FirstColAllRowsEnd_16Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(96);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_16Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_16CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_16Mask mask() {
			return new FirstColAllRowsEnd_16Mask();
		}
	}
	
	public class FirstColAllRowsEnd_16Data extends NeoData {
		public FirstColAllRowsEnd_16Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_16CoData extends NeoData {
		public FirstColAllRowsEnd_16CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.97
	public FirstColAllRowsEnd_17Access getRule_FirstColAllRowsEnd_17() {
		return new FirstColAllRowsEnd_17Access();
	}
	
	public class FirstColAllRowsEnd_17Access extends NeoRuleCoAccess<FirstColAllRowsEnd_17Data, FirstColAllRowsEnd_17CoData, FirstColAllRowsEnd_17Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(97);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_17Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_17CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_17Mask mask() {
			return new FirstColAllRowsEnd_17Mask();
		}
	}
	
	public class FirstColAllRowsEnd_17Data extends NeoData {
		public FirstColAllRowsEnd_17Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_17CoData extends NeoData {
		public FirstColAllRowsEnd_17CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.98
	public FirstColAllRowsEnd_64Access getRule_FirstColAllRowsEnd_64() {
		return new FirstColAllRowsEnd_64Access();
	}
	
	public class FirstColAllRowsEnd_64Access extends NeoRuleCoAccess<FirstColAllRowsEnd_64Data, FirstColAllRowsEnd_64CoData, FirstColAllRowsEnd_64Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(98);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_64Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_64CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_64Mask mask() {
			return new FirstColAllRowsEnd_64Mask();
		}
	}
	
	public class FirstColAllRowsEnd_64Data extends NeoData {
		public FirstColAllRowsEnd_64Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_64CoData extends NeoData {
		public FirstColAllRowsEnd_64CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.99
	public FirstColAllRowsEnd_65Access getRule_FirstColAllRowsEnd_65() {
		return new FirstColAllRowsEnd_65Access();
	}
	
	public class FirstColAllRowsEnd_65Access extends NeoRuleCoAccess<FirstColAllRowsEnd_65Data, FirstColAllRowsEnd_65CoData, FirstColAllRowsEnd_65Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(99);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_65Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_65CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_65Mask mask() {
			return new FirstColAllRowsEnd_65Mask();
		}
	}
	
	public class FirstColAllRowsEnd_65Data extends NeoData {
		public FirstColAllRowsEnd_65Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_65CoData extends NeoData {
		public FirstColAllRowsEnd_65CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.100
	public FirstColAllRowsEnd_80Access getRule_FirstColAllRowsEnd_80() {
		return new FirstColAllRowsEnd_80Access();
	}
	
	public class FirstColAllRowsEnd_80Access extends NeoRuleCoAccess<FirstColAllRowsEnd_80Data, FirstColAllRowsEnd_80CoData, FirstColAllRowsEnd_80Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(100);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_80Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_80Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_80CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_80CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_80Mask mask() {
			return new FirstColAllRowsEnd_80Mask();
		}
	}
	
	public class FirstColAllRowsEnd_80Data extends NeoData {
		public FirstColAllRowsEnd_80Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_80CoData extends NeoData {
		public FirstColAllRowsEnd_80CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_80Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.101
	public FirstColAllRowsEnd_81Access getRule_FirstColAllRowsEnd_81() {
		return new FirstColAllRowsEnd_81Access();
	}
	
	public class FirstColAllRowsEnd_81Access extends NeoRuleCoAccess<FirstColAllRowsEnd_81Data, FirstColAllRowsEnd_81CoData, FirstColAllRowsEnd_81Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(101);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_81Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_81Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_81CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_81CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_81Mask mask() {
			return new FirstColAllRowsEnd_81Mask();
		}
	}
	
	public class FirstColAllRowsEnd_81Data extends NeoData {
		public FirstColAllRowsEnd_81Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_81CoData extends NeoData {
		public FirstColAllRowsEnd_81CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_81Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.102
	public FirstColAllRowsEnd_112Access getRule_FirstColAllRowsEnd_112() {
		return new FirstColAllRowsEnd_112Access();
	}
	
	public class FirstColAllRowsEnd_112Access extends NeoRuleCoAccess<FirstColAllRowsEnd_112Data, FirstColAllRowsEnd_112CoData, FirstColAllRowsEnd_112Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(102);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_112Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_112Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_112CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_112CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_112Mask mask() {
			return new FirstColAllRowsEnd_112Mask();
		}
	}
	
	public class FirstColAllRowsEnd_112Data extends NeoData {
		public FirstColAllRowsEnd_112Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_112CoData extends NeoData {
		public FirstColAllRowsEnd_112CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_112Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.103
	public FirstColAllRowsEnd_113Access getRule_FirstColAllRowsEnd_113() {
		return new FirstColAllRowsEnd_113Access();
	}
	
	public class FirstColAllRowsEnd_113Access extends NeoRuleCoAccess<FirstColAllRowsEnd_113Data, FirstColAllRowsEnd_113CoData, FirstColAllRowsEnd_113Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(103);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_113Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_113Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_113CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_113CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_113Mask mask() {
			return new FirstColAllRowsEnd_113Mask();
		}
	}
	
	public class FirstColAllRowsEnd_113Data extends NeoData {
		public FirstColAllRowsEnd_113Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_113CoData extends NeoData {
		public FirstColAllRowsEnd_113CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_113Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.104
	public FirstColAllRowsEnd_193Access getRule_FirstColAllRowsEnd_193() {
		return new FirstColAllRowsEnd_193Access();
	}
	
	public class FirstColAllRowsEnd_193Access extends NeoRuleCoAccess<FirstColAllRowsEnd_193Data, FirstColAllRowsEnd_193CoData, FirstColAllRowsEnd_193Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(104);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_193Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_193Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_193CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_193CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_193Mask mask() {
			return new FirstColAllRowsEnd_193Mask();
		}
	}
	
	public class FirstColAllRowsEnd_193Data extends NeoData {
		public FirstColAllRowsEnd_193Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_193CoData extends NeoData {
		public FirstColAllRowsEnd_193CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_193Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.105
	public FirstColAllRowsEnd_209Access getRule_FirstColAllRowsEnd_209() {
		return new FirstColAllRowsEnd_209Access();
	}
	
	public class FirstColAllRowsEnd_209Access extends NeoRuleCoAccess<FirstColAllRowsEnd_209Data, FirstColAllRowsEnd_209CoData, FirstColAllRowsEnd_209Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(105);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_209Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_209Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_209CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_209CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_209Mask mask() {
			return new FirstColAllRowsEnd_209Mask();
		}
	}
	
	public class FirstColAllRowsEnd_209Data extends NeoData {
		public FirstColAllRowsEnd_209Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_209CoData extends NeoData {
		public FirstColAllRowsEnd_209CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_209Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.106
	public FirstColAllRowsEnd_241Access getRule_FirstColAllRowsEnd_241() {
		return new FirstColAllRowsEnd_241Access();
	}
	
	public class FirstColAllRowsEnd_241Access extends NeoRuleCoAccess<FirstColAllRowsEnd_241Data, FirstColAllRowsEnd_241CoData, FirstColAllRowsEnd_241Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(106);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_241Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_241Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEnd_241CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_241CoData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_241Mask mask() {
			return new FirstColAllRowsEnd_241Mask();
		}
	}
	
	public class FirstColAllRowsEnd_241Data extends NeoData {
		public FirstColAllRowsEnd_241Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_241CoData extends NeoData {
		public FirstColAllRowsEnd_241CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEnd_241Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.107
	public FirstColAllRowsNormalAccess getRule_FirstColAllRowsNormal() {
		return new FirstColAllRowsNormalAccess();
	}
	
	public class FirstColAllRowsNormalAccess extends NeoRuleCoAccess<FirstColAllRowsNormalData, FirstColAllRowsNormalCoData, FirstColAllRowsNormalMask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(107);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormalData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormalData(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormalCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormalCoData(d));
		}
		
		@Override
		public FirstColAllRowsNormalMask mask() {
			return new FirstColAllRowsNormalMask();
		}
	}
	
	public class FirstColAllRowsNormalData extends NeoData {
		public FirstColAllRowsNormalData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormalCoData extends NeoData {
		public FirstColAllRowsNormalCoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormalMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.108
	public FirstColAllRowsNormal_1Access getRule_FirstColAllRowsNormal_1() {
		return new FirstColAllRowsNormal_1Access();
	}
	
	public class FirstColAllRowsNormal_1Access extends NeoRuleCoAccess<FirstColAllRowsNormal_1Data, FirstColAllRowsNormal_1CoData, FirstColAllRowsNormal_1Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(108);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_1Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_1CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_1Mask mask() {
			return new FirstColAllRowsNormal_1Mask();
		}
	}
	
	public class FirstColAllRowsNormal_1Data extends NeoData {
		public FirstColAllRowsNormal_1Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_1CoData extends NeoData {
		public FirstColAllRowsNormal_1CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.109
	public FirstColAllRowsNormal_2Access getRule_FirstColAllRowsNormal_2() {
		return new FirstColAllRowsNormal_2Access();
	}
	
	public class FirstColAllRowsNormal_2Access extends NeoRuleCoAccess<FirstColAllRowsNormal_2Data, FirstColAllRowsNormal_2CoData, FirstColAllRowsNormal_2Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(109);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_2Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_2CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_2Mask mask() {
			return new FirstColAllRowsNormal_2Mask();
		}
	}
	
	public class FirstColAllRowsNormal_2Data extends NeoData {
		public FirstColAllRowsNormal_2Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_2CoData extends NeoData {
		public FirstColAllRowsNormal_2CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.110
	public FirstColAllRowsNormal_3Access getRule_FirstColAllRowsNormal_3() {
		return new FirstColAllRowsNormal_3Access();
	}
	
	public class FirstColAllRowsNormal_3Access extends NeoRuleCoAccess<FirstColAllRowsNormal_3Data, FirstColAllRowsNormal_3CoData, FirstColAllRowsNormal_3Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(110);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_3Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_3CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_3Mask mask() {
			return new FirstColAllRowsNormal_3Mask();
		}
	}
	
	public class FirstColAllRowsNormal_3Data extends NeoData {
		public FirstColAllRowsNormal_3Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_3CoData extends NeoData {
		public FirstColAllRowsNormal_3CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.111
	public FirstColAllRowsNormal_4Access getRule_FirstColAllRowsNormal_4() {
		return new FirstColAllRowsNormal_4Access();
	}
	
	public class FirstColAllRowsNormal_4Access extends NeoRuleCoAccess<FirstColAllRowsNormal_4Data, FirstColAllRowsNormal_4CoData, FirstColAllRowsNormal_4Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(111);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_4Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_4CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_4Mask mask() {
			return new FirstColAllRowsNormal_4Mask();
		}
	}
	
	public class FirstColAllRowsNormal_4Data extends NeoData {
		public FirstColAllRowsNormal_4Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_4CoData extends NeoData {
		public FirstColAllRowsNormal_4CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.112
	public FirstColAllRowsNormal_5Access getRule_FirstColAllRowsNormal_5() {
		return new FirstColAllRowsNormal_5Access();
	}
	
	public class FirstColAllRowsNormal_5Access extends NeoRuleCoAccess<FirstColAllRowsNormal_5Data, FirstColAllRowsNormal_5CoData, FirstColAllRowsNormal_5Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(112);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_5Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_5CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_5Mask mask() {
			return new FirstColAllRowsNormal_5Mask();
		}
	}
	
	public class FirstColAllRowsNormal_5Data extends NeoData {
		public FirstColAllRowsNormal_5Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_5CoData extends NeoData {
		public FirstColAllRowsNormal_5CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.113
	public FirstColAllRowsNormal_6Access getRule_FirstColAllRowsNormal_6() {
		return new FirstColAllRowsNormal_6Access();
	}
	
	public class FirstColAllRowsNormal_6Access extends NeoRuleCoAccess<FirstColAllRowsNormal_6Data, FirstColAllRowsNormal_6CoData, FirstColAllRowsNormal_6Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(113);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_6Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_6Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_6CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_6CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_6Mask mask() {
			return new FirstColAllRowsNormal_6Mask();
		}
	}
	
	public class FirstColAllRowsNormal_6Data extends NeoData {
		public FirstColAllRowsNormal_6Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_6CoData extends NeoData {
		public FirstColAllRowsNormal_6CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_6Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.114
	public FirstColAllRowsNormal_7Access getRule_FirstColAllRowsNormal_7() {
		return new FirstColAllRowsNormal_7Access();
	}
	
	public class FirstColAllRowsNormal_7Access extends NeoRuleCoAccess<FirstColAllRowsNormal_7Data, FirstColAllRowsNormal_7CoData, FirstColAllRowsNormal_7Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(114);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_7Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_7CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_7Mask mask() {
			return new FirstColAllRowsNormal_7Mask();
		}
	}
	
	public class FirstColAllRowsNormal_7Data extends NeoData {
		public FirstColAllRowsNormal_7Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_7CoData extends NeoData {
		public FirstColAllRowsNormal_7CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.115
	public FirstColAllRowsNormal_15Access getRule_FirstColAllRowsNormal_15() {
		return new FirstColAllRowsNormal_15Access();
	}
	
	public class FirstColAllRowsNormal_15Access extends NeoRuleCoAccess<FirstColAllRowsNormal_15Data, FirstColAllRowsNormal_15CoData, FirstColAllRowsNormal_15Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(115);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_15Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_15Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_15CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_15CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_15Mask mask() {
			return new FirstColAllRowsNormal_15Mask();
		}
	}
	
	public class FirstColAllRowsNormal_15Data extends NeoData {
		public FirstColAllRowsNormal_15Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_15CoData extends NeoData {
		public FirstColAllRowsNormal_15CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_15Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.116
	public FirstColAllRowsNormal_16Access getRule_FirstColAllRowsNormal_16() {
		return new FirstColAllRowsNormal_16Access();
	}
	
	public class FirstColAllRowsNormal_16Access extends NeoRuleCoAccess<FirstColAllRowsNormal_16Data, FirstColAllRowsNormal_16CoData, FirstColAllRowsNormal_16Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(116);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_16Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_16CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_16Mask mask() {
			return new FirstColAllRowsNormal_16Mask();
		}
	}
	
	public class FirstColAllRowsNormal_16Data extends NeoData {
		public FirstColAllRowsNormal_16Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_16CoData extends NeoData {
		public FirstColAllRowsNormal_16CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.117
	public FirstColAllRowsNormal_17Access getRule_FirstColAllRowsNormal_17() {
		return new FirstColAllRowsNormal_17Access();
	}
	
	public class FirstColAllRowsNormal_17Access extends NeoRuleCoAccess<FirstColAllRowsNormal_17Data, FirstColAllRowsNormal_17CoData, FirstColAllRowsNormal_17Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(117);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_17Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_17CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_17Mask mask() {
			return new FirstColAllRowsNormal_17Mask();
		}
	}
	
	public class FirstColAllRowsNormal_17Data extends NeoData {
		public FirstColAllRowsNormal_17Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_17CoData extends NeoData {
		public FirstColAllRowsNormal_17CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.118
	public FirstColAllRowsNormal_64Access getRule_FirstColAllRowsNormal_64() {
		return new FirstColAllRowsNormal_64Access();
	}
	
	public class FirstColAllRowsNormal_64Access extends NeoRuleCoAccess<FirstColAllRowsNormal_64Data, FirstColAllRowsNormal_64CoData, FirstColAllRowsNormal_64Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(118);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_64Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_64CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_64Mask mask() {
			return new FirstColAllRowsNormal_64Mask();
		}
	}
	
	public class FirstColAllRowsNormal_64Data extends NeoData {
		public FirstColAllRowsNormal_64Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_64CoData extends NeoData {
		public FirstColAllRowsNormal_64CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.119
	public FirstColAllRowsNormal_65Access getRule_FirstColAllRowsNormal_65() {
		return new FirstColAllRowsNormal_65Access();
	}
	
	public class FirstColAllRowsNormal_65Access extends NeoRuleCoAccess<FirstColAllRowsNormal_65Data, FirstColAllRowsNormal_65CoData, FirstColAllRowsNormal_65Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(119);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_65Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_65CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_65Mask mask() {
			return new FirstColAllRowsNormal_65Mask();
		}
	}
	
	public class FirstColAllRowsNormal_65Data extends NeoData {
		public FirstColAllRowsNormal_65Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_65CoData extends NeoData {
		public FirstColAllRowsNormal_65CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.120
	public FirstColAllRowsNormal_80Access getRule_FirstColAllRowsNormal_80() {
		return new FirstColAllRowsNormal_80Access();
	}
	
	public class FirstColAllRowsNormal_80Access extends NeoRuleCoAccess<FirstColAllRowsNormal_80Data, FirstColAllRowsNormal_80CoData, FirstColAllRowsNormal_80Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(120);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_80Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_80Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_80CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_80CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_80Mask mask() {
			return new FirstColAllRowsNormal_80Mask();
		}
	}
	
	public class FirstColAllRowsNormal_80Data extends NeoData {
		public FirstColAllRowsNormal_80Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_80CoData extends NeoData {
		public FirstColAllRowsNormal_80CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_80Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.121
	public FirstColAllRowsNormal_81Access getRule_FirstColAllRowsNormal_81() {
		return new FirstColAllRowsNormal_81Access();
	}
	
	public class FirstColAllRowsNormal_81Access extends NeoRuleCoAccess<FirstColAllRowsNormal_81Data, FirstColAllRowsNormal_81CoData, FirstColAllRowsNormal_81Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(121);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_81Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_81Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_81CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_81CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_81Mask mask() {
			return new FirstColAllRowsNormal_81Mask();
		}
	}
	
	public class FirstColAllRowsNormal_81Data extends NeoData {
		public FirstColAllRowsNormal_81Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_81CoData extends NeoData {
		public FirstColAllRowsNormal_81CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_81Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.122
	public FirstColAllRowsNormal_112Access getRule_FirstColAllRowsNormal_112() {
		return new FirstColAllRowsNormal_112Access();
	}
	
	public class FirstColAllRowsNormal_112Access extends NeoRuleCoAccess<FirstColAllRowsNormal_112Data, FirstColAllRowsNormal_112CoData, FirstColAllRowsNormal_112Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(122);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_112Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_112Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_112CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_112CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_112Mask mask() {
			return new FirstColAllRowsNormal_112Mask();
		}
	}
	
	public class FirstColAllRowsNormal_112Data extends NeoData {
		public FirstColAllRowsNormal_112Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_112CoData extends NeoData {
		public FirstColAllRowsNormal_112CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_112Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.123
	public FirstColAllRowsNormal_113Access getRule_FirstColAllRowsNormal_113() {
		return new FirstColAllRowsNormal_113Access();
	}
	
	public class FirstColAllRowsNormal_113Access extends NeoRuleCoAccess<FirstColAllRowsNormal_113Data, FirstColAllRowsNormal_113CoData, FirstColAllRowsNormal_113Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(123);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_113Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_113Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_113CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_113CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_113Mask mask() {
			return new FirstColAllRowsNormal_113Mask();
		}
	}
	
	public class FirstColAllRowsNormal_113Data extends NeoData {
		public FirstColAllRowsNormal_113Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_113CoData extends NeoData {
		public FirstColAllRowsNormal_113CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_113Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.124
	public FirstColAllRowsNormal_193Access getRule_FirstColAllRowsNormal_193() {
		return new FirstColAllRowsNormal_193Access();
	}
	
	public class FirstColAllRowsNormal_193Access extends NeoRuleCoAccess<FirstColAllRowsNormal_193Data, FirstColAllRowsNormal_193CoData, FirstColAllRowsNormal_193Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(124);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_193Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_193Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_193CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_193CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_193Mask mask() {
			return new FirstColAllRowsNormal_193Mask();
		}
	}
	
	public class FirstColAllRowsNormal_193Data extends NeoData {
		public FirstColAllRowsNormal_193Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_193CoData extends NeoData {
		public FirstColAllRowsNormal_193CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_193Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.125
	public FirstColAllRowsNormal_209Access getRule_FirstColAllRowsNormal_209() {
		return new FirstColAllRowsNormal_209Access();
	}
	
	public class FirstColAllRowsNormal_209Access extends NeoRuleCoAccess<FirstColAllRowsNormal_209Data, FirstColAllRowsNormal_209CoData, FirstColAllRowsNormal_209Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(125);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_209Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_209Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_209CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_209CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_209Mask mask() {
			return new FirstColAllRowsNormal_209Mask();
		}
	}
	
	public class FirstColAllRowsNormal_209Data extends NeoData {
		public FirstColAllRowsNormal_209Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_209CoData extends NeoData {
		public FirstColAllRowsNormal_209CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_209Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.126
	public FirstColAllRowsNormal_241Access getRule_FirstColAllRowsNormal_241() {
		return new FirstColAllRowsNormal_241Access();
	}
	
	public class FirstColAllRowsNormal_241Access extends NeoRuleCoAccess<FirstColAllRowsNormal_241Data, FirstColAllRowsNormal_241CoData, FirstColAllRowsNormal_241Mask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(126);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_241Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_241Data(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormal_241CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_241CoData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_241Mask mask() {
			return new FirstColAllRowsNormal_241Mask();
		}
	}
	
	public class FirstColAllRowsNormal_241Data extends NeoData {
		public FirstColAllRowsNormal_241Data(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_241CoData extends NeoData {
		public FirstColAllRowsNormal_241CoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormal_241Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.127
	public FirstRowAllColsEndAccess getRule_FirstRowAllColsEnd() {
		return new FirstRowAllColsEndAccess();
	}
	
	public class FirstRowAllColsEndAccess extends NeoRuleCoAccess<FirstRowAllColsEndData, FirstRowAllColsEndCoData, FirstRowAllColsEndMask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(127);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEndData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEndData(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEndCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEndCoData(d));
		}
		
		@Override
		public FirstRowAllColsEndMask mask() {
			return new FirstRowAllColsEndMask();
		}
	}
	
	public class FirstRowAllColsEndData extends NeoData {
		public FirstRowAllColsEndData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEndCoData extends NeoData {
		public FirstRowAllColsEndCoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEndMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.128
	public FirstRowAllColsEnd_1Access getRule_FirstRowAllColsEnd_1() {
		return new FirstRowAllColsEnd_1Access();
	}
	
	public class FirstRowAllColsEnd_1Access extends NeoRuleCoAccess<FirstRowAllColsEnd_1Data, FirstRowAllColsEnd_1CoData, FirstRowAllColsEnd_1Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(128);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_1Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_1CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_1Mask mask() {
			return new FirstRowAllColsEnd_1Mask();
		}
	}
	
	public class FirstRowAllColsEnd_1Data extends NeoData {
		public FirstRowAllColsEnd_1Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_1CoData extends NeoData {
		public FirstRowAllColsEnd_1CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.129
	public FirstRowAllColsEnd_2Access getRule_FirstRowAllColsEnd_2() {
		return new FirstRowAllColsEnd_2Access();
	}
	
	public class FirstRowAllColsEnd_2Access extends NeoRuleCoAccess<FirstRowAllColsEnd_2Data, FirstRowAllColsEnd_2CoData, FirstRowAllColsEnd_2Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(129);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_2Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_2CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_2Mask mask() {
			return new FirstRowAllColsEnd_2Mask();
		}
	}
	
	public class FirstRowAllColsEnd_2Data extends NeoData {
		public FirstRowAllColsEnd_2Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_2CoData extends NeoData {
		public FirstRowAllColsEnd_2CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.130
	public FirstRowAllColsEnd_3Access getRule_FirstRowAllColsEnd_3() {
		return new FirstRowAllColsEnd_3Access();
	}
	
	public class FirstRowAllColsEnd_3Access extends NeoRuleCoAccess<FirstRowAllColsEnd_3Data, FirstRowAllColsEnd_3CoData, FirstRowAllColsEnd_3Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(130);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_3Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_3CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_3Mask mask() {
			return new FirstRowAllColsEnd_3Mask();
		}
	}
	
	public class FirstRowAllColsEnd_3Data extends NeoData {
		public FirstRowAllColsEnd_3Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_3CoData extends NeoData {
		public FirstRowAllColsEnd_3CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.131
	public FirstRowAllColsEnd_4Access getRule_FirstRowAllColsEnd_4() {
		return new FirstRowAllColsEnd_4Access();
	}
	
	public class FirstRowAllColsEnd_4Access extends NeoRuleCoAccess<FirstRowAllColsEnd_4Data, FirstRowAllColsEnd_4CoData, FirstRowAllColsEnd_4Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(131);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_4Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_4CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_4Mask mask() {
			return new FirstRowAllColsEnd_4Mask();
		}
	}
	
	public class FirstRowAllColsEnd_4Data extends NeoData {
		public FirstRowAllColsEnd_4Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_4CoData extends NeoData {
		public FirstRowAllColsEnd_4CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.132
	public FirstRowAllColsEnd_5Access getRule_FirstRowAllColsEnd_5() {
		return new FirstRowAllColsEnd_5Access();
	}
	
	public class FirstRowAllColsEnd_5Access extends NeoRuleCoAccess<FirstRowAllColsEnd_5Data, FirstRowAllColsEnd_5CoData, FirstRowAllColsEnd_5Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(132);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_5Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_5CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_5Mask mask() {
			return new FirstRowAllColsEnd_5Mask();
		}
	}
	
	public class FirstRowAllColsEnd_5Data extends NeoData {
		public FirstRowAllColsEnd_5Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_5CoData extends NeoData {
		public FirstRowAllColsEnd_5CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.133
	public FirstRowAllColsEnd_6Access getRule_FirstRowAllColsEnd_6() {
		return new FirstRowAllColsEnd_6Access();
	}
	
	public class FirstRowAllColsEnd_6Access extends NeoRuleCoAccess<FirstRowAllColsEnd_6Data, FirstRowAllColsEnd_6CoData, FirstRowAllColsEnd_6Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(133);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_6Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_6Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_6CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_6CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_6Mask mask() {
			return new FirstRowAllColsEnd_6Mask();
		}
	}
	
	public class FirstRowAllColsEnd_6Data extends NeoData {
		public FirstRowAllColsEnd_6Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_6CoData extends NeoData {
		public FirstRowAllColsEnd_6CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_6Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.134
	public FirstRowAllColsEnd_7Access getRule_FirstRowAllColsEnd_7() {
		return new FirstRowAllColsEnd_7Access();
	}
	
	public class FirstRowAllColsEnd_7Access extends NeoRuleCoAccess<FirstRowAllColsEnd_7Data, FirstRowAllColsEnd_7CoData, FirstRowAllColsEnd_7Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(134);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_7Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_7CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_7Mask mask() {
			return new FirstRowAllColsEnd_7Mask();
		}
	}
	
	public class FirstRowAllColsEnd_7Data extends NeoData {
		public FirstRowAllColsEnd_7Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_7CoData extends NeoData {
		public FirstRowAllColsEnd_7CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.135
	public FirstRowAllColsEnd_15Access getRule_FirstRowAllColsEnd_15() {
		return new FirstRowAllColsEnd_15Access();
	}
	
	public class FirstRowAllColsEnd_15Access extends NeoRuleCoAccess<FirstRowAllColsEnd_15Data, FirstRowAllColsEnd_15CoData, FirstRowAllColsEnd_15Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(135);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_15Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_15Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_15CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_15CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_15Mask mask() {
			return new FirstRowAllColsEnd_15Mask();
		}
	}
	
	public class FirstRowAllColsEnd_15Data extends NeoData {
		public FirstRowAllColsEnd_15Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_15CoData extends NeoData {
		public FirstRowAllColsEnd_15CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_15Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.136
	public FirstRowAllColsEnd_16Access getRule_FirstRowAllColsEnd_16() {
		return new FirstRowAllColsEnd_16Access();
	}
	
	public class FirstRowAllColsEnd_16Access extends NeoRuleCoAccess<FirstRowAllColsEnd_16Data, FirstRowAllColsEnd_16CoData, FirstRowAllColsEnd_16Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(136);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_16Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_16CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_16Mask mask() {
			return new FirstRowAllColsEnd_16Mask();
		}
	}
	
	public class FirstRowAllColsEnd_16Data extends NeoData {
		public FirstRowAllColsEnd_16Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_16CoData extends NeoData {
		public FirstRowAllColsEnd_16CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.137
	public FirstRowAllColsEnd_17Access getRule_FirstRowAllColsEnd_17() {
		return new FirstRowAllColsEnd_17Access();
	}
	
	public class FirstRowAllColsEnd_17Access extends NeoRuleCoAccess<FirstRowAllColsEnd_17Data, FirstRowAllColsEnd_17CoData, FirstRowAllColsEnd_17Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(137);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_17Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_17CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_17Mask mask() {
			return new FirstRowAllColsEnd_17Mask();
		}
	}
	
	public class FirstRowAllColsEnd_17Data extends NeoData {
		public FirstRowAllColsEnd_17Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_17CoData extends NeoData {
		public FirstRowAllColsEnd_17CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.138
	public FirstRowAllColsEnd_49Access getRule_FirstRowAllColsEnd_49() {
		return new FirstRowAllColsEnd_49Access();
	}
	
	public class FirstRowAllColsEnd_49Access extends NeoRuleCoAccess<FirstRowAllColsEnd_49Data, FirstRowAllColsEnd_49CoData, FirstRowAllColsEnd_49Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(138);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_49Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_49Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEnd_49CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_49CoData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_49Mask mask() {
			return new FirstRowAllColsEnd_49Mask();
		}
	}
	
	public class FirstRowAllColsEnd_49Data extends NeoData {
		public FirstRowAllColsEnd_49Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_49CoData extends NeoData {
		public FirstRowAllColsEnd_49CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEnd_49Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.139
	public FirstRowAllColsNormalAccess getRule_FirstRowAllColsNormal() {
		return new FirstRowAllColsNormalAccess();
	}
	
	public class FirstRowAllColsNormalAccess extends NeoRuleCoAccess<FirstRowAllColsNormalData, FirstRowAllColsNormalCoData, FirstRowAllColsNormalMask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(139);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormalData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormalData(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormalCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormalCoData(d));
		}
		
		@Override
		public FirstRowAllColsNormalMask mask() {
			return new FirstRowAllColsNormalMask();
		}
	}
	
	public class FirstRowAllColsNormalData extends NeoData {
		public FirstRowAllColsNormalData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormalCoData extends NeoData {
		public FirstRowAllColsNormalCoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormalMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.140
	public FirstRowAllColsNormal_1Access getRule_FirstRowAllColsNormal_1() {
		return new FirstRowAllColsNormal_1Access();
	}
	
	public class FirstRowAllColsNormal_1Access extends NeoRuleCoAccess<FirstRowAllColsNormal_1Data, FirstRowAllColsNormal_1CoData, FirstRowAllColsNormal_1Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(140);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_1Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_1CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_1Mask mask() {
			return new FirstRowAllColsNormal_1Mask();
		}
	}
	
	public class FirstRowAllColsNormal_1Data extends NeoData {
		public FirstRowAllColsNormal_1Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_1CoData extends NeoData {
		public FirstRowAllColsNormal_1CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.141
	public FirstRowAllColsNormal_2Access getRule_FirstRowAllColsNormal_2() {
		return new FirstRowAllColsNormal_2Access();
	}
	
	public class FirstRowAllColsNormal_2Access extends NeoRuleCoAccess<FirstRowAllColsNormal_2Data, FirstRowAllColsNormal_2CoData, FirstRowAllColsNormal_2Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(141);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_2Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_2CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_2Mask mask() {
			return new FirstRowAllColsNormal_2Mask();
		}
	}
	
	public class FirstRowAllColsNormal_2Data extends NeoData {
		public FirstRowAllColsNormal_2Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_2CoData extends NeoData {
		public FirstRowAllColsNormal_2CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.142
	public FirstRowAllColsNormal_3Access getRule_FirstRowAllColsNormal_3() {
		return new FirstRowAllColsNormal_3Access();
	}
	
	public class FirstRowAllColsNormal_3Access extends NeoRuleCoAccess<FirstRowAllColsNormal_3Data, FirstRowAllColsNormal_3CoData, FirstRowAllColsNormal_3Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(142);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_3Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_3CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_3Mask mask() {
			return new FirstRowAllColsNormal_3Mask();
		}
	}
	
	public class FirstRowAllColsNormal_3Data extends NeoData {
		public FirstRowAllColsNormal_3Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_3CoData extends NeoData {
		public FirstRowAllColsNormal_3CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.143
	public FirstRowAllColsNormal_4Access getRule_FirstRowAllColsNormal_4() {
		return new FirstRowAllColsNormal_4Access();
	}
	
	public class FirstRowAllColsNormal_4Access extends NeoRuleCoAccess<FirstRowAllColsNormal_4Data, FirstRowAllColsNormal_4CoData, FirstRowAllColsNormal_4Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(143);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_4Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_4CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_4Mask mask() {
			return new FirstRowAllColsNormal_4Mask();
		}
	}
	
	public class FirstRowAllColsNormal_4Data extends NeoData {
		public FirstRowAllColsNormal_4Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_4CoData extends NeoData {
		public FirstRowAllColsNormal_4CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.144
	public FirstRowAllColsNormal_5Access getRule_FirstRowAllColsNormal_5() {
		return new FirstRowAllColsNormal_5Access();
	}
	
	public class FirstRowAllColsNormal_5Access extends NeoRuleCoAccess<FirstRowAllColsNormal_5Data, FirstRowAllColsNormal_5CoData, FirstRowAllColsNormal_5Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(144);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_5Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_5CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_5Mask mask() {
			return new FirstRowAllColsNormal_5Mask();
		}
	}
	
	public class FirstRowAllColsNormal_5Data extends NeoData {
		public FirstRowAllColsNormal_5Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_5CoData extends NeoData {
		public FirstRowAllColsNormal_5CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.145
	public FirstRowAllColsNormal_6Access getRule_FirstRowAllColsNormal_6() {
		return new FirstRowAllColsNormal_6Access();
	}
	
	public class FirstRowAllColsNormal_6Access extends NeoRuleCoAccess<FirstRowAllColsNormal_6Data, FirstRowAllColsNormal_6CoData, FirstRowAllColsNormal_6Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(145);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_6Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_6Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_6CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_6CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_6Mask mask() {
			return new FirstRowAllColsNormal_6Mask();
		}
	}
	
	public class FirstRowAllColsNormal_6Data extends NeoData {
		public FirstRowAllColsNormal_6Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_6CoData extends NeoData {
		public FirstRowAllColsNormal_6CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_6Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.146
	public FirstRowAllColsNormal_7Access getRule_FirstRowAllColsNormal_7() {
		return new FirstRowAllColsNormal_7Access();
	}
	
	public class FirstRowAllColsNormal_7Access extends NeoRuleCoAccess<FirstRowAllColsNormal_7Data, FirstRowAllColsNormal_7CoData, FirstRowAllColsNormal_7Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(146);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_7Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_7CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_7Mask mask() {
			return new FirstRowAllColsNormal_7Mask();
		}
	}
	
	public class FirstRowAllColsNormal_7Data extends NeoData {
		public FirstRowAllColsNormal_7Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_7CoData extends NeoData {
		public FirstRowAllColsNormal_7CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.147
	public FirstRowAllColsNormal_15Access getRule_FirstRowAllColsNormal_15() {
		return new FirstRowAllColsNormal_15Access();
	}
	
	public class FirstRowAllColsNormal_15Access extends NeoRuleCoAccess<FirstRowAllColsNormal_15Data, FirstRowAllColsNormal_15CoData, FirstRowAllColsNormal_15Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(147);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_15Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_15Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_15CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_15CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_15Mask mask() {
			return new FirstRowAllColsNormal_15Mask();
		}
	}
	
	public class FirstRowAllColsNormal_15Data extends NeoData {
		public FirstRowAllColsNormal_15Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_15CoData extends NeoData {
		public FirstRowAllColsNormal_15CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_15Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.148
	public FirstRowAllColsNormal_16Access getRule_FirstRowAllColsNormal_16() {
		return new FirstRowAllColsNormal_16Access();
	}
	
	public class FirstRowAllColsNormal_16Access extends NeoRuleCoAccess<FirstRowAllColsNormal_16Data, FirstRowAllColsNormal_16CoData, FirstRowAllColsNormal_16Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(148);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_16Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_16CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_16Mask mask() {
			return new FirstRowAllColsNormal_16Mask();
		}
	}
	
	public class FirstRowAllColsNormal_16Data extends NeoData {
		public FirstRowAllColsNormal_16Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_16CoData extends NeoData {
		public FirstRowAllColsNormal_16CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.149
	public FirstRowAllColsNormal_17Access getRule_FirstRowAllColsNormal_17() {
		return new FirstRowAllColsNormal_17Access();
	}
	
	public class FirstRowAllColsNormal_17Access extends NeoRuleCoAccess<FirstRowAllColsNormal_17Data, FirstRowAllColsNormal_17CoData, FirstRowAllColsNormal_17Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(149);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_17Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_17CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_17Mask mask() {
			return new FirstRowAllColsNormal_17Mask();
		}
	}
	
	public class FirstRowAllColsNormal_17Data extends NeoData {
		public FirstRowAllColsNormal_17Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_17CoData extends NeoData {
		public FirstRowAllColsNormal_17CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.150
	public FirstRowAllColsNormal_49Access getRule_FirstRowAllColsNormal_49() {
		return new FirstRowAllColsNormal_49Access();
	}
	
	public class FirstRowAllColsNormal_49Access extends NeoRuleCoAccess<FirstRowAllColsNormal_49Data, FirstRowAllColsNormal_49CoData, FirstRowAllColsNormal_49Mask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(150);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_49Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_49Data(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormal_49CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_49CoData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_49Mask mask() {
			return new FirstRowAllColsNormal_49Mask();
		}
	}
	
	public class FirstRowAllColsNormal_49Data extends NeoData {
		public FirstRowAllColsNormal_49Data(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_49CoData extends NeoData {
		public FirstRowAllColsNormal_49CoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormal_49Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.151
	public AllOtherFieldsEndAccess getRule_AllOtherFieldsEnd() {
		return new AllOtherFieldsEndAccess();
	}
	
	public class AllOtherFieldsEndAccess extends NeoRuleCoAccess<AllOtherFieldsEndData, AllOtherFieldsEndCoData, AllOtherFieldsEndMask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(151);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEndData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEndData(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEndCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEndCoData(d));
		}
		
		@Override
		public AllOtherFieldsEndMask mask() {
			return new AllOtherFieldsEndMask();
		}
	}
	
	public class AllOtherFieldsEndData extends NeoData {
		public AllOtherFieldsEndData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEndCoData extends NeoData {
		public AllOtherFieldsEndCoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEndMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.152
	public AllOtherFieldsEnd_1Access getRule_AllOtherFieldsEnd_1() {
		return new AllOtherFieldsEnd_1Access();
	}
	
	public class AllOtherFieldsEnd_1Access extends NeoRuleCoAccess<AllOtherFieldsEnd_1Data, AllOtherFieldsEnd_1CoData, AllOtherFieldsEnd_1Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(152);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_1Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_1CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_1Mask mask() {
			return new AllOtherFieldsEnd_1Mask();
		}
	}
	
	public class AllOtherFieldsEnd_1Data extends NeoData {
		public AllOtherFieldsEnd_1Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_1CoData extends NeoData {
		public AllOtherFieldsEnd_1CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.153
	public AllOtherFieldsEnd_2Access getRule_AllOtherFieldsEnd_2() {
		return new AllOtherFieldsEnd_2Access();
	}
	
	public class AllOtherFieldsEnd_2Access extends NeoRuleCoAccess<AllOtherFieldsEnd_2Data, AllOtherFieldsEnd_2CoData, AllOtherFieldsEnd_2Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(153);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_2Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_2CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_2Mask mask() {
			return new AllOtherFieldsEnd_2Mask();
		}
	}
	
	public class AllOtherFieldsEnd_2Data extends NeoData {
		public AllOtherFieldsEnd_2Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_2CoData extends NeoData {
		public AllOtherFieldsEnd_2CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.154
	public AllOtherFieldsEnd_3Access getRule_AllOtherFieldsEnd_3() {
		return new AllOtherFieldsEnd_3Access();
	}
	
	public class AllOtherFieldsEnd_3Access extends NeoRuleCoAccess<AllOtherFieldsEnd_3Data, AllOtherFieldsEnd_3CoData, AllOtherFieldsEnd_3Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(154);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_3Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_3CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_3Mask mask() {
			return new AllOtherFieldsEnd_3Mask();
		}
	}
	
	public class AllOtherFieldsEnd_3Data extends NeoData {
		public AllOtherFieldsEnd_3Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_3CoData extends NeoData {
		public AllOtherFieldsEnd_3CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.155
	public AllOtherFieldsEnd_8Access getRule_AllOtherFieldsEnd_8() {
		return new AllOtherFieldsEnd_8Access();
	}
	
	public class AllOtherFieldsEnd_8Access extends NeoRuleCoAccess<AllOtherFieldsEnd_8Data, AllOtherFieldsEnd_8CoData, AllOtherFieldsEnd_8Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(155);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_8Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_8CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_8Mask mask() {
			return new AllOtherFieldsEnd_8Mask();
		}
	}
	
	public class AllOtherFieldsEnd_8Data extends NeoData {
		public AllOtherFieldsEnd_8Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_8CoData extends NeoData {
		public AllOtherFieldsEnd_8CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.156
	public AllOtherFieldsEnd_9Access getRule_AllOtherFieldsEnd_9() {
		return new AllOtherFieldsEnd_9Access();
	}
	
	public class AllOtherFieldsEnd_9Access extends NeoRuleCoAccess<AllOtherFieldsEnd_9Data, AllOtherFieldsEnd_9CoData, AllOtherFieldsEnd_9Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(156);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_9Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_9CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_9Mask mask() {
			return new AllOtherFieldsEnd_9Mask();
		}
	}
	
	public class AllOtherFieldsEnd_9Data extends NeoData {
		public AllOtherFieldsEnd_9Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_9CoData extends NeoData {
		public AllOtherFieldsEnd_9CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.157
	public AllOtherFieldsEnd_10Access getRule_AllOtherFieldsEnd_10() {
		return new AllOtherFieldsEnd_10Access();
	}
	
	public class AllOtherFieldsEnd_10Access extends NeoRuleCoAccess<AllOtherFieldsEnd_10Data, AllOtherFieldsEnd_10CoData, AllOtherFieldsEnd_10Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(157);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_10Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_10Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_10CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_10CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_10Mask mask() {
			return new AllOtherFieldsEnd_10Mask();
		}
	}
	
	public class AllOtherFieldsEnd_10Data extends NeoData {
		public AllOtherFieldsEnd_10Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_10CoData extends NeoData {
		public AllOtherFieldsEnd_10CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_10Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.158
	public AllOtherFieldsEnd_11Access getRule_AllOtherFieldsEnd_11() {
		return new AllOtherFieldsEnd_11Access();
	}
	
	public class AllOtherFieldsEnd_11Access extends NeoRuleCoAccess<AllOtherFieldsEnd_11Data, AllOtherFieldsEnd_11CoData, AllOtherFieldsEnd_11Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(158);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_11Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_11Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_11CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_11CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_11Mask mask() {
			return new AllOtherFieldsEnd_11Mask();
		}
	}
	
	public class AllOtherFieldsEnd_11Data extends NeoData {
		public AllOtherFieldsEnd_11Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_11CoData extends NeoData {
		public AllOtherFieldsEnd_11CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_11Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.159
	public AllOtherFieldsEnd_16Access getRule_AllOtherFieldsEnd_16() {
		return new AllOtherFieldsEnd_16Access();
	}
	
	public class AllOtherFieldsEnd_16Access extends NeoRuleCoAccess<AllOtherFieldsEnd_16Data, AllOtherFieldsEnd_16CoData, AllOtherFieldsEnd_16Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(159);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_16Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_16CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_16Mask mask() {
			return new AllOtherFieldsEnd_16Mask();
		}
	}
	
	public class AllOtherFieldsEnd_16Data extends NeoData {
		public AllOtherFieldsEnd_16Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_16CoData extends NeoData {
		public AllOtherFieldsEnd_16CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.160
	public AllOtherFieldsEnd_17Access getRule_AllOtherFieldsEnd_17() {
		return new AllOtherFieldsEnd_17Access();
	}
	
	public class AllOtherFieldsEnd_17Access extends NeoRuleCoAccess<AllOtherFieldsEnd_17Data, AllOtherFieldsEnd_17CoData, AllOtherFieldsEnd_17Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(160);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_17Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_17CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_17Mask mask() {
			return new AllOtherFieldsEnd_17Mask();
		}
	}
	
	public class AllOtherFieldsEnd_17Data extends NeoData {
		public AllOtherFieldsEnd_17Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_17CoData extends NeoData {
		public AllOtherFieldsEnd_17CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.161
	public AllOtherFieldsEnd_18Access getRule_AllOtherFieldsEnd_18() {
		return new AllOtherFieldsEnd_18Access();
	}
	
	public class AllOtherFieldsEnd_18Access extends NeoRuleCoAccess<AllOtherFieldsEnd_18Data, AllOtherFieldsEnd_18CoData, AllOtherFieldsEnd_18Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(161);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_18Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_18Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_18CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_18CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_18Mask mask() {
			return new AllOtherFieldsEnd_18Mask();
		}
	}
	
	public class AllOtherFieldsEnd_18Data extends NeoData {
		public AllOtherFieldsEnd_18Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_18CoData extends NeoData {
		public AllOtherFieldsEnd_18CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_18Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.162
	public AllOtherFieldsEnd_19Access getRule_AllOtherFieldsEnd_19() {
		return new AllOtherFieldsEnd_19Access();
	}
	
	public class AllOtherFieldsEnd_19Access extends NeoRuleCoAccess<AllOtherFieldsEnd_19Data, AllOtherFieldsEnd_19CoData, AllOtherFieldsEnd_19Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(162);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_19Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_19Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_19CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_19CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_19Mask mask() {
			return new AllOtherFieldsEnd_19Mask();
		}
	}
	
	public class AllOtherFieldsEnd_19Data extends NeoData {
		public AllOtherFieldsEnd_19Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_19CoData extends NeoData {
		public AllOtherFieldsEnd_19CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_19Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.163
	public AllOtherFieldsEnd_24Access getRule_AllOtherFieldsEnd_24() {
		return new AllOtherFieldsEnd_24Access();
	}
	
	public class AllOtherFieldsEnd_24Access extends NeoRuleCoAccess<AllOtherFieldsEnd_24Data, AllOtherFieldsEnd_24CoData, AllOtherFieldsEnd_24Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(163);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_24Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_24Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_24CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_24CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_24Mask mask() {
			return new AllOtherFieldsEnd_24Mask();
		}
	}
	
	public class AllOtherFieldsEnd_24Data extends NeoData {
		public AllOtherFieldsEnd_24Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_24CoData extends NeoData {
		public AllOtherFieldsEnd_24CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_24Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.164
	public AllOtherFieldsEnd_25Access getRule_AllOtherFieldsEnd_25() {
		return new AllOtherFieldsEnd_25Access();
	}
	
	public class AllOtherFieldsEnd_25Access extends NeoRuleCoAccess<AllOtherFieldsEnd_25Data, AllOtherFieldsEnd_25CoData, AllOtherFieldsEnd_25Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(164);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_25Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_25CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_25Mask mask() {
			return new AllOtherFieldsEnd_25Mask();
		}
	}
	
	public class AllOtherFieldsEnd_25Data extends NeoData {
		public AllOtherFieldsEnd_25Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_25CoData extends NeoData {
		public AllOtherFieldsEnd_25CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.165
	public AllOtherFieldsEnd_26Access getRule_AllOtherFieldsEnd_26() {
		return new AllOtherFieldsEnd_26Access();
	}
	
	public class AllOtherFieldsEnd_26Access extends NeoRuleCoAccess<AllOtherFieldsEnd_26Data, AllOtherFieldsEnd_26CoData, AllOtherFieldsEnd_26Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(165);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_26Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_26Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_26CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_26CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_26Mask mask() {
			return new AllOtherFieldsEnd_26Mask();
		}
	}
	
	public class AllOtherFieldsEnd_26Data extends NeoData {
		public AllOtherFieldsEnd_26Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_26CoData extends NeoData {
		public AllOtherFieldsEnd_26CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_26Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.166
	public AllOtherFieldsEnd_27Access getRule_AllOtherFieldsEnd_27() {
		return new AllOtherFieldsEnd_27Access();
	}
	
	public class AllOtherFieldsEnd_27Access extends NeoRuleCoAccess<AllOtherFieldsEnd_27Data, AllOtherFieldsEnd_27CoData, AllOtherFieldsEnd_27Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(166);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_27Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_27Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_27CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_27CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_27Mask mask() {
			return new AllOtherFieldsEnd_27Mask();
		}
	}
	
	public class AllOtherFieldsEnd_27Data extends NeoData {
		public AllOtherFieldsEnd_27Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_27CoData extends NeoData {
		public AllOtherFieldsEnd_27CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_27Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.167
	public AllOtherFieldsEnd_31Access getRule_AllOtherFieldsEnd_31() {
		return new AllOtherFieldsEnd_31Access();
	}
	
	public class AllOtherFieldsEnd_31Access extends NeoRuleCoAccess<AllOtherFieldsEnd_31Data, AllOtherFieldsEnd_31CoData, AllOtherFieldsEnd_31Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(167);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_31Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_31Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_31CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_31CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_31Mask mask() {
			return new AllOtherFieldsEnd_31Mask();
		}
	}
	
	public class AllOtherFieldsEnd_31Data extends NeoData {
		public AllOtherFieldsEnd_31Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_31CoData extends NeoData {
		public AllOtherFieldsEnd_31CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_31Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.168
	public AllOtherFieldsEnd_64Access getRule_AllOtherFieldsEnd_64() {
		return new AllOtherFieldsEnd_64Access();
	}
	
	public class AllOtherFieldsEnd_64Access extends NeoRuleCoAccess<AllOtherFieldsEnd_64Data, AllOtherFieldsEnd_64CoData, AllOtherFieldsEnd_64Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(168);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_64Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_64CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_64Mask mask() {
			return new AllOtherFieldsEnd_64Mask();
		}
	}
	
	public class AllOtherFieldsEnd_64Data extends NeoData {
		public AllOtherFieldsEnd_64Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_64CoData extends NeoData {
		public AllOtherFieldsEnd_64CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.169
	public AllOtherFieldsEnd_65Access getRule_AllOtherFieldsEnd_65() {
		return new AllOtherFieldsEnd_65Access();
	}
	
	public class AllOtherFieldsEnd_65Access extends NeoRuleCoAccess<AllOtherFieldsEnd_65Data, AllOtherFieldsEnd_65CoData, AllOtherFieldsEnd_65Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(169);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_65Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_65CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_65Mask mask() {
			return new AllOtherFieldsEnd_65Mask();
		}
	}
	
	public class AllOtherFieldsEnd_65Data extends NeoData {
		public AllOtherFieldsEnd_65Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_65CoData extends NeoData {
		public AllOtherFieldsEnd_65CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.170
	public AllOtherFieldsEnd_97Access getRule_AllOtherFieldsEnd_97() {
		return new AllOtherFieldsEnd_97Access();
	}
	
	public class AllOtherFieldsEnd_97Access extends NeoRuleCoAccess<AllOtherFieldsEnd_97Data, AllOtherFieldsEnd_97CoData, AllOtherFieldsEnd_97Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(170);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_97Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEnd_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_97CoData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_97Mask mask() {
			return new AllOtherFieldsEnd_97Mask();
		}
	}
	
	public class AllOtherFieldsEnd_97Data extends NeoData {
		public AllOtherFieldsEnd_97Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_97CoData extends NeoData {
		public AllOtherFieldsEnd_97CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEnd_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.171
	public AllOtherFieldsNormalAccess getRule_AllOtherFieldsNormal() {
		return new AllOtherFieldsNormalAccess();
	}
	
	public class AllOtherFieldsNormalAccess extends NeoRuleCoAccess<AllOtherFieldsNormalData, AllOtherFieldsNormalCoData, AllOtherFieldsNormalMask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(171);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormalData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormalData(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormalCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormalCoData(d));
		}
		
		@Override
		public AllOtherFieldsNormalMask mask() {
			return new AllOtherFieldsNormalMask();
		}
	}
	
	public class AllOtherFieldsNormalData extends NeoData {
		public AllOtherFieldsNormalData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormalCoData extends NeoData {
		public AllOtherFieldsNormalCoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormalMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.172
	public AllOtherFieldsNormal_1Access getRule_AllOtherFieldsNormal_1() {
		return new AllOtherFieldsNormal_1Access();
	}
	
	public class AllOtherFieldsNormal_1Access extends NeoRuleCoAccess<AllOtherFieldsNormal_1Data, AllOtherFieldsNormal_1CoData, AllOtherFieldsNormal_1Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(172);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_1Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_1CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_1Mask mask() {
			return new AllOtherFieldsNormal_1Mask();
		}
	}
	
	public class AllOtherFieldsNormal_1Data extends NeoData {
		public AllOtherFieldsNormal_1Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_1CoData extends NeoData {
		public AllOtherFieldsNormal_1CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.173
	public AllOtherFieldsNormal_2Access getRule_AllOtherFieldsNormal_2() {
		return new AllOtherFieldsNormal_2Access();
	}
	
	public class AllOtherFieldsNormal_2Access extends NeoRuleCoAccess<AllOtherFieldsNormal_2Data, AllOtherFieldsNormal_2CoData, AllOtherFieldsNormal_2Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(173);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_2Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_2CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_2Mask mask() {
			return new AllOtherFieldsNormal_2Mask();
		}
	}
	
	public class AllOtherFieldsNormal_2Data extends NeoData {
		public AllOtherFieldsNormal_2Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_2CoData extends NeoData {
		public AllOtherFieldsNormal_2CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.174
	public AllOtherFieldsNormal_3Access getRule_AllOtherFieldsNormal_3() {
		return new AllOtherFieldsNormal_3Access();
	}
	
	public class AllOtherFieldsNormal_3Access extends NeoRuleCoAccess<AllOtherFieldsNormal_3Data, AllOtherFieldsNormal_3CoData, AllOtherFieldsNormal_3Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(174);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_3Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_3CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_3Mask mask() {
			return new AllOtherFieldsNormal_3Mask();
		}
	}
	
	public class AllOtherFieldsNormal_3Data extends NeoData {
		public AllOtherFieldsNormal_3Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_3CoData extends NeoData {
		public AllOtherFieldsNormal_3CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.175
	public AllOtherFieldsNormal_8Access getRule_AllOtherFieldsNormal_8() {
		return new AllOtherFieldsNormal_8Access();
	}
	
	public class AllOtherFieldsNormal_8Access extends NeoRuleCoAccess<AllOtherFieldsNormal_8Data, AllOtherFieldsNormal_8CoData, AllOtherFieldsNormal_8Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(175);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_8Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_8CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_8Mask mask() {
			return new AllOtherFieldsNormal_8Mask();
		}
	}
	
	public class AllOtherFieldsNormal_8Data extends NeoData {
		public AllOtherFieldsNormal_8Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_8CoData extends NeoData {
		public AllOtherFieldsNormal_8CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.176
	public AllOtherFieldsNormal_9Access getRule_AllOtherFieldsNormal_9() {
		return new AllOtherFieldsNormal_9Access();
	}
	
	public class AllOtherFieldsNormal_9Access extends NeoRuleCoAccess<AllOtherFieldsNormal_9Data, AllOtherFieldsNormal_9CoData, AllOtherFieldsNormal_9Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(176);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_9Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_9CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_9Mask mask() {
			return new AllOtherFieldsNormal_9Mask();
		}
	}
	
	public class AllOtherFieldsNormal_9Data extends NeoData {
		public AllOtherFieldsNormal_9Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_9CoData extends NeoData {
		public AllOtherFieldsNormal_9CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.177
	public AllOtherFieldsNormal_10Access getRule_AllOtherFieldsNormal_10() {
		return new AllOtherFieldsNormal_10Access();
	}
	
	public class AllOtherFieldsNormal_10Access extends NeoRuleCoAccess<AllOtherFieldsNormal_10Data, AllOtherFieldsNormal_10CoData, AllOtherFieldsNormal_10Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(177);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_10Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_10Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_10CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_10CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_10Mask mask() {
			return new AllOtherFieldsNormal_10Mask();
		}
	}
	
	public class AllOtherFieldsNormal_10Data extends NeoData {
		public AllOtherFieldsNormal_10Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_10CoData extends NeoData {
		public AllOtherFieldsNormal_10CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_10Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.178
	public AllOtherFieldsNormal_11Access getRule_AllOtherFieldsNormal_11() {
		return new AllOtherFieldsNormal_11Access();
	}
	
	public class AllOtherFieldsNormal_11Access extends NeoRuleCoAccess<AllOtherFieldsNormal_11Data, AllOtherFieldsNormal_11CoData, AllOtherFieldsNormal_11Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(178);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_11Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_11Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_11CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_11CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_11Mask mask() {
			return new AllOtherFieldsNormal_11Mask();
		}
	}
	
	public class AllOtherFieldsNormal_11Data extends NeoData {
		public AllOtherFieldsNormal_11Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_11CoData extends NeoData {
		public AllOtherFieldsNormal_11CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_11Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.179
	public AllOtherFieldsNormal_16Access getRule_AllOtherFieldsNormal_16() {
		return new AllOtherFieldsNormal_16Access();
	}
	
	public class AllOtherFieldsNormal_16Access extends NeoRuleCoAccess<AllOtherFieldsNormal_16Data, AllOtherFieldsNormal_16CoData, AllOtherFieldsNormal_16Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(179);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_16Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_16CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_16Mask mask() {
			return new AllOtherFieldsNormal_16Mask();
		}
	}
	
	public class AllOtherFieldsNormal_16Data extends NeoData {
		public AllOtherFieldsNormal_16Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_16CoData extends NeoData {
		public AllOtherFieldsNormal_16CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.180
	public AllOtherFieldsNormal_17Access getRule_AllOtherFieldsNormal_17() {
		return new AllOtherFieldsNormal_17Access();
	}
	
	public class AllOtherFieldsNormal_17Access extends NeoRuleCoAccess<AllOtherFieldsNormal_17Data, AllOtherFieldsNormal_17CoData, AllOtherFieldsNormal_17Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(180);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_17Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_17CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_17Mask mask() {
			return new AllOtherFieldsNormal_17Mask();
		}
	}
	
	public class AllOtherFieldsNormal_17Data extends NeoData {
		public AllOtherFieldsNormal_17Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_17CoData extends NeoData {
		public AllOtherFieldsNormal_17CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.181
	public AllOtherFieldsNormal_18Access getRule_AllOtherFieldsNormal_18() {
		return new AllOtherFieldsNormal_18Access();
	}
	
	public class AllOtherFieldsNormal_18Access extends NeoRuleCoAccess<AllOtherFieldsNormal_18Data, AllOtherFieldsNormal_18CoData, AllOtherFieldsNormal_18Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(181);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_18Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_18Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_18CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_18CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_18Mask mask() {
			return new AllOtherFieldsNormal_18Mask();
		}
	}
	
	public class AllOtherFieldsNormal_18Data extends NeoData {
		public AllOtherFieldsNormal_18Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_18CoData extends NeoData {
		public AllOtherFieldsNormal_18CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_18Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.182
	public AllOtherFieldsNormal_19Access getRule_AllOtherFieldsNormal_19() {
		return new AllOtherFieldsNormal_19Access();
	}
	
	public class AllOtherFieldsNormal_19Access extends NeoRuleCoAccess<AllOtherFieldsNormal_19Data, AllOtherFieldsNormal_19CoData, AllOtherFieldsNormal_19Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(182);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_19Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_19Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_19CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_19CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_19Mask mask() {
			return new AllOtherFieldsNormal_19Mask();
		}
	}
	
	public class AllOtherFieldsNormal_19Data extends NeoData {
		public AllOtherFieldsNormal_19Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_19CoData extends NeoData {
		public AllOtherFieldsNormal_19CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_19Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.183
	public AllOtherFieldsNormal_24Access getRule_AllOtherFieldsNormal_24() {
		return new AllOtherFieldsNormal_24Access();
	}
	
	public class AllOtherFieldsNormal_24Access extends NeoRuleCoAccess<AllOtherFieldsNormal_24Data, AllOtherFieldsNormal_24CoData, AllOtherFieldsNormal_24Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(183);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_24Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_24Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_24CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_24CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_24Mask mask() {
			return new AllOtherFieldsNormal_24Mask();
		}
	}
	
	public class AllOtherFieldsNormal_24Data extends NeoData {
		public AllOtherFieldsNormal_24Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_24CoData extends NeoData {
		public AllOtherFieldsNormal_24CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_24Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.184
	public AllOtherFieldsNormal_25Access getRule_AllOtherFieldsNormal_25() {
		return new AllOtherFieldsNormal_25Access();
	}
	
	public class AllOtherFieldsNormal_25Access extends NeoRuleCoAccess<AllOtherFieldsNormal_25Data, AllOtherFieldsNormal_25CoData, AllOtherFieldsNormal_25Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(184);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_25Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_25CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_25Mask mask() {
			return new AllOtherFieldsNormal_25Mask();
		}
	}
	
	public class AllOtherFieldsNormal_25Data extends NeoData {
		public AllOtherFieldsNormal_25Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_25CoData extends NeoData {
		public AllOtherFieldsNormal_25CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.185
	public AllOtherFieldsNormal_26Access getRule_AllOtherFieldsNormal_26() {
		return new AllOtherFieldsNormal_26Access();
	}
	
	public class AllOtherFieldsNormal_26Access extends NeoRuleCoAccess<AllOtherFieldsNormal_26Data, AllOtherFieldsNormal_26CoData, AllOtherFieldsNormal_26Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(185);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_26Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_26Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_26CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_26CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_26Mask mask() {
			return new AllOtherFieldsNormal_26Mask();
		}
	}
	
	public class AllOtherFieldsNormal_26Data extends NeoData {
		public AllOtherFieldsNormal_26Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_26CoData extends NeoData {
		public AllOtherFieldsNormal_26CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_26Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.186
	public AllOtherFieldsNormal_27Access getRule_AllOtherFieldsNormal_27() {
		return new AllOtherFieldsNormal_27Access();
	}
	
	public class AllOtherFieldsNormal_27Access extends NeoRuleCoAccess<AllOtherFieldsNormal_27Data, AllOtherFieldsNormal_27CoData, AllOtherFieldsNormal_27Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(186);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_27Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_27Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_27CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_27CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_27Mask mask() {
			return new AllOtherFieldsNormal_27Mask();
		}
	}
	
	public class AllOtherFieldsNormal_27Data extends NeoData {
		public AllOtherFieldsNormal_27Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_27CoData extends NeoData {
		public AllOtherFieldsNormal_27CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_27Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.187
	public AllOtherFieldsNormal_31Access getRule_AllOtherFieldsNormal_31() {
		return new AllOtherFieldsNormal_31Access();
	}
	
	public class AllOtherFieldsNormal_31Access extends NeoRuleCoAccess<AllOtherFieldsNormal_31Data, AllOtherFieldsNormal_31CoData, AllOtherFieldsNormal_31Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(187);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_31Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_31Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_31CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_31CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_31Mask mask() {
			return new AllOtherFieldsNormal_31Mask();
		}
	}
	
	public class AllOtherFieldsNormal_31Data extends NeoData {
		public AllOtherFieldsNormal_31Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_31CoData extends NeoData {
		public AllOtherFieldsNormal_31CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_31Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.188
	public AllOtherFieldsNormal_64Access getRule_AllOtherFieldsNormal_64() {
		return new AllOtherFieldsNormal_64Access();
	}
	
	public class AllOtherFieldsNormal_64Access extends NeoRuleCoAccess<AllOtherFieldsNormal_64Data, AllOtherFieldsNormal_64CoData, AllOtherFieldsNormal_64Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(188);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_64Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_64CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_64Mask mask() {
			return new AllOtherFieldsNormal_64Mask();
		}
	}
	
	public class AllOtherFieldsNormal_64Data extends NeoData {
		public AllOtherFieldsNormal_64Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_64CoData extends NeoData {
		public AllOtherFieldsNormal_64CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.189
	public AllOtherFieldsNormal_65Access getRule_AllOtherFieldsNormal_65() {
		return new AllOtherFieldsNormal_65Access();
	}
	
	public class AllOtherFieldsNormal_65Access extends NeoRuleCoAccess<AllOtherFieldsNormal_65Data, AllOtherFieldsNormal_65CoData, AllOtherFieldsNormal_65Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(189);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_65Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_65CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_65Mask mask() {
			return new AllOtherFieldsNormal_65Mask();
		}
	}
	
	public class AllOtherFieldsNormal_65Data extends NeoData {
		public AllOtherFieldsNormal_65Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_65CoData extends NeoData {
		public AllOtherFieldsNormal_65CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_MI.msl#//@entities.190
	public AllOtherFieldsNormal_97Access getRule_AllOtherFieldsNormal_97() {
		return new AllOtherFieldsNormal_97Access();
	}
	
	public class AllOtherFieldsNormal_97Access extends NeoRuleCoAccess<AllOtherFieldsNormal_97Data, AllOtherFieldsNormal_97CoData, AllOtherFieldsNormal_97Mask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(190);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_97Data(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormal_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_97CoData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_97Mask mask() {
			return new AllOtherFieldsNormal_97Mask();
		}
	}
	
	public class AllOtherFieldsNormal_97Data extends NeoData {
		public AllOtherFieldsNormal_97Data(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_97CoData extends NeoData {
		public AllOtherFieldsNormal_97CoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormal_97Mask extends NeoMask {
	}
}
