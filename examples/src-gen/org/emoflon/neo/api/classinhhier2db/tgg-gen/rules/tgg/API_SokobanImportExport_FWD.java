/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.tgg-gen.rules.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_SokobanImportExport_FWD {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_SokobanImportExport_FWD(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_SokobanImportExport_FWD(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_SokobanImportExport_FWD(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForSokobanImportExport_FWD() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_BoardEndEntryRule().rule());
		rules.add(getRule_BoardNormalEntryRule().rule());
		rules.add(getRule_FirstColAllRowsEnd().rule());
		rules.add(getRule_FirstColAllRowsNormal().rule());
		rules.add(getRule_FirstRowAllColsEnd().rule());
		rules.add(getRule_FirstRowAllColsNormal().rule());
		rules.add(getRule_AllOtherFieldsEnd().rule());
		rules.add(getRule_AllOtherFieldsNormal().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForSokobanImportExport_FWD() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForSokobanImportExport_FWD(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(21));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.1
	public BoardEndEntryRuleAccess getRule_BoardEndEntryRule() {
		return new BoardEndEntryRuleAccess();
	}
	
	public class BoardEndEntryRuleAccess extends NeoRuleCoAccess<BoardEndEntryRuleData, BoardEndEntryRuleCoData, BoardEndEntryRuleMask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardEndEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRuleData(d));
		}
			
		@Override
		public Stream<BoardEndEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardEndEntryRuleCoData(d));
		}
		
		@Override
		public BoardEndEntryRuleMask mask() {
			return new BoardEndEntryRuleMask();
		}
	}
	
	public class BoardEndEntryRuleData extends NeoData {
		public BoardEndEntryRuleData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRuleCoData extends NeoData {
		public BoardEndEntryRuleCoData(Record data) {
		
		}
	}
	
	public class BoardEndEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.2
	public BoardNormalEntryRuleAccess getRule_BoardNormalEntryRule() {
		return new BoardNormalEntryRuleAccess();
	}
	
	public class BoardNormalEntryRuleAccess extends NeoRuleCoAccess<BoardNormalEntryRuleData, BoardNormalEntryRuleCoData, BoardNormalEntryRuleMask> {
		public final String _sokBoard = "sokBoard";
		public final String _ne = "ne";
		public final String _row = "row";
		public final String _nf = "nf";
		public final String _board = "board";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<BoardNormalEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRuleData(d));
		}
			
		@Override
		public Stream<BoardNormalEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardNormalEntryRuleCoData(d));
		}
		
		@Override
		public BoardNormalEntryRuleMask mask() {
			return new BoardNormalEntryRuleMask();
		}
	}
	
	public class BoardNormalEntryRuleData extends NeoData {
		public BoardNormalEntryRuleData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRuleCoData extends NeoData {
		public BoardNormalEntryRuleCoData(Record data) {
		
		}
	}
	
	public class BoardNormalEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.3
	public FirstColAllRowsEndAccess getRule_FirstColAllRowsEnd() {
		return new FirstColAllRowsEndAccess();
	}
	
	public class FirstColAllRowsEndAccess extends NeoRuleCoAccess<FirstColAllRowsEndData, FirstColAllRowsEndCoData, FirstColAllRowsEndMask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEndData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEndData(d));
		}
			
		@Override
		public Stream<FirstColAllRowsEndCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEndCoData(d));
		}
		
		@Override
		public FirstColAllRowsEndMask mask() {
			return new FirstColAllRowsEndMask();
		}
	}
	
	public class FirstColAllRowsEndData extends NeoData {
		public FirstColAllRowsEndData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEndCoData extends NeoData {
		public FirstColAllRowsEndCoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsEndMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.4
	public IConstraint getConstraint_FirstColAllRowsEndNAC() {
		var c = (Constraint) spec.getEntities().get(4);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.5
	public FirstColAllRowsEnd_NoDoubleBottomAccess getPattern_FirstColAllRowsEnd_NoDoubleBottom() {
		return new FirstColAllRowsEnd_NoDoubleBottomAccess();
	}
	
	public class FirstColAllRowsEnd_NoDoubleBottomAccess extends NeoPatternAccess<FirstColAllRowsEnd_NoDoubleBottomData, FirstColAllRowsEnd_NoDoubleBottomMask> {
		public final String _f = "f";
		public final String _other = "other";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(5);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsEnd_NoDoubleBottomData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsEnd_NoDoubleBottomData(d));
		}
		
		@Override
		public FirstColAllRowsEnd_NoDoubleBottomMask mask() {
			return new FirstColAllRowsEnd_NoDoubleBottomMask();
		}
	}
	
	public class FirstColAllRowsEnd_NoDoubleBottomData extends NeoData {
		public FirstColAllRowsEnd_NoDoubleBottomData(Record data) {
			
		}
	}
	
	public class FirstColAllRowsEnd_NoDoubleBottomMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.6
	public FirstColAllRowsNormalAccess getRule_FirstColAllRowsNormal() {
		return new FirstColAllRowsNormalAccess();
	}
	
	public class FirstColAllRowsNormalAccess extends NeoRuleCoAccess<FirstColAllRowsNormalData, FirstColAllRowsNormalCoData, FirstColAllRowsNormalMask> {
		public final String _r = "r";
		public final String _nr = "nr";
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormalData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormalData(d));
		}
			
		@Override
		public Stream<FirstColAllRowsNormalCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormalCoData(d));
		}
		
		@Override
		public FirstColAllRowsNormalMask mask() {
			return new FirstColAllRowsNormalMask();
		}
	}
	
	public class FirstColAllRowsNormalData extends NeoData {
		public FirstColAllRowsNormalData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormalCoData extends NeoData {
		public FirstColAllRowsNormalCoData(Record data) {
		
		}
	}
	
	public class FirstColAllRowsNormalMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.7
	public IConstraint getConstraint_FirstColAllRowsNormalNAC() {
		var c = (Constraint) spec.getEntities().get(7);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.8
	public FirstColAllRowsNormal_NoDoubleBottomAccess getPattern_FirstColAllRowsNormal_NoDoubleBottom() {
		return new FirstColAllRowsNormal_NoDoubleBottomAccess();
	}
	
	public class FirstColAllRowsNormal_NoDoubleBottomAccess extends NeoPatternAccess<FirstColAllRowsNormal_NoDoubleBottomData, FirstColAllRowsNormal_NoDoubleBottomMask> {
		public final String _f = "f";
		public final String _other = "other";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FirstColAllRowsNormal_NoDoubleBottomData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstColAllRowsNormal_NoDoubleBottomData(d));
		}
		
		@Override
		public FirstColAllRowsNormal_NoDoubleBottomMask mask() {
			return new FirstColAllRowsNormal_NoDoubleBottomMask();
		}
	}
	
	public class FirstColAllRowsNormal_NoDoubleBottomData extends NeoData {
		public FirstColAllRowsNormal_NoDoubleBottomData(Record data) {
			
		}
	}
	
	public class FirstColAllRowsNormal_NoDoubleBottomMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.9
	public FirstRowAllColsEndAccess getRule_FirstRowAllColsEnd() {
		return new FirstRowAllColsEndAccess();
	}
	
	public class FirstRowAllColsEndAccess extends NeoRuleCoAccess<FirstRowAllColsEndData, FirstRowAllColsEndCoData, FirstRowAllColsEndMask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEndData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEndData(d));
		}
			
		@Override
		public Stream<FirstRowAllColsEndCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEndCoData(d));
		}
		
		@Override
		public FirstRowAllColsEndMask mask() {
			return new FirstRowAllColsEndMask();
		}
	}
	
	public class FirstRowAllColsEndData extends NeoData {
		public FirstRowAllColsEndData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEndCoData extends NeoData {
		public FirstRowAllColsEndCoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsEndMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.10
	public IConstraint getConstraint_FirstRowAllColsEndNAC() {
		var c = (Constraint) spec.getEntities().get(10);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.11
	public FirstRowAllColsEnd_NoDoubleRightAccess getPattern_FirstRowAllColsEnd_NoDoubleRight() {
		return new FirstRowAllColsEnd_NoDoubleRightAccess();
	}
	
	public class FirstRowAllColsEnd_NoDoubleRightAccess extends NeoPatternAccess<FirstRowAllColsEnd_NoDoubleRightData, FirstRowAllColsEnd_NoDoubleRightMask> {
		public final String _f = "f";
		public final String _other = "other";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(11);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsEnd_NoDoubleRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsEnd_NoDoubleRightData(d));
		}
		
		@Override
		public FirstRowAllColsEnd_NoDoubleRightMask mask() {
			return new FirstRowAllColsEnd_NoDoubleRightMask();
		}
	}
	
	public class FirstRowAllColsEnd_NoDoubleRightData extends NeoData {
		public FirstRowAllColsEnd_NoDoubleRightData(Record data) {
			
		}
	}
	
	public class FirstRowAllColsEnd_NoDoubleRightMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.12
	public FirstRowAllColsNormalAccess getRule_FirstRowAllColsNormal() {
		return new FirstRowAllColsNormalAccess();
	}
	
	public class FirstRowAllColsNormalAccess extends NeoRuleCoAccess<FirstRowAllColsNormalData, FirstRowAllColsNormalCoData, FirstRowAllColsNormalMask> {
		public final String _e = "e";
		public final String _ne = "ne";
		public final String _b = "b";
		public final String _f = "f";
		public final String _nf = "nf";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormalData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormalData(d));
		}
			
		@Override
		public Stream<FirstRowAllColsNormalCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormalCoData(d));
		}
		
		@Override
		public FirstRowAllColsNormalMask mask() {
			return new FirstRowAllColsNormalMask();
		}
	}
	
	public class FirstRowAllColsNormalData extends NeoData {
		public FirstRowAllColsNormalData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormalCoData extends NeoData {
		public FirstRowAllColsNormalCoData(Record data) {
		
		}
	}
	
	public class FirstRowAllColsNormalMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.13
	public IConstraint getConstraint_FirstRowAllColsNormalNAC() {
		var c = (Constraint) spec.getEntities().get(13);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.14
	public FirstRowAllColsNormal_NoDoubleRightAccess getPattern_FirstRowAllColsNormal_NoDoubleRight() {
		return new FirstRowAllColsNormal_NoDoubleRightAccess();
	}
	
	public class FirstRowAllColsNormal_NoDoubleRightAccess extends NeoPatternAccess<FirstRowAllColsNormal_NoDoubleRightData, FirstRowAllColsNormal_NoDoubleRightMask> {
		public final String _f = "f";
		public final String _other = "other";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(14);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FirstRowAllColsNormal_NoDoubleRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FirstRowAllColsNormal_NoDoubleRightData(d));
		}
		
		@Override
		public FirstRowAllColsNormal_NoDoubleRightMask mask() {
			return new FirstRowAllColsNormal_NoDoubleRightMask();
		}
	}
	
	public class FirstRowAllColsNormal_NoDoubleRightData extends NeoData {
		public FirstRowAllColsNormal_NoDoubleRightData(Record data) {
			
		}
	}
	
	public class FirstRowAllColsNormal_NoDoubleRightMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.15
	public AllOtherFieldsEndAccess getRule_AllOtherFieldsEnd() {
		return new AllOtherFieldsEndAccess();
	}
	
	public class AllOtherFieldsEndAccess extends NeoRuleCoAccess<AllOtherFieldsEndData, AllOtherFieldsEndCoData, AllOtherFieldsEndMask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEndData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEndData(d));
		}
			
		@Override
		public Stream<AllOtherFieldsEndCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEndCoData(d));
		}
		
		@Override
		public AllOtherFieldsEndMask mask() {
			return new AllOtherFieldsEndMask();
		}
	}
	
	public class AllOtherFieldsEndData extends NeoData {
		public AllOtherFieldsEndData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEndCoData extends NeoData {
		public AllOtherFieldsEndCoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsEndMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.16
	public IConstraint getConstraint_AllOtherFieldsEndNAC() {
		var c = (Constraint) spec.getEntities().get(16);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.17
	public IConstraint getConstraint_AllOtherFieldsEnd_NoDoubleBottomTooNAC() {
		var c = (Constraint) spec.getEntities().get(17);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.18
	public AllOtherFieldsEnd_NoDoubleBottomTooAccess getPattern_AllOtherFieldsEnd_NoDoubleBottomToo() {
		return new AllOtherFieldsEnd_NoDoubleBottomTooAccess();
	}
	
	public class AllOtherFieldsEnd_NoDoubleBottomTooAccess extends NeoPatternAccess<AllOtherFieldsEnd_NoDoubleBottomTooData, AllOtherFieldsEnd_NoDoubleBottomTooMask> {
		public final String _other = "other";
		public final String _ur = "ur";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(18);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_NoDoubleBottomTooData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_NoDoubleBottomTooData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_NoDoubleBottomTooMask mask() {
			return new AllOtherFieldsEnd_NoDoubleBottomTooMask();
		}
	}
	
	public class AllOtherFieldsEnd_NoDoubleBottomTooData extends NeoData {
		public AllOtherFieldsEnd_NoDoubleBottomTooData(Record data) {
			
		}
	}
	
	public class AllOtherFieldsEnd_NoDoubleBottomTooMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.19
	public IConstraint getConstraint_AllOtherFieldsEnd_NoDoubleRightTooNAC() {
		var c = (Constraint) spec.getEntities().get(19);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.20
	public AllOtherFieldsEnd_NoDoubleRightTooAccess getPattern_AllOtherFieldsEnd_NoDoubleRightToo() {
		return new AllOtherFieldsEnd_NoDoubleRightTooAccess();
	}
	
	public class AllOtherFieldsEnd_NoDoubleRightTooAccess extends NeoPatternAccess<AllOtherFieldsEnd_NoDoubleRightTooData, AllOtherFieldsEnd_NoDoubleRightTooMask> {
		public final String _other = "other";
		public final String _bl = "bl";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(20);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsEnd_NoDoubleRightTooData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsEnd_NoDoubleRightTooData(d));
		}
		
		@Override
		public AllOtherFieldsEnd_NoDoubleRightTooMask mask() {
			return new AllOtherFieldsEnd_NoDoubleRightTooMask();
		}
	}
	
	public class AllOtherFieldsEnd_NoDoubleRightTooData extends NeoData {
		public AllOtherFieldsEnd_NoDoubleRightTooData(Record data) {
			
		}
	}
	
	public class AllOtherFieldsEnd_NoDoubleRightTooMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.21
	public AllOtherFieldsNormalAccess getRule_AllOtherFieldsNormal() {
		return new AllOtherFieldsNormalAccess();
	}
	
	public class AllOtherFieldsNormalAccess extends NeoRuleCoAccess<AllOtherFieldsNormalData, AllOtherFieldsNormalCoData, AllOtherFieldsNormalMask> {
		public final String _ne = "ne";
		public final String _ble = "ble";
		public final String _b = "b";
		public final String _ul = "ul";
		public final String _nf = "nf";
		public final String _bl = "bl";
		public final String _ur = "ur";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormalData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormalData(d));
		}
			
		@Override
		public Stream<AllOtherFieldsNormalCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormalCoData(d));
		}
		
		@Override
		public AllOtherFieldsNormalMask mask() {
			return new AllOtherFieldsNormalMask();
		}
	}
	
	public class AllOtherFieldsNormalData extends NeoData {
		public AllOtherFieldsNormalData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormalCoData extends NeoData {
		public AllOtherFieldsNormalCoData(Record data) {
		
		}
	}
	
	public class AllOtherFieldsNormalMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.22
	public IConstraint getConstraint_AllOtherFieldsNormalNAC() {
		var c = (Constraint) spec.getEntities().get(22);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.23
	public IConstraint getConstraint_AllOtherFieldsNormal_NoDoubleBottomTooNAC() {
		var c = (Constraint) spec.getEntities().get(23);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.24
	public AllOtherFieldsNormal_NoDoubleBottomTooAccess getPattern_AllOtherFieldsNormal_NoDoubleBottomToo() {
		return new AllOtherFieldsNormal_NoDoubleBottomTooAccess();
	}
	
	public class AllOtherFieldsNormal_NoDoubleBottomTooAccess extends NeoPatternAccess<AllOtherFieldsNormal_NoDoubleBottomTooData, AllOtherFieldsNormal_NoDoubleBottomTooMask> {
		public final String _other = "other";
		public final String _ur = "ur";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(24);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_NoDoubleBottomTooData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_NoDoubleBottomTooData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_NoDoubleBottomTooMask mask() {
			return new AllOtherFieldsNormal_NoDoubleBottomTooMask();
		}
	}
	
	public class AllOtherFieldsNormal_NoDoubleBottomTooData extends NeoData {
		public AllOtherFieldsNormal_NoDoubleBottomTooData(Record data) {
			
		}
	}
	
	public class AllOtherFieldsNormal_NoDoubleBottomTooMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.25
	public IConstraint getConstraint_AllOtherFieldsNormal_NoDoubleRightTooNAC() {
		var c = (Constraint) spec.getEntities().get(25);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/tgg-gen/rules/tgg/SokobanImportExport_FWD.msl#//@entities.26
	public AllOtherFieldsNormal_NoDoubleRightTooAccess getPattern_AllOtherFieldsNormal_NoDoubleRightToo() {
		return new AllOtherFieldsNormal_NoDoubleRightTooAccess();
	}
	
	public class AllOtherFieldsNormal_NoDoubleRightTooAccess extends NeoPatternAccess<AllOtherFieldsNormal_NoDoubleRightTooData, AllOtherFieldsNormal_NoDoubleRightTooMask> {
		public final String _other = "other";
		public final String _bl = "bl";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(26);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllOtherFieldsNormal_NoDoubleRightTooData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllOtherFieldsNormal_NoDoubleRightTooData(d));
		}
		
		@Override
		public AllOtherFieldsNormal_NoDoubleRightTooMask mask() {
			return new AllOtherFieldsNormal_NoDoubleRightTooMask();
		}
	}
	
	public class AllOtherFieldsNormal_NoDoubleRightTooData extends NeoData {
		public AllOtherFieldsNormal_NoDoubleRightTooData(Record data) {
			
		}
	}
	
	public class AllOtherFieldsNormal_NoDoubleRightTooMask extends NeoMask {
	}
}
