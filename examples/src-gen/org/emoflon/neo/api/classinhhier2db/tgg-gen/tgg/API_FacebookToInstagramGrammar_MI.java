/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.tgg-gen.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_FacebookToInstagramGrammar_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_FacebookToInstagramGrammar_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_FacebookToInstagramGrammar_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_FacebookToInstagramGrammar_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForFacebookToInstagramGrammar_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_NetworkToNetworkIslandRule().rule());
		rules.add(getRule_NetworkToNetworkIslandRule_1().rule());
		rules.add(getRule_NetworkToNetworkIslandRule_3().rule());
		rules.add(getRule_NetworkToNetworkIslandRule_5().rule());
		rules.add(getRule_UserToUserIslandRule().rule());
		rules.add(getRule_UserToUserIslandRule_1().rule());
		rules.add(getRule_UserToUserIslandRule_3().rule());
		rules.add(getRule_UserToUserIslandRule_5().rule());
		rules.add(getRule_UserNetworkBridgeRule().rule());
		rules.add(getRule_UserNetworkBridgeRule_1().rule());
		rules.add(getRule_UserNetworkBridgeRule_2().rule());
		rules.add(getRule_RequestFriendship().rule());
		rules.add(getRule_AcceptFriendship().rule());
		rules.add(getRule_AcceptFriendship_1().rule());
		rules.add(getRule_AcceptFriendship_4().rule());
		rules.add(getRule_AcceptFriendship_8().rule());
		rules.add(getRule_AcceptFriendship_12().rule());
		rules.add(getRule_AcceptFriendship_16().rule());
		rules.add(getRule_AcceptFriendship_20().rule());
		rules.add(getRule_AcceptFriendship_24().rule());
		rules.add(getRule_AcceptFriendship_28().rule());
		rules.add(getRule_AcceptFriendship_30().rule());
		rules.add(getRule_IgnoreInterNetworkFollowers().rule());
		rules.add(getRule_ParentsIgnoreRule().rule());
		rules.add(getRule_SpouseIgnoreRule().rule());
		rules.add(getRule_SpouseIgnoreRule_1().rule());
		rules.add(getRule_SpouseIgnoreRule_2().rule());
		rules.add(getRule_SiblingsIgnoreRule().rule());
		rules.add(getRule_SiblingsIgnoreRule_1().rule());
		rules.add(getRule_SiblingsIgnoreRule_2().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForFacebookToInstagramGrammar_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForFacebookToInstagramGrammar_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		rules.add((Rule) spec.getEntities().get(29));
		rules.add((Rule) spec.getEntities().get(30));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.1
	public NetworkToNetworkIslandRuleAccess getRule_NetworkToNetworkIslandRule() {
		return new NetworkToNetworkIslandRuleAccess();
	}
	
	public class NetworkToNetworkIslandRuleAccess extends NeoRuleCoAccess<NetworkToNetworkIslandRuleData, NetworkToNetworkIslandRuleCoData, NetworkToNetworkIslandRuleMask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetworkIslandRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRuleData(d));
		}
			
		@Override
		public Stream<NetworkToNetworkIslandRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRuleCoData(d));
		}
		
		@Override
		public NetworkToNetworkIslandRuleMask mask() {
			return new NetworkToNetworkIslandRuleMask();
		}
	}
	
	public class NetworkToNetworkIslandRuleData extends NeoData {
		public NetworkToNetworkIslandRuleData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRuleCoData extends NeoData {
		public NetworkToNetworkIslandRuleCoData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.2
	public NetworkToNetworkIslandRule_1Access getRule_NetworkToNetworkIslandRule_1() {
		return new NetworkToNetworkIslandRule_1Access();
	}
	
	public class NetworkToNetworkIslandRule_1Access extends NeoRuleCoAccess<NetworkToNetworkIslandRule_1Data, NetworkToNetworkIslandRule_1CoData, NetworkToNetworkIslandRule_1Mask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetworkIslandRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRule_1Data(d));
		}
			
		@Override
		public Stream<NetworkToNetworkIslandRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRule_1CoData(d));
		}
		
		@Override
		public NetworkToNetworkIslandRule_1Mask mask() {
			return new NetworkToNetworkIslandRule_1Mask();
		}
	}
	
	public class NetworkToNetworkIslandRule_1Data extends NeoData {
		public NetworkToNetworkIslandRule_1Data(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRule_1CoData extends NeoData {
		public NetworkToNetworkIslandRule_1CoData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.3
	public NetworkToNetworkIslandRule_3Access getRule_NetworkToNetworkIslandRule_3() {
		return new NetworkToNetworkIslandRule_3Access();
	}
	
	public class NetworkToNetworkIslandRule_3Access extends NeoRuleCoAccess<NetworkToNetworkIslandRule_3Data, NetworkToNetworkIslandRule_3CoData, NetworkToNetworkIslandRule_3Mask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetworkIslandRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRule_3Data(d));
		}
			
		@Override
		public Stream<NetworkToNetworkIslandRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRule_3CoData(d));
		}
		
		@Override
		public NetworkToNetworkIslandRule_3Mask mask() {
			return new NetworkToNetworkIslandRule_3Mask();
		}
	}
	
	public class NetworkToNetworkIslandRule_3Data extends NeoData {
		public NetworkToNetworkIslandRule_3Data(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRule_3CoData extends NeoData {
		public NetworkToNetworkIslandRule_3CoData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.4
	public NetworkToNetworkIslandRule_5Access getRule_NetworkToNetworkIslandRule_5() {
		return new NetworkToNetworkIslandRule_5Access();
	}
	
	public class NetworkToNetworkIslandRule_5Access extends NeoRuleCoAccess<NetworkToNetworkIslandRule_5Data, NetworkToNetworkIslandRule_5CoData, NetworkToNetworkIslandRule_5Mask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetworkIslandRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRule_5Data(d));
		}
			
		@Override
		public Stream<NetworkToNetworkIslandRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRule_5CoData(d));
		}
		
		@Override
		public NetworkToNetworkIslandRule_5Mask mask() {
			return new NetworkToNetworkIslandRule_5Mask();
		}
	}
	
	public class NetworkToNetworkIslandRule_5Data extends NeoData {
		public NetworkToNetworkIslandRule_5Data(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRule_5CoData extends NeoData {
		public NetworkToNetworkIslandRule_5CoData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.5
	public UserToUserIslandRuleAccess getRule_UserToUserIslandRule() {
		return new UserToUserIslandRuleAccess();
	}
	
	public class UserToUserIslandRuleAccess extends NeoRuleCoAccess<UserToUserIslandRuleData, UserToUserIslandRuleCoData, UserToUserIslandRuleMask> {
		public final String _flu = "flu";
		public final String _ilu = "ilu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUserIslandRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRuleData(d));
		}
			
		@Override
		public Stream<UserToUserIslandRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRuleCoData(d));
		}
		
		@Override
		public UserToUserIslandRuleMask mask() {
			return new UserToUserIslandRuleMask();
		}
	}
	
	public class UserToUserIslandRuleData extends NeoData {
		public UserToUserIslandRuleData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRuleCoData extends NeoData {
		public UserToUserIslandRuleCoData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.6
	public UserToUserIslandRule_1Access getRule_UserToUserIslandRule_1() {
		return new UserToUserIslandRule_1Access();
	}
	
	public class UserToUserIslandRule_1Access extends NeoRuleCoAccess<UserToUserIslandRule_1Data, UserToUserIslandRule_1CoData, UserToUserIslandRule_1Mask> {
		public final String _flu = "flu";
		public final String _ilu = "ilu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUserIslandRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRule_1Data(d));
		}
			
		@Override
		public Stream<UserToUserIslandRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRule_1CoData(d));
		}
		
		@Override
		public UserToUserIslandRule_1Mask mask() {
			return new UserToUserIslandRule_1Mask();
		}
	}
	
	public class UserToUserIslandRule_1Data extends NeoData {
		public UserToUserIslandRule_1Data(Record data) {
		
		}
	}
	
	public class UserToUserIslandRule_1CoData extends NeoData {
		public UserToUserIslandRule_1CoData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.7
	public UserToUserIslandRule_3Access getRule_UserToUserIslandRule_3() {
		return new UserToUserIslandRule_3Access();
	}
	
	public class UserToUserIslandRule_3Access extends NeoRuleCoAccess<UserToUserIslandRule_3Data, UserToUserIslandRule_3CoData, UserToUserIslandRule_3Mask> {
		public final String _flu = "flu";
		public final String _ilu = "ilu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUserIslandRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRule_3Data(d));
		}
			
		@Override
		public Stream<UserToUserIslandRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRule_3CoData(d));
		}
		
		@Override
		public UserToUserIslandRule_3Mask mask() {
			return new UserToUserIslandRule_3Mask();
		}
	}
	
	public class UserToUserIslandRule_3Data extends NeoData {
		public UserToUserIslandRule_3Data(Record data) {
		
		}
	}
	
	public class UserToUserIslandRule_3CoData extends NeoData {
		public UserToUserIslandRule_3CoData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.8
	public UserToUserIslandRule_5Access getRule_UserToUserIslandRule_5() {
		return new UserToUserIslandRule_5Access();
	}
	
	public class UserToUserIslandRule_5Access extends NeoRuleCoAccess<UserToUserIslandRule_5Data, UserToUserIslandRule_5CoData, UserToUserIslandRule_5Mask> {
		public final String _flu = "flu";
		public final String _ilu = "ilu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUserIslandRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRule_5Data(d));
		}
			
		@Override
		public Stream<UserToUserIslandRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRule_5CoData(d));
		}
		
		@Override
		public UserToUserIslandRule_5Mask mask() {
			return new UserToUserIslandRule_5Mask();
		}
	}
	
	public class UserToUserIslandRule_5Data extends NeoData {
		public UserToUserIslandRule_5Data(Record data) {
		
		}
	}
	
	public class UserToUserIslandRule_5CoData extends NeoData {
		public UserToUserIslandRule_5CoData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.9
	public UserNetworkBridgeRuleAccess getRule_UserNetworkBridgeRule() {
		return new UserNetworkBridgeRuleAccess();
	}
	
	public class UserNetworkBridgeRuleAccess extends NeoRuleCoAccess<UserNetworkBridgeRuleData, UserNetworkBridgeRuleCoData, UserNetworkBridgeRuleMask> {
		public final String _f = "f";
		public final String _fu = "fu";
		public final String _i = "i";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserNetworkBridgeRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRuleData(d));
		}
			
		@Override
		public Stream<UserNetworkBridgeRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRuleCoData(d));
		}
		
		@Override
		public UserNetworkBridgeRuleMask mask() {
			return new UserNetworkBridgeRuleMask();
		}
	}
	
	public class UserNetworkBridgeRuleData extends NeoData {
		public UserNetworkBridgeRuleData(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRuleCoData extends NeoData {
		public UserNetworkBridgeRuleCoData(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.10
	public UserNetworkBridgeRule_1Access getRule_UserNetworkBridgeRule_1() {
		return new UserNetworkBridgeRule_1Access();
	}
	
	public class UserNetworkBridgeRule_1Access extends NeoRuleCoAccess<UserNetworkBridgeRule_1Data, UserNetworkBridgeRule_1CoData, UserNetworkBridgeRule_1Mask> {
		public final String _f = "f";
		public final String _fu = "fu";
		public final String _i = "i";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserNetworkBridgeRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRule_1Data(d));
		}
			
		@Override
		public Stream<UserNetworkBridgeRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRule_1CoData(d));
		}
		
		@Override
		public UserNetworkBridgeRule_1Mask mask() {
			return new UserNetworkBridgeRule_1Mask();
		}
	}
	
	public class UserNetworkBridgeRule_1Data extends NeoData {
		public UserNetworkBridgeRule_1Data(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRule_1CoData extends NeoData {
		public UserNetworkBridgeRule_1CoData(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.11
	public UserNetworkBridgeRule_2Access getRule_UserNetworkBridgeRule_2() {
		return new UserNetworkBridgeRule_2Access();
	}
	
	public class UserNetworkBridgeRule_2Access extends NeoRuleCoAccess<UserNetworkBridgeRule_2Data, UserNetworkBridgeRule_2CoData, UserNetworkBridgeRule_2Mask> {
		public final String _f = "f";
		public final String _fu = "fu";
		public final String _i = "i";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserNetworkBridgeRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRule_2Data(d));
		}
			
		@Override
		public Stream<UserNetworkBridgeRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRule_2CoData(d));
		}
		
		@Override
		public UserNetworkBridgeRule_2Mask mask() {
			return new UserNetworkBridgeRule_2Mask();
		}
	}
	
	public class UserNetworkBridgeRule_2Data extends NeoData {
		public UserNetworkBridgeRule_2Data(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRule_2CoData extends NeoData {
		public UserNetworkBridgeRule_2CoData(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.12
	public RequestFriendshipAccess getRule_RequestFriendship() {
		return new RequestFriendshipAccess();
	}
	
	public class RequestFriendshipAccess extends NeoRuleCoAccess<RequestFriendshipData, RequestFriendshipCoData, RequestFriendshipMask> {
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RequestFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RequestFriendshipData(d));
		}
			
		@Override
		public Stream<RequestFriendshipCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RequestFriendshipCoData(d));
		}
		
		@Override
		public RequestFriendshipMask mask() {
			return new RequestFriendshipMask();
		}
	}
	
	public class RequestFriendshipData extends NeoData {
		public RequestFriendshipData(Record data) {
		
		}
	}
	
	public class RequestFriendshipCoData extends NeoData {
		public RequestFriendshipCoData(Record data) {
		
		}
	}
	
	public class RequestFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.13
	public AcceptFriendshipAccess getRule_AcceptFriendship() {
		return new AcceptFriendshipAccess();
	}
	
	public class AcceptFriendshipAccess extends NeoRuleCoAccess<AcceptFriendshipData, AcceptFriendshipCoData, AcceptFriendshipMask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendshipData(d));
		}
			
		@Override
		public Stream<AcceptFriendshipCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendshipCoData(d));
		}
		
		@Override
		public AcceptFriendshipMask mask() {
			return new AcceptFriendshipMask();
		}
	}
	
	public class AcceptFriendshipData extends NeoData {
		public AcceptFriendshipData(Record data) {
		
		}
	}
	
	public class AcceptFriendshipCoData extends NeoData {
		public AcceptFriendshipCoData(Record data) {
		
		}
	}
	
	public class AcceptFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.14
	public AcceptFriendship_1Access getRule_AcceptFriendship_1() {
		return new AcceptFriendship_1Access();
	}
	
	public class AcceptFriendship_1Access extends NeoRuleCoAccess<AcceptFriendship_1Data, AcceptFriendship_1CoData, AcceptFriendship_1Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_1Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_1CoData(d));
		}
		
		@Override
		public AcceptFriendship_1Mask mask() {
			return new AcceptFriendship_1Mask();
		}
	}
	
	public class AcceptFriendship_1Data extends NeoData {
		public AcceptFriendship_1Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_1CoData extends NeoData {
		public AcceptFriendship_1CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.15
	public AcceptFriendship_4Access getRule_AcceptFriendship_4() {
		return new AcceptFriendship_4Access();
	}
	
	public class AcceptFriendship_4Access extends NeoRuleCoAccess<AcceptFriendship_4Data, AcceptFriendship_4CoData, AcceptFriendship_4Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_4Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_4CoData(d));
		}
		
		@Override
		public AcceptFriendship_4Mask mask() {
			return new AcceptFriendship_4Mask();
		}
	}
	
	public class AcceptFriendship_4Data extends NeoData {
		public AcceptFriendship_4Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_4CoData extends NeoData {
		public AcceptFriendship_4CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.16
	public AcceptFriendship_8Access getRule_AcceptFriendship_8() {
		return new AcceptFriendship_8Access();
	}
	
	public class AcceptFriendship_8Access extends NeoRuleCoAccess<AcceptFriendship_8Data, AcceptFriendship_8CoData, AcceptFriendship_8Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_8Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_8CoData(d));
		}
		
		@Override
		public AcceptFriendship_8Mask mask() {
			return new AcceptFriendship_8Mask();
		}
	}
	
	public class AcceptFriendship_8Data extends NeoData {
		public AcceptFriendship_8Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_8CoData extends NeoData {
		public AcceptFriendship_8CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.17
	public AcceptFriendship_12Access getRule_AcceptFriendship_12() {
		return new AcceptFriendship_12Access();
	}
	
	public class AcceptFriendship_12Access extends NeoRuleCoAccess<AcceptFriendship_12Data, AcceptFriendship_12CoData, AcceptFriendship_12Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_12Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_12Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_12CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_12CoData(d));
		}
		
		@Override
		public AcceptFriendship_12Mask mask() {
			return new AcceptFriendship_12Mask();
		}
	}
	
	public class AcceptFriendship_12Data extends NeoData {
		public AcceptFriendship_12Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_12CoData extends NeoData {
		public AcceptFriendship_12CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_12Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.18
	public AcceptFriendship_16Access getRule_AcceptFriendship_16() {
		return new AcceptFriendship_16Access();
	}
	
	public class AcceptFriendship_16Access extends NeoRuleCoAccess<AcceptFriendship_16Data, AcceptFriendship_16CoData, AcceptFriendship_16Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_16Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_16CoData(d));
		}
		
		@Override
		public AcceptFriendship_16Mask mask() {
			return new AcceptFriendship_16Mask();
		}
	}
	
	public class AcceptFriendship_16Data extends NeoData {
		public AcceptFriendship_16Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_16CoData extends NeoData {
		public AcceptFriendship_16CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.19
	public AcceptFriendship_20Access getRule_AcceptFriendship_20() {
		return new AcceptFriendship_20Access();
	}
	
	public class AcceptFriendship_20Access extends NeoRuleCoAccess<AcceptFriendship_20Data, AcceptFriendship_20CoData, AcceptFriendship_20Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_20Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_20Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_20CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_20CoData(d));
		}
		
		@Override
		public AcceptFriendship_20Mask mask() {
			return new AcceptFriendship_20Mask();
		}
	}
	
	public class AcceptFriendship_20Data extends NeoData {
		public AcceptFriendship_20Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_20CoData extends NeoData {
		public AcceptFriendship_20CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_20Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.20
	public AcceptFriendship_24Access getRule_AcceptFriendship_24() {
		return new AcceptFriendship_24Access();
	}
	
	public class AcceptFriendship_24Access extends NeoRuleCoAccess<AcceptFriendship_24Data, AcceptFriendship_24CoData, AcceptFriendship_24Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_24Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_24Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_24CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_24CoData(d));
		}
		
		@Override
		public AcceptFriendship_24Mask mask() {
			return new AcceptFriendship_24Mask();
		}
	}
	
	public class AcceptFriendship_24Data extends NeoData {
		public AcceptFriendship_24Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_24CoData extends NeoData {
		public AcceptFriendship_24CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_24Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.21
	public AcceptFriendship_28Access getRule_AcceptFriendship_28() {
		return new AcceptFriendship_28Access();
	}
	
	public class AcceptFriendship_28Access extends NeoRuleCoAccess<AcceptFriendship_28Data, AcceptFriendship_28CoData, AcceptFriendship_28Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_28Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_28Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_28CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_28CoData(d));
		}
		
		@Override
		public AcceptFriendship_28Mask mask() {
			return new AcceptFriendship_28Mask();
		}
	}
	
	public class AcceptFriendship_28Data extends NeoData {
		public AcceptFriendship_28Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_28CoData extends NeoData {
		public AcceptFriendship_28CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_28Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.22
	public AcceptFriendship_30Access getRule_AcceptFriendship_30() {
		return new AcceptFriendship_30Access();
	}
	
	public class AcceptFriendship_30Access extends NeoRuleCoAccess<AcceptFriendship_30Data, AcceptFriendship_30CoData, AcceptFriendship_30Mask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_30Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_30Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_30CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_30CoData(d));
		}
		
		@Override
		public AcceptFriendship_30Mask mask() {
			return new AcceptFriendship_30Mask();
		}
	}
	
	public class AcceptFriendship_30Data extends NeoData {
		public AcceptFriendship_30Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_30CoData extends NeoData {
		public AcceptFriendship_30CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_30Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.23
	public IgnoreInterNetworkFollowersAccess getRule_IgnoreInterNetworkFollowers() {
		return new IgnoreInterNetworkFollowersAccess();
	}
	
	public class IgnoreInterNetworkFollowersAccess extends NeoRuleCoAccess<IgnoreInterNetworkFollowersData, IgnoreInterNetworkFollowersCoData, IgnoreInterNetworkFollowersMask> {
		public final String _nu = "nu";
		public final String _fn = "fn";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<IgnoreInterNetworkFollowersData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreInterNetworkFollowersData(d));
		}
			
		@Override
		public Stream<IgnoreInterNetworkFollowersCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreInterNetworkFollowersCoData(d));
		}
		
		@Override
		public IgnoreInterNetworkFollowersMask mask() {
			return new IgnoreInterNetworkFollowersMask();
		}
	}
	
	public class IgnoreInterNetworkFollowersData extends NeoData {
		public IgnoreInterNetworkFollowersData(Record data) {
		
		}
	}
	
	public class IgnoreInterNetworkFollowersCoData extends NeoData {
		public IgnoreInterNetworkFollowersCoData(Record data) {
		
		}
	}
	
	public class IgnoreInterNetworkFollowersMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.24
	public ParentsIgnoreRuleAccess getRule_ParentsIgnoreRule() {
		return new ParentsIgnoreRuleAccess();
	}
	
	public class ParentsIgnoreRuleAccess extends NeoRuleCoAccess<ParentsIgnoreRuleData, ParentsIgnoreRuleCoData, ParentsIgnoreRuleMask> {
		public final String _fn = "fn";
		public final String _fu = "fu";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ParentsIgnoreRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ParentsIgnoreRuleData(d));
		}
			
		@Override
		public Stream<ParentsIgnoreRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ParentsIgnoreRuleCoData(d));
		}
		
		@Override
		public ParentsIgnoreRuleMask mask() {
			return new ParentsIgnoreRuleMask();
		}
	}
	
	public class ParentsIgnoreRuleData extends NeoData {
		public ParentsIgnoreRuleData(Record data) {
		
		}
	}
	
	public class ParentsIgnoreRuleCoData extends NeoData {
		public ParentsIgnoreRuleCoData(Record data) {
		
		}
	}
	
	public class ParentsIgnoreRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.25
	public SpouseIgnoreRuleAccess getRule_SpouseIgnoreRule() {
		return new SpouseIgnoreRuleAccess();
	}
	
	public class SpouseIgnoreRuleAccess extends NeoRuleCoAccess<SpouseIgnoreRuleData, SpouseIgnoreRuleCoData, SpouseIgnoreRuleMask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SpouseIgnoreRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRuleData(d));
		}
			
		@Override
		public Stream<SpouseIgnoreRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRuleCoData(d));
		}
		
		@Override
		public SpouseIgnoreRuleMask mask() {
			return new SpouseIgnoreRuleMask();
		}
	}
	
	public class SpouseIgnoreRuleData extends NeoData {
		public SpouseIgnoreRuleData(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRuleCoData extends NeoData {
		public SpouseIgnoreRuleCoData(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.26
	public SpouseIgnoreRule_1Access getRule_SpouseIgnoreRule_1() {
		return new SpouseIgnoreRule_1Access();
	}
	
	public class SpouseIgnoreRule_1Access extends NeoRuleCoAccess<SpouseIgnoreRule_1Data, SpouseIgnoreRule_1CoData, SpouseIgnoreRule_1Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SpouseIgnoreRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRule_1Data(d));
		}
			
		@Override
		public Stream<SpouseIgnoreRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRule_1CoData(d));
		}
		
		@Override
		public SpouseIgnoreRule_1Mask mask() {
			return new SpouseIgnoreRule_1Mask();
		}
	}
	
	public class SpouseIgnoreRule_1Data extends NeoData {
		public SpouseIgnoreRule_1Data(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRule_1CoData extends NeoData {
		public SpouseIgnoreRule_1CoData(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.27
	public SpouseIgnoreRule_2Access getRule_SpouseIgnoreRule_2() {
		return new SpouseIgnoreRule_2Access();
	}
	
	public class SpouseIgnoreRule_2Access extends NeoRuleCoAccess<SpouseIgnoreRule_2Data, SpouseIgnoreRule_2CoData, SpouseIgnoreRule_2Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SpouseIgnoreRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRule_2Data(d));
		}
			
		@Override
		public Stream<SpouseIgnoreRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRule_2CoData(d));
		}
		
		@Override
		public SpouseIgnoreRule_2Mask mask() {
			return new SpouseIgnoreRule_2Mask();
		}
	}
	
	public class SpouseIgnoreRule_2Data extends NeoData {
		public SpouseIgnoreRule_2Data(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRule_2CoData extends NeoData {
		public SpouseIgnoreRule_2CoData(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.28
	public SiblingsIgnoreRuleAccess getRule_SiblingsIgnoreRule() {
		return new SiblingsIgnoreRuleAccess();
	}
	
	public class SiblingsIgnoreRuleAccess extends NeoRuleCoAccess<SiblingsIgnoreRuleData, SiblingsIgnoreRuleCoData, SiblingsIgnoreRuleMask> {
		public final String _fn = "fn";
		public final String _fu = "fu";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SiblingsIgnoreRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRuleData(d));
		}
			
		@Override
		public Stream<SiblingsIgnoreRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRuleCoData(d));
		}
		
		@Override
		public SiblingsIgnoreRuleMask mask() {
			return new SiblingsIgnoreRuleMask();
		}
	}
	
	public class SiblingsIgnoreRuleData extends NeoData {
		public SiblingsIgnoreRuleData(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRuleCoData extends NeoData {
		public SiblingsIgnoreRuleCoData(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.29
	public SiblingsIgnoreRule_1Access getRule_SiblingsIgnoreRule_1() {
		return new SiblingsIgnoreRule_1Access();
	}
	
	public class SiblingsIgnoreRule_1Access extends NeoRuleCoAccess<SiblingsIgnoreRule_1Data, SiblingsIgnoreRule_1CoData, SiblingsIgnoreRule_1Mask> {
		public final String _fn = "fn";
		public final String _fu = "fu";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SiblingsIgnoreRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRule_1Data(d));
		}
			
		@Override
		public Stream<SiblingsIgnoreRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRule_1CoData(d));
		}
		
		@Override
		public SiblingsIgnoreRule_1Mask mask() {
			return new SiblingsIgnoreRule_1Mask();
		}
	}
	
	public class SiblingsIgnoreRule_1Data extends NeoData {
		public SiblingsIgnoreRule_1Data(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRule_1CoData extends NeoData {
		public SiblingsIgnoreRule_1CoData(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram/tgg-gen/tgg/FacebookToInstagramGrammar_MI.msl#//@entities.30
	public SiblingsIgnoreRule_2Access getRule_SiblingsIgnoreRule_2() {
		return new SiblingsIgnoreRule_2Access();
	}
	
	public class SiblingsIgnoreRule_2Access extends NeoRuleCoAccess<SiblingsIgnoreRule_2Data, SiblingsIgnoreRule_2CoData, SiblingsIgnoreRule_2Mask> {
		public final String _fn = "fn";
		public final String _fu = "fu";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(30);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SiblingsIgnoreRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRule_2Data(d));
		}
			
		@Override
		public Stream<SiblingsIgnoreRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRule_2CoData(d));
		}
		
		@Override
		public SiblingsIgnoreRule_2Mask mask() {
			return new SiblingsIgnoreRule_2Mask();
		}
	}
	
	public class SiblingsIgnoreRule_2Data extends NeoData {
		public SiblingsIgnoreRule_2Data(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRule_2CoData extends NeoData {
		public SiblingsIgnoreRule_2CoData(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRule_2Mask extends NeoMask {
	}
}
