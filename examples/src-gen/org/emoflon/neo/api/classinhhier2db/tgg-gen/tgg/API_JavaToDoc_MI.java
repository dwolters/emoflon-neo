/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.tgg-gen.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_JavaToDoc_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_JavaToDoc_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_JavaToDoc_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_JavaToDoc_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForJavaToDoc_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_ClazzToDocRule().rule());
		rules.add(getRule_ClazzToDocRule_1().rule());
		rules.add(getRule_ClazzToDocRule_2().rule());
		rules.add(getRule_ClazzToDocRule_3().rule());
		rules.add(getRule_ClazzToDocRule_7().rule());
		rules.add(getRule_ClazzToDocRule_8().rule());
		rules.add(getRule_ClazzToDocRule_9().rule());
		rules.add(getRule_ClazzToDocRule_25().rule());
		rules.add(getRule_RootToRootRule().rule());
		rules.add(getRule_RootToRootRule_1().rule());
		rules.add(getRule_RootToRootRule_3().rule());
		rules.add(getRule_RootToRootRule_5().rule());
		rules.add(getRule_SubToSubRule().rule());
		rules.add(getRule_SubToSubRule_1().rule());
		rules.add(getRule_SubToSubRule_2().rule());
		rules.add(getRule_SubToSubRule_3().rule());
		rules.add(getRule_SubToSubRule_8().rule());
		rules.add(getRule_SubToSubRule_9().rule());
		rules.add(getRule_SubToSubRule_10().rule());
		rules.add(getRule_SubToSubRule_11().rule());
		rules.add(getRule_SubToSubRule_15().rule());
		rules.add(getRule_SubToSubRule_24().rule());
		rules.add(getRule_SubToSubRule_25().rule());
		rules.add(getRule_SubToSubRule_26().rule());
		rules.add(getRule_SubToSubRule_27().rule());
		rules.add(getRule_SubToSubRule_31().rule());
		rules.add(getRule_SubToSubRule_32().rule());
		rules.add(getRule_SubToSubRule_33().rule());
		rules.add(getRule_SubToSubRule_97().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForJavaToDoc_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForJavaToDoc_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		rules.add((Rule) spec.getEntities().get(29));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.1
	public ClazzToDocRuleAccess getRule_ClazzToDocRule() {
		return new ClazzToDocRuleAccess();
	}
	
	public class ClazzToDocRuleAccess extends NeoRuleCoAccess<ClazzToDocRuleData, ClazzToDocRuleCoData, ClazzToDocRuleMask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRuleData(d));
		}
			
		@Override
		public Stream<ClazzToDocRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRuleCoData(d));
		}
		
		@Override
		public ClazzToDocRuleMask mask() {
			return new ClazzToDocRuleMask();
		}
	}
	
	public class ClazzToDocRuleData extends NeoData {
		public ClazzToDocRuleData(Record data) {
		
		}
	}
	
	public class ClazzToDocRuleCoData extends NeoData {
		public ClazzToDocRuleCoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.2
	public ClazzToDocRule_1Access getRule_ClazzToDocRule_1() {
		return new ClazzToDocRule_1Access();
	}
	
	public class ClazzToDocRule_1Access extends NeoRuleCoAccess<ClazzToDocRule_1Data, ClazzToDocRule_1CoData, ClazzToDocRule_1Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_1Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_1CoData(d));
		}
		
		@Override
		public ClazzToDocRule_1Mask mask() {
			return new ClazzToDocRule_1Mask();
		}
	}
	
	public class ClazzToDocRule_1Data extends NeoData {
		public ClazzToDocRule_1Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_1CoData extends NeoData {
		public ClazzToDocRule_1CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.3
	public ClazzToDocRule_2Access getRule_ClazzToDocRule_2() {
		return new ClazzToDocRule_2Access();
	}
	
	public class ClazzToDocRule_2Access extends NeoRuleCoAccess<ClazzToDocRule_2Data, ClazzToDocRule_2CoData, ClazzToDocRule_2Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_2Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_2CoData(d));
		}
		
		@Override
		public ClazzToDocRule_2Mask mask() {
			return new ClazzToDocRule_2Mask();
		}
	}
	
	public class ClazzToDocRule_2Data extends NeoData {
		public ClazzToDocRule_2Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_2CoData extends NeoData {
		public ClazzToDocRule_2CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.4
	public ClazzToDocRule_3Access getRule_ClazzToDocRule_3() {
		return new ClazzToDocRule_3Access();
	}
	
	public class ClazzToDocRule_3Access extends NeoRuleCoAccess<ClazzToDocRule_3Data, ClazzToDocRule_3CoData, ClazzToDocRule_3Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_3Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_3CoData(d));
		}
		
		@Override
		public ClazzToDocRule_3Mask mask() {
			return new ClazzToDocRule_3Mask();
		}
	}
	
	public class ClazzToDocRule_3Data extends NeoData {
		public ClazzToDocRule_3Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_3CoData extends NeoData {
		public ClazzToDocRule_3CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.5
	public ClazzToDocRule_7Access getRule_ClazzToDocRule_7() {
		return new ClazzToDocRule_7Access();
	}
	
	public class ClazzToDocRule_7Access extends NeoRuleCoAccess<ClazzToDocRule_7Data, ClazzToDocRule_7CoData, ClazzToDocRule_7Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_7Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_7CoData(d));
		}
		
		@Override
		public ClazzToDocRule_7Mask mask() {
			return new ClazzToDocRule_7Mask();
		}
	}
	
	public class ClazzToDocRule_7Data extends NeoData {
		public ClazzToDocRule_7Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_7CoData extends NeoData {
		public ClazzToDocRule_7CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.6
	public ClazzToDocRule_8Access getRule_ClazzToDocRule_8() {
		return new ClazzToDocRule_8Access();
	}
	
	public class ClazzToDocRule_8Access extends NeoRuleCoAccess<ClazzToDocRule_8Data, ClazzToDocRule_8CoData, ClazzToDocRule_8Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_8Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_8CoData(d));
		}
		
		@Override
		public ClazzToDocRule_8Mask mask() {
			return new ClazzToDocRule_8Mask();
		}
	}
	
	public class ClazzToDocRule_8Data extends NeoData {
		public ClazzToDocRule_8Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_8CoData extends NeoData {
		public ClazzToDocRule_8CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.7
	public ClazzToDocRule_9Access getRule_ClazzToDocRule_9() {
		return new ClazzToDocRule_9Access();
	}
	
	public class ClazzToDocRule_9Access extends NeoRuleCoAccess<ClazzToDocRule_9Data, ClazzToDocRule_9CoData, ClazzToDocRule_9Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_9Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_9CoData(d));
		}
		
		@Override
		public ClazzToDocRule_9Mask mask() {
			return new ClazzToDocRule_9Mask();
		}
	}
	
	public class ClazzToDocRule_9Data extends NeoData {
		public ClazzToDocRule_9Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_9CoData extends NeoData {
		public ClazzToDocRule_9CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.8
	public ClazzToDocRule_25Access getRule_ClazzToDocRule_25() {
		return new ClazzToDocRule_25Access();
	}
	
	public class ClazzToDocRule_25Access extends NeoRuleCoAccess<ClazzToDocRule_25Data, ClazzToDocRule_25CoData, ClazzToDocRule_25Mask> {
		public final String _p = "p";
		public final String _c = "c";
		public final String _f = "f";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_25Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_25CoData(d));
		}
		
		@Override
		public ClazzToDocRule_25Mask mask() {
			return new ClazzToDocRule_25Mask();
		}
	}
	
	public class ClazzToDocRule_25Data extends NeoData {
		public ClazzToDocRule_25Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_25CoData extends NeoData {
		public ClazzToDocRule_25CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.9
	public RootToRootRuleAccess getRule_RootToRootRule() {
		return new RootToRootRuleAccess();
	}
	
	public class RootToRootRuleAccess extends NeoRuleCoAccess<RootToRootRuleData, RootToRootRuleCoData, RootToRootRuleMask> {
		public final String _p = "p";
		public final String _f = "f";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RootToRootRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRuleData(d));
		}
			
		@Override
		public Stream<RootToRootRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRuleCoData(d));
		}
		
		@Override
		public RootToRootRuleMask mask() {
			return new RootToRootRuleMask();
		}
	}
	
	public class RootToRootRuleData extends NeoData {
		public RootToRootRuleData(Record data) {
		
		}
	}
	
	public class RootToRootRuleCoData extends NeoData {
		public RootToRootRuleCoData(Record data) {
		
		}
	}
	
	public class RootToRootRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.10
	public RootToRootRule_1Access getRule_RootToRootRule_1() {
		return new RootToRootRule_1Access();
	}
	
	public class RootToRootRule_1Access extends NeoRuleCoAccess<RootToRootRule_1Data, RootToRootRule_1CoData, RootToRootRule_1Mask> {
		public final String _p = "p";
		public final String _f = "f";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RootToRootRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRule_1Data(d));
		}
			
		@Override
		public Stream<RootToRootRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRule_1CoData(d));
		}
		
		@Override
		public RootToRootRule_1Mask mask() {
			return new RootToRootRule_1Mask();
		}
	}
	
	public class RootToRootRule_1Data extends NeoData {
		public RootToRootRule_1Data(Record data) {
		
		}
	}
	
	public class RootToRootRule_1CoData extends NeoData {
		public RootToRootRule_1CoData(Record data) {
		
		}
	}
	
	public class RootToRootRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.11
	public RootToRootRule_3Access getRule_RootToRootRule_3() {
		return new RootToRootRule_3Access();
	}
	
	public class RootToRootRule_3Access extends NeoRuleCoAccess<RootToRootRule_3Data, RootToRootRule_3CoData, RootToRootRule_3Mask> {
		public final String _p = "p";
		public final String _f = "f";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RootToRootRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRule_3Data(d));
		}
			
		@Override
		public Stream<RootToRootRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRule_3CoData(d));
		}
		
		@Override
		public RootToRootRule_3Mask mask() {
			return new RootToRootRule_3Mask();
		}
	}
	
	public class RootToRootRule_3Data extends NeoData {
		public RootToRootRule_3Data(Record data) {
		
		}
	}
	
	public class RootToRootRule_3CoData extends NeoData {
		public RootToRootRule_3CoData(Record data) {
		
		}
	}
	
	public class RootToRootRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.12
	public RootToRootRule_5Access getRule_RootToRootRule_5() {
		return new RootToRootRule_5Access();
	}
	
	public class RootToRootRule_5Access extends NeoRuleCoAccess<RootToRootRule_5Data, RootToRootRule_5CoData, RootToRootRule_5Mask> {
		public final String _p = "p";
		public final String _f = "f";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RootToRootRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRule_5Data(d));
		}
			
		@Override
		public Stream<RootToRootRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RootToRootRule_5CoData(d));
		}
		
		@Override
		public RootToRootRule_5Mask mask() {
			return new RootToRootRule_5Mask();
		}
	}
	
	public class RootToRootRule_5Data extends NeoData {
		public RootToRootRule_5Data(Record data) {
		
		}
	}
	
	public class RootToRootRule_5CoData extends NeoData {
		public RootToRootRule_5CoData(Record data) {
		
		}
	}
	
	public class RootToRootRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.13
	public SubToSubRuleAccess getRule_SubToSubRule() {
		return new SubToSubRuleAccess();
	}
	
	public class SubToSubRuleAccess extends NeoRuleCoAccess<SubToSubRuleData, SubToSubRuleCoData, SubToSubRuleMask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRuleData(d));
		}
			
		@Override
		public Stream<SubToSubRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRuleCoData(d));
		}
		
		@Override
		public SubToSubRuleMask mask() {
			return new SubToSubRuleMask();
		}
	}
	
	public class SubToSubRuleData extends NeoData {
		public SubToSubRuleData(Record data) {
		
		}
	}
	
	public class SubToSubRuleCoData extends NeoData {
		public SubToSubRuleCoData(Record data) {
		
		}
	}
	
	public class SubToSubRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.14
	public SubToSubRule_1Access getRule_SubToSubRule_1() {
		return new SubToSubRule_1Access();
	}
	
	public class SubToSubRule_1Access extends NeoRuleCoAccess<SubToSubRule_1Data, SubToSubRule_1CoData, SubToSubRule_1Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_1Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_1CoData(d));
		}
		
		@Override
		public SubToSubRule_1Mask mask() {
			return new SubToSubRule_1Mask();
		}
	}
	
	public class SubToSubRule_1Data extends NeoData {
		public SubToSubRule_1Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_1CoData extends NeoData {
		public SubToSubRule_1CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.15
	public SubToSubRule_2Access getRule_SubToSubRule_2() {
		return new SubToSubRule_2Access();
	}
	
	public class SubToSubRule_2Access extends NeoRuleCoAccess<SubToSubRule_2Data, SubToSubRule_2CoData, SubToSubRule_2Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_2Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_2CoData(d));
		}
		
		@Override
		public SubToSubRule_2Mask mask() {
			return new SubToSubRule_2Mask();
		}
	}
	
	public class SubToSubRule_2Data extends NeoData {
		public SubToSubRule_2Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_2CoData extends NeoData {
		public SubToSubRule_2CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.16
	public SubToSubRule_3Access getRule_SubToSubRule_3() {
		return new SubToSubRule_3Access();
	}
	
	public class SubToSubRule_3Access extends NeoRuleCoAccess<SubToSubRule_3Data, SubToSubRule_3CoData, SubToSubRule_3Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_3Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_3CoData(d));
		}
		
		@Override
		public SubToSubRule_3Mask mask() {
			return new SubToSubRule_3Mask();
		}
	}
	
	public class SubToSubRule_3Data extends NeoData {
		public SubToSubRule_3Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_3CoData extends NeoData {
		public SubToSubRule_3CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.17
	public SubToSubRule_8Access getRule_SubToSubRule_8() {
		return new SubToSubRule_8Access();
	}
	
	public class SubToSubRule_8Access extends NeoRuleCoAccess<SubToSubRule_8Data, SubToSubRule_8CoData, SubToSubRule_8Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_8Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_8CoData(d));
		}
		
		@Override
		public SubToSubRule_8Mask mask() {
			return new SubToSubRule_8Mask();
		}
	}
	
	public class SubToSubRule_8Data extends NeoData {
		public SubToSubRule_8Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_8CoData extends NeoData {
		public SubToSubRule_8CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.18
	public SubToSubRule_9Access getRule_SubToSubRule_9() {
		return new SubToSubRule_9Access();
	}
	
	public class SubToSubRule_9Access extends NeoRuleCoAccess<SubToSubRule_9Data, SubToSubRule_9CoData, SubToSubRule_9Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_9Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_9CoData(d));
		}
		
		@Override
		public SubToSubRule_9Mask mask() {
			return new SubToSubRule_9Mask();
		}
	}
	
	public class SubToSubRule_9Data extends NeoData {
		public SubToSubRule_9Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_9CoData extends NeoData {
		public SubToSubRule_9CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.19
	public SubToSubRule_10Access getRule_SubToSubRule_10() {
		return new SubToSubRule_10Access();
	}
	
	public class SubToSubRule_10Access extends NeoRuleCoAccess<SubToSubRule_10Data, SubToSubRule_10CoData, SubToSubRule_10Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_10Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_10Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_10CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_10CoData(d));
		}
		
		@Override
		public SubToSubRule_10Mask mask() {
			return new SubToSubRule_10Mask();
		}
	}
	
	public class SubToSubRule_10Data extends NeoData {
		public SubToSubRule_10Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_10CoData extends NeoData {
		public SubToSubRule_10CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_10Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.20
	public SubToSubRule_11Access getRule_SubToSubRule_11() {
		return new SubToSubRule_11Access();
	}
	
	public class SubToSubRule_11Access extends NeoRuleCoAccess<SubToSubRule_11Data, SubToSubRule_11CoData, SubToSubRule_11Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_11Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_11Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_11CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_11CoData(d));
		}
		
		@Override
		public SubToSubRule_11Mask mask() {
			return new SubToSubRule_11Mask();
		}
	}
	
	public class SubToSubRule_11Data extends NeoData {
		public SubToSubRule_11Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_11CoData extends NeoData {
		public SubToSubRule_11CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_11Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.21
	public SubToSubRule_15Access getRule_SubToSubRule_15() {
		return new SubToSubRule_15Access();
	}
	
	public class SubToSubRule_15Access extends NeoRuleCoAccess<SubToSubRule_15Data, SubToSubRule_15CoData, SubToSubRule_15Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_15Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_15Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_15CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_15CoData(d));
		}
		
		@Override
		public SubToSubRule_15Mask mask() {
			return new SubToSubRule_15Mask();
		}
	}
	
	public class SubToSubRule_15Data extends NeoData {
		public SubToSubRule_15Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_15CoData extends NeoData {
		public SubToSubRule_15CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_15Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.22
	public SubToSubRule_24Access getRule_SubToSubRule_24() {
		return new SubToSubRule_24Access();
	}
	
	public class SubToSubRule_24Access extends NeoRuleCoAccess<SubToSubRule_24Data, SubToSubRule_24CoData, SubToSubRule_24Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_24Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_24Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_24CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_24CoData(d));
		}
		
		@Override
		public SubToSubRule_24Mask mask() {
			return new SubToSubRule_24Mask();
		}
	}
	
	public class SubToSubRule_24Data extends NeoData {
		public SubToSubRule_24Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_24CoData extends NeoData {
		public SubToSubRule_24CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_24Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.23
	public SubToSubRule_25Access getRule_SubToSubRule_25() {
		return new SubToSubRule_25Access();
	}
	
	public class SubToSubRule_25Access extends NeoRuleCoAccess<SubToSubRule_25Data, SubToSubRule_25CoData, SubToSubRule_25Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_25Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_25CoData(d));
		}
		
		@Override
		public SubToSubRule_25Mask mask() {
			return new SubToSubRule_25Mask();
		}
	}
	
	public class SubToSubRule_25Data extends NeoData {
		public SubToSubRule_25Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_25CoData extends NeoData {
		public SubToSubRule_25CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.24
	public SubToSubRule_26Access getRule_SubToSubRule_26() {
		return new SubToSubRule_26Access();
	}
	
	public class SubToSubRule_26Access extends NeoRuleCoAccess<SubToSubRule_26Data, SubToSubRule_26CoData, SubToSubRule_26Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_26Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_26Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_26CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_26CoData(d));
		}
		
		@Override
		public SubToSubRule_26Mask mask() {
			return new SubToSubRule_26Mask();
		}
	}
	
	public class SubToSubRule_26Data extends NeoData {
		public SubToSubRule_26Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_26CoData extends NeoData {
		public SubToSubRule_26CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_26Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.25
	public SubToSubRule_27Access getRule_SubToSubRule_27() {
		return new SubToSubRule_27Access();
	}
	
	public class SubToSubRule_27Access extends NeoRuleCoAccess<SubToSubRule_27Data, SubToSubRule_27CoData, SubToSubRule_27Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_27Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_27Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_27CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_27CoData(d));
		}
		
		@Override
		public SubToSubRule_27Mask mask() {
			return new SubToSubRule_27Mask();
		}
	}
	
	public class SubToSubRule_27Data extends NeoData {
		public SubToSubRule_27Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_27CoData extends NeoData {
		public SubToSubRule_27CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_27Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.26
	public SubToSubRule_31Access getRule_SubToSubRule_31() {
		return new SubToSubRule_31Access();
	}
	
	public class SubToSubRule_31Access extends NeoRuleCoAccess<SubToSubRule_31Data, SubToSubRule_31CoData, SubToSubRule_31Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_31Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_31Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_31CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_31CoData(d));
		}
		
		@Override
		public SubToSubRule_31Mask mask() {
			return new SubToSubRule_31Mask();
		}
	}
	
	public class SubToSubRule_31Data extends NeoData {
		public SubToSubRule_31Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_31CoData extends NeoData {
		public SubToSubRule_31CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_31Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.27
	public SubToSubRule_32Access getRule_SubToSubRule_32() {
		return new SubToSubRule_32Access();
	}
	
	public class SubToSubRule_32Access extends NeoRuleCoAccess<SubToSubRule_32Data, SubToSubRule_32CoData, SubToSubRule_32Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_32Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_32Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_32CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_32CoData(d));
		}
		
		@Override
		public SubToSubRule_32Mask mask() {
			return new SubToSubRule_32Mask();
		}
	}
	
	public class SubToSubRule_32Data extends NeoData {
		public SubToSubRule_32Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_32CoData extends NeoData {
		public SubToSubRule_32CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_32Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.28
	public SubToSubRule_33Access getRule_SubToSubRule_33() {
		return new SubToSubRule_33Access();
	}
	
	public class SubToSubRule_33Access extends NeoRuleCoAccess<SubToSubRule_33Data, SubToSubRule_33CoData, SubToSubRule_33Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_33Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_33Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_33CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_33CoData(d));
		}
		
		@Override
		public SubToSubRule_33Mask mask() {
			return new SubToSubRule_33Mask();
		}
	}
	
	public class SubToSubRule_33Data extends NeoData {
		public SubToSubRule_33Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_33CoData extends NeoData {
		public SubToSubRule_33CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_33Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/tgg-gen/tgg/JavaToDoc_MI.msl#//@entities.29
	public SubToSubRule_97Access getRule_SubToSubRule_97() {
		return new SubToSubRule_97Access();
	}
	
	public class SubToSubRule_97Access extends NeoRuleCoAccess<SubToSubRule_97Data, SubToSubRule_97CoData, SubToSubRule_97Mask> {
		public final String _p = "p";
		public final String _subP = "subP";
		public final String _f = "f";
		public final String _subF = "subF";
		public final String _doc = "doc";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubToSubRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_97Data(d));
		}
			
		@Override
		public Stream<SubToSubRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubToSubRule_97CoData(d));
		}
		
		@Override
		public SubToSubRule_97Mask mask() {
			return new SubToSubRule_97Mask();
		}
	}
	
	public class SubToSubRule_97Data extends NeoData {
		public SubToSubRule_97Data(Record data) {
		
		}
	}
	
	public class SubToSubRule_97CoData extends NeoData {
		public SubToSubRule_97CoData(Record data) {
		
		}
	}
	
	public class SubToSubRule_97Mask extends NeoMask {
	}
}
