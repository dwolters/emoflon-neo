/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.src.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_package_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_package_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_package_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_package_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForPackage_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_Static().rule());
		rules.add(getRule_Static_1().rule());
		rules.add(getRule_Static_8().rule());
		rules.add(getRule_Static_9().rule());
		rules.add(getRule_Static_10().rule());
		rules.add(getRule_Static_11().rule());
		rules.add(getRule_Static_12().rule());
		rules.add(getRule_Static_13().rule());
		rules.add(getRule_Static_14().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForPackage_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForPackage_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.1
	public StaticAccess getRule_Static() {
		return new StaticAccess();
	}
	
	public class StaticAccess extends NeoRuleCoAccess<StaticData, StaticCoData, StaticMask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<StaticData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new StaticData(d));
		}
			
		@Override
		public Stream<StaticCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new StaticCoData(d));
		}
		
		@Override
		public StaticMask mask() {
			return new StaticMask();
		}
	}
	
	public class StaticData extends NeoData {
		public StaticData(Record data) {
		
		}
	}
	
	public class StaticCoData extends NeoData {
		public StaticCoData(Record data) {
		
		}
	}
	
	public class StaticMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.2
	public Static_1Access getRule_Static_1() {
		return new Static_1Access();
	}
	
	public class Static_1Access extends NeoRuleCoAccess<Static_1Data, Static_1CoData, Static_1Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_1Data(d));
		}
			
		@Override
		public Stream<Static_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_1CoData(d));
		}
		
		@Override
		public Static_1Mask mask() {
			return new Static_1Mask();
		}
	}
	
	public class Static_1Data extends NeoData {
		public Static_1Data(Record data) {
		
		}
	}
	
	public class Static_1CoData extends NeoData {
		public Static_1CoData(Record data) {
		
		}
	}
	
	public class Static_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.3
	public Static_8Access getRule_Static_8() {
		return new Static_8Access();
	}
	
	public class Static_8Access extends NeoRuleCoAccess<Static_8Data, Static_8CoData, Static_8Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_8Data(d));
		}
			
		@Override
		public Stream<Static_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_8CoData(d));
		}
		
		@Override
		public Static_8Mask mask() {
			return new Static_8Mask();
		}
	}
	
	public class Static_8Data extends NeoData {
		public Static_8Data(Record data) {
		
		}
	}
	
	public class Static_8CoData extends NeoData {
		public Static_8CoData(Record data) {
		
		}
	}
	
	public class Static_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.4
	public Static_9Access getRule_Static_9() {
		return new Static_9Access();
	}
	
	public class Static_9Access extends NeoRuleCoAccess<Static_9Data, Static_9CoData, Static_9Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_9Data(d));
		}
			
		@Override
		public Stream<Static_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_9CoData(d));
		}
		
		@Override
		public Static_9Mask mask() {
			return new Static_9Mask();
		}
	}
	
	public class Static_9Data extends NeoData {
		public Static_9Data(Record data) {
		
		}
	}
	
	public class Static_9CoData extends NeoData {
		public Static_9CoData(Record data) {
		
		}
	}
	
	public class Static_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.5
	public Static_10Access getRule_Static_10() {
		return new Static_10Access();
	}
	
	public class Static_10Access extends NeoRuleCoAccess<Static_10Data, Static_10CoData, Static_10Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_10Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_10Data(d));
		}
			
		@Override
		public Stream<Static_10CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_10CoData(d));
		}
		
		@Override
		public Static_10Mask mask() {
			return new Static_10Mask();
		}
	}
	
	public class Static_10Data extends NeoData {
		public Static_10Data(Record data) {
		
		}
	}
	
	public class Static_10CoData extends NeoData {
		public Static_10CoData(Record data) {
		
		}
	}
	
	public class Static_10Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.6
	public Static_11Access getRule_Static_11() {
		return new Static_11Access();
	}
	
	public class Static_11Access extends NeoRuleCoAccess<Static_11Data, Static_11CoData, Static_11Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_11Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_11Data(d));
		}
			
		@Override
		public Stream<Static_11CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_11CoData(d));
		}
		
		@Override
		public Static_11Mask mask() {
			return new Static_11Mask();
		}
	}
	
	public class Static_11Data extends NeoData {
		public Static_11Data(Record data) {
		
		}
	}
	
	public class Static_11CoData extends NeoData {
		public Static_11CoData(Record data) {
		
		}
	}
	
	public class Static_11Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.7
	public Static_12Access getRule_Static_12() {
		return new Static_12Access();
	}
	
	public class Static_12Access extends NeoRuleCoAccess<Static_12Data, Static_12CoData, Static_12Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_12Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_12Data(d));
		}
			
		@Override
		public Stream<Static_12CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_12CoData(d));
		}
		
		@Override
		public Static_12Mask mask() {
			return new Static_12Mask();
		}
	}
	
	public class Static_12Data extends NeoData {
		public Static_12Data(Record data) {
		
		}
	}
	
	public class Static_12CoData extends NeoData {
		public Static_12CoData(Record data) {
		
		}
	}
	
	public class Static_12Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.8
	public Static_13Access getRule_Static_13() {
		return new Static_13Access();
	}
	
	public class Static_13Access extends NeoRuleCoAccess<Static_13Data, Static_13CoData, Static_13Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_13Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_13Data(d));
		}
			
		@Override
		public Stream<Static_13CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_13CoData(d));
		}
		
		@Override
		public Static_13Mask mask() {
			return new Static_13Mask();
		}
	}
	
	public class Static_13Data extends NeoData {
		public Static_13Data(Record data) {
		
		}
	}
	
	public class Static_13CoData extends NeoData {
		public Static_13CoData(Record data) {
		
		}
	}
	
	public class Static_13Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/src/tgg/package_MI.msl#//@entities.9
	public Static_14Access getRule_Static_14() {
		return new Static_14Access();
	}
	
	public class Static_14Access extends NeoRuleCoAccess<Static_14Data, Static_14CoData, Static_14Mask> {
		public final String _this = "this";
		public final String _try = "try";
		public final String _interface = "interface";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Static_14Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_14Data(d));
		}
			
		@Override
		public Stream<Static_14CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Static_14CoData(d));
		}
		
		@Override
		public Static_14Mask mask() {
			return new Static_14Mask();
		}
	}
	
	public class Static_14Data extends NeoData {
		public Static_14Data(Record data) {
		
		}
	}
	
	public class Static_14CoData extends NeoData {
		public Static_14CoData(Record data) {
		
		}
	}
	
	public class Static_14Mask extends NeoMask {
	}
}
