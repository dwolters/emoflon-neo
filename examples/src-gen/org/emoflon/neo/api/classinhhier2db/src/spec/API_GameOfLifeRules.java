/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.src.spec;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_GameOfLifeRules {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_GameOfLifeRules(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_GameOfLifeRules(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_GameOfLifeRules(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.0
	public Metamodel getMetamodel_GameOfLife(){
		return (Metamodel) spec.getEntities().get(0);
	}
	
	public static final String GameOfLife__Cell = "GameOfLife__Cell";
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.1
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.2
	public DieDueToUnderpopulationAccess getRule_DieDueToUnderpopulation() {
		return new DieDueToUnderpopulationAccess();
	}
	
	public class DieDueToUnderpopulationAccess extends NeoRuleCoAccess<DieDueToUnderpopulationData, DieDueToUnderpopulationCoData, DieDueToUnderpopulationMask> {
		public final String _c = "c";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DieDueToUnderpopulationData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DieDueToUnderpopulationData(d));
		}
			
		@Override
		public Stream<DieDueToUnderpopulationCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DieDueToUnderpopulationCoData(d));
		}
		
		@Override
		public DieDueToUnderpopulationMask mask() {
			return new DieDueToUnderpopulationMask();
		}
	}
	
	public class DieDueToUnderpopulationData extends NeoData {
		public DieDueToUnderpopulationData(Record data) {
		
		}
	}
	
	public class DieDueToUnderpopulationCoData extends NeoData {
		public DieDueToUnderpopulationCoData(Record data) {
		
		}
	}
	
	public class DieDueToUnderpopulationMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.3
	public DieDueToOverpopulationAccess getRule_DieDueToOverpopulation() {
		return new DieDueToOverpopulationAccess();
	}
	
	public class DieDueToOverpopulationAccess extends NeoRuleCoAccess<DieDueToOverpopulationData, DieDueToOverpopulationCoData, DieDueToOverpopulationMask> {
		public final String _c = "c";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DieDueToOverpopulationData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DieDueToOverpopulationData(d));
		}
			
		@Override
		public Stream<DieDueToOverpopulationCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DieDueToOverpopulationCoData(d));
		}
		
		@Override
		public DieDueToOverpopulationMask mask() {
			return new DieDueToOverpopulationMask();
		}
	}
	
	public class DieDueToOverpopulationData extends NeoData {
		public DieDueToOverpopulationData(Record data) {
		
		}
	}
	
	public class DieDueToOverpopulationCoData extends NeoData {
		public DieDueToOverpopulationCoData(Record data) {
		
		}
	}
	
	public class DieDueToOverpopulationMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.4
	public ReproduceAccess getRule_Reproduce() {
		return new ReproduceAccess();
	}
	
	public class ReproduceAccess extends NeoRuleCoAccess<ReproduceData, ReproduceCoData, ReproduceMask> {
		public final String _c = "c";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ReproduceData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ReproduceData(d));
		}
			
		@Override
		public Stream<ReproduceCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ReproduceCoData(d));
		}
		
		@Override
		public ReproduceMask mask() {
			return new ReproduceMask();
		}
	}
	
	public class ReproduceData extends NeoData {
		public ReproduceData(Record data) {
		
		}
	}
	
	public class ReproduceCoData extends NeoData {
		public ReproduceCoData(Record data) {
		
		}
	}
	
	public class ReproduceMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.5
	public IConstraint getConstraint_ExactlyThreeNeighboursAlive() {
		var c = (Constraint) spec.getEntities().get(5);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.6
	public IConstraint getConstraint_AtLeastThreeNeighboursAlive() {
		var c = (Constraint) spec.getEntities().get(6);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.7
	public IConstraint getConstraint_NoMoreThanThreeNeighboursAlive() {
		var c = (Constraint) spec.getEntities().get(7);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.8
	public FourNeighboursAliveAccess getPattern_FourNeighboursAlive() {
		return new FourNeighboursAliveAccess();
	}
	
	public class FourNeighboursAliveAccess extends NeoPatternAccess<FourNeighboursAliveData, FourNeighboursAliveMask> {
		public final String _c = "c";
		public final String _n1 = "n1";
		public final String _n2 = "n2";
		public final String _n3 = "n3";
		public final String _n4 = "n4";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FourNeighboursAliveData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FourNeighboursAliveData(d));
		}
		
		@Override
		public FourNeighboursAliveMask mask() {
			return new FourNeighboursAliveMask();
		}
	}
	
	public class FourNeighboursAliveData extends NeoData {
		public FourNeighboursAliveData(Record data) {
			
		}
	}
	
	public class FourNeighboursAliveMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.9
	public ThreeNeighboursAliveAccess getPattern_ThreeNeighboursAlive() {
		return new ThreeNeighboursAliveAccess();
	}
	
	public class ThreeNeighboursAliveAccess extends NeoPatternAccess<ThreeNeighboursAliveData, ThreeNeighboursAliveMask> {
		public final String _c = "c";
		public final String _n1 = "n1";
		public final String _n2 = "n2";
		public final String _n3 = "n3";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(9);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ThreeNeighboursAliveData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ThreeNeighboursAliveData(d));
		}
		
		@Override
		public ThreeNeighboursAliveMask mask() {
			return new ThreeNeighboursAliveMask();
		}
	}
	
	public class ThreeNeighboursAliveData extends NeoData {
		public ThreeNeighboursAliveData(Record data) {
			
		}
	}
	
	public class ThreeNeighboursAliveMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.10
	public TwoNeighboursAliveAccess getPattern_TwoNeighboursAlive() {
		return new TwoNeighboursAliveAccess();
	}
	
	public class TwoNeighboursAliveAccess extends NeoPatternAccess<TwoNeighboursAliveData, TwoNeighboursAliveMask> {
		public final String _c = "c";
		public final String _n1 = "n1";
		public final String _n2 = "n2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(10);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoNeighboursAliveData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoNeighboursAliveData(d));
		}
		
		@Override
		public TwoNeighboursAliveMask mask() {
			return new TwoNeighboursAliveMask();
		}
	}
	
	public class TwoNeighboursAliveData extends NeoData {
		public TwoNeighboursAliveData(Record data) {
			
		}
	}
	
	public class TwoNeighboursAliveMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/GameOfLife/src/spec/GameOfLifeRules.msl#//@entities.11
	public OneNeighbourAliveAccess getPattern_OneNeighbourAlive() {
		return new OneNeighbourAliveAccess();
	}
	
	public class OneNeighbourAliveAccess extends NeoPatternAccess<OneNeighbourAliveData, OneNeighbourAliveMask> {
		public final String _c = "c";
		public final String _n1 = "n1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(11);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneNeighbourAliveData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneNeighbourAliveData(d));
		}
		
		@Override
		public OneNeighbourAliveMask mask() {
			return new OneNeighbourAliveMask();
		}
	}
	
	public class OneNeighbourAliveData extends NeoData {
		public OneNeighbourAliveData(Record data) {
			
		}
	}
	
	public class OneNeighbourAliveMask extends NeoMask {
	}
}
