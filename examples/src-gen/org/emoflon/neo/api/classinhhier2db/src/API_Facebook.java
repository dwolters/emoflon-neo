/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.src;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_Facebook {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_Facebook(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_Facebook(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_Facebook(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.0
	public Metamodel getMetamodel_FacebookLanguage(){
		return (Metamodel) spec.getEntities().get(0);
	}
	
	public static final String FacebookLanguage__Network = "FacebookLanguage__Network";
	public static final String FacebookLanguage__Friendship = "FacebookLanguage__Friendship";
	public static final String FacebookLanguage__User = "FacebookLanguage__User";
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.1
	public IConstraint getConstraint_NoDoubleFaceBookUsers() {
		var c = (Constraint) spec.getEntities().get(1);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.2
	public DoubleFaceBookUsersAccess getPattern_DoubleFaceBookUsers() {
		return new DoubleFaceBookUsersAccess();
	}
	
	public class DoubleFaceBookUsersAccess extends NeoPatternAccess<DoubleFaceBookUsersData, DoubleFaceBookUsersMask> {
		public final String _n = "n";
		public final String _u = "u";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<DoubleFaceBookUsersData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DoubleFaceBookUsersData(d));
		}
		
		@Override
		public DoubleFaceBookUsersMask mask() {
			return new DoubleFaceBookUsersMask();
		}
	}
	
	public class DoubleFaceBookUsersData extends NeoData {
		public DoubleFaceBookUsersData(Record data) {
			
		}
	}
	
	public class DoubleFaceBookUsersMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.3
	public IConstraint getConstraint_NoDoubleFriendship() {
		var c = (Constraint) spec.getEntities().get(3);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.4
	public DoubleFriendshipAccess getPattern_DoubleFriendship() {
		return new DoubleFriendshipAccess();
	}
	
	public class DoubleFriendshipAccess extends NeoPatternAccess<DoubleFriendshipData, DoubleFriendshipMask> {
		public final String _n = "n";
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		public final String _u1 = "u1";
		public final String _u2 = "u2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(4);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<DoubleFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DoubleFriendshipData(d));
		}
		
		@Override
		public DoubleFriendshipMask mask() {
			return new DoubleFriendshipMask();
		}
	}
	
	public class DoubleFriendshipData extends NeoData {
		public DoubleFriendshipData(Record data) {
			
		}
	}
	
	public class DoubleFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.5
	public IConstraint getConstraint_NoInterFriendship() {
		var c = (Constraint) spec.getEntities().get(5);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.6
	public InterFriendshipAccess getPattern_InterFriendship() {
		return new InterFriendshipAccess();
	}
	
	public class InterFriendshipAccess extends NeoPatternAccess<InterFriendshipData, InterFriendshipMask> {
		public final String _n1 = "n1";
		public final String _n2 = "n2";
		public final String _f1 = "f1";
		public final String _u1 = "u1";
		public final String _u2 = "u2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(6);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<InterFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new InterFriendshipData(d));
		}
		
		@Override
		public InterFriendshipMask mask() {
			return new InterFriendshipMask();
		}
	}
	
	public class InterFriendshipData extends NeoData {
		public InterFriendshipData(Record data) {
			
		}
	}
	
	public class InterFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.7
	public IConstraint getConstraint_NoDoubleParents() {
		var c = (Constraint) spec.getEntities().get(7);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.8
	public DoubleParentsAccess getPattern_DoubleParents() {
		return new DoubleParentsAccess();
	}
	
	public class DoubleParentsAccess extends NeoPatternAccess<DoubleParentsData, DoubleParentsMask> {
		public final String _u1 = "u1";
		public final String _u2 = "u2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<DoubleParentsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DoubleParentsData(d));
		}
		
		@Override
		public DoubleParentsMask mask() {
			return new DoubleParentsMask();
		}
	}
	
	public class DoubleParentsData extends NeoData {
		public DoubleParentsData(Record data) {
			
		}
	}
	
	public class DoubleParentsMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.9
	public IConstraint getConstraint_NoDoubleSibling() {
		var c = (Constraint) spec.getEntities().get(9);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.10
	public DoubleSiblingAccess getPattern_DoubleSibling() {
		return new DoubleSiblingAccess();
	}
	
	public class DoubleSiblingAccess extends NeoPatternAccess<DoubleSiblingData, DoubleSiblingMask> {
		public final String _u1 = "u1";
		public final String _u2 = "u2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(10);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<DoubleSiblingData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DoubleSiblingData(d));
		}
		
		@Override
		public DoubleSiblingMask mask() {
			return new DoubleSiblingMask();
		}
	}
	
	public class DoubleSiblingData extends NeoData {
		public DoubleSiblingData(Record data) {
			
		}
	}
	
	public class DoubleSiblingMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.11
	public IConstraint getConstraint_NoDoubleSpouses() {
		var c = (Constraint) spec.getEntities().get(11);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/src/Facebook.msl#//@entities.12
	public DoubleSpousesAccess getPattern_DoubleSpouses() {
		return new DoubleSpousesAccess();
	}
	
	public class DoubleSpousesAccess extends NeoPatternAccess<DoubleSpousesData, DoubleSpousesMask> {
		public final String _u1 = "u1";
		public final String _u2 = "u2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(12);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<DoubleSpousesData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DoubleSpousesData(d));
		}
		
		@Override
		public DoubleSpousesMask mask() {
			return new DoubleSpousesMask();
		}
	}
	
	public class DoubleSpousesData extends NeoData {
		public DoubleSpousesData(Record data) {
			
		}
	}
	
	public class DoubleSpousesMask extends NeoMask {
	}
}
