/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_Schema {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_Schema(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_Schema(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_Schema(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.0
	public void exportMetamodelsForFamiliesToPersons_Constrained() throws FlattenerException {
		{
			var api = new org.emoflon.neo.api.familiestopersons_constrained.API_Metamodels(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
			builder.exportEMSLEntityToNeo4j(api.getMetamodel_Families());
		}
		{
			var api = new org.emoflon.neo.api.familiestopersons_constrained.API_Metamodels(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
			builder.exportEMSLEntityToNeo4j(api.getMetamodel_Persons());
		}
	}
	
	public Collection<TripleRule> getTripleRulesOfFamiliesToPersons_Constrained(){
		var rules = new HashSet<TripleRule>();
		var rs = spec.eResource().getResourceSet();
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/Families2Persons.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/MotherToFemale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/MotherOfExistingFamilyToFemale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/FatherToMale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/FatherOfExistingFamilyToMale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/DaughterToFemale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/DaughterOfExistingFamilyToFemale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/SonToMale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/FamiliesToPersons_Constrained/src/SonOfExistingFamilyToMale.msl#//@entities.0";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		return rules;
	}
	
	public Collection<IConstraint> getConstraintsOfFamiliesToPersons_Constrained(){
		var constraints = new HashSet<IConstraint>();
		var rs = spec.eResource().getResourceSet();
		{
			var uri = "platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.3";
			var c = (Constraint) rs.getEObject(URI.createURI(uri), true);
			constraints.add(NeoConstraintFactory.createNeoConstraint(c, builder));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.6";
			var c = (Constraint) rs.getEObject(URI.createURI(uri), true);
			constraints.add(NeoConstraintFactory.createNeoConstraint(c, builder));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.8";
			var c = (Constraint) rs.getEObject(URI.createURI(uri), true);
			constraints.add(NeoConstraintFactory.createNeoConstraint(c, builder));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.10";
			var c = (Constraint) rs.getEObject(URI.createURI(uri), true);
			constraints.add(NeoConstraintFactory.createNeoConstraint(c, builder));
		}
		return constraints;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.1
	public PremisePatternAccess getPattern_PremisePattern() {
		return new PremisePatternAccess();
	}
	
	public class PremisePatternAccess extends NeoPatternAccess<PremisePatternData, PremisePatternMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm1 = "fm1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(1);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<PremisePatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PremisePatternData(d));
		}
		
		@Override
		public PremisePatternMask mask() {
			return new PremisePatternMask();
		}
	}
	
	public class PremisePatternData extends NeoData {
		public PremisePatternData(Record data) {
			
		}
	}
	
	public class PremisePatternMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.2
	public ConclusionPatternAccess getPattern_ConclusionPattern() {
		return new ConclusionPatternAccess();
	}
	
	public class ConclusionPatternAccess extends NeoPatternAccess<ConclusionPatternData, ConclusionPatternMask> {
		public final String _f = "f";
		public final String _fm2 = "fm2";
		public final String _fm1 = "fm1";
		public final String _fr = "fr";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ConclusionPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ConclusionPatternData(d));
		}
		
		@Override
		public ConclusionPatternMask mask() {
			return new ConclusionPatternMask();
		}
	}
	
	public class ConclusionPatternData extends NeoData {
		public ConclusionPatternData(Record data) {
			
		}
	}
	
	public class ConclusionPatternMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.3
	public IConstraint getConstraint_FatherSonMale() {
		var c = (Constraint) spec.getEntities().get(3);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.4
	public FamilyMemberAccess getPattern_FamilyMember() {
		return new FamilyMemberAccess();
	}
	
	public class FamilyMemberAccess extends NeoPatternAccess<FamilyMemberData, FamilyMemberMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(4);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FamilyMemberData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FamilyMemberData(d));
		}
		
		@Override
		public FamilyMemberMask mask() {
			return new FamilyMemberMask();
		}
	}
	
	public class FamilyMemberData extends NeoData {
		public FamilyMemberData(Record data) {
			
		}
	}
	
	public class FamilyMemberMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.5
	public MotherFatherFamilyMemberAccess getPattern_MotherFatherFamilyMember() {
		return new MotherFatherFamilyMemberAccess();
	}
	
	public class MotherFatherFamilyMemberAccess extends NeoPatternAccess<MotherFatherFamilyMemberData, MotherFatherFamilyMemberMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _fm1 = "fm1";
		public final String _fr = "fr";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(5);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<MotherFatherFamilyMemberData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherFatherFamilyMemberData(d));
		}
		
		@Override
		public MotherFatherFamilyMemberMask mask() {
			return new MotherFatherFamilyMemberMask();
		}
	}
	
	public class MotherFatherFamilyMemberData extends NeoData {
		public MotherFatherFamilyMemberData(Record data) {
			
		}
	}
	
	public class MotherFatherFamilyMemberMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.6
	public IConstraint getConstraint_FatherMotherFamilyMember() {
		var c = (Constraint) spec.getEntities().get(6);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.7
	public No2FatherConstraintAccess getPattern_No2FatherConstraint() {
		return new No2FatherConstraintAccess();
	}
	
	public class No2FatherConstraintAccess extends NeoPatternAccess<No2FatherConstraintData, No2FatherConstraintMask> {
		public final String _fr = "fr";
		public final String _fm = "fm";
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(7);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<No2FatherConstraintData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new No2FatherConstraintData(d));
		}
		
		@Override
		public No2FatherConstraintMask mask() {
			return new No2FatherConstraintMask();
		}
	}
	
	public class No2FatherConstraintData extends NeoData {
		public No2FatherConstraintData(Record data) {
			
		}
	}
	
	public class No2FatherConstraintMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.8
	public IConstraint getConstraint_No2Father() {
		var c = (Constraint) spec.getEntities().get(8);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.9
	public No2MotherConstraintAccess getPattern_No2MotherConstraint() {
		return new No2MotherConstraintAccess();
	}
	
	public class No2MotherConstraintAccess extends NeoPatternAccess<No2MotherConstraintData, No2MotherConstraintMask> {
		public final String _fr = "fr";
		public final String _fm = "fm";
		public final String _m1 = "m1";
		public final String _m2 = "m2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(9);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<No2MotherConstraintData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new No2MotherConstraintData(d));
		}
		
		@Override
		public No2MotherConstraintMask mask() {
			return new No2MotherConstraintMask();
		}
	}
	
	public class No2MotherConstraintData extends NeoData {
		public No2MotherConstraintData(Record data) {
			
		}
	}
	
	public class No2MotherConstraintMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/Schema.msl#//@entities.10
	public IConstraint getConstraint_No2Mother() {
		var c = (Constraint) spec.getEntities().get(10);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
}
