/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_QuiltographyQueries {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_QuiltographyQueries(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_QuiltographyQueries(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_QuiltographyQueries(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.0
	public AllBooksOfAParticularAuthorAccess getPattern_AllBooksOfAParticularAuthor() {
		return new AllBooksOfAParticularAuthorAccess();
	}
	
	public class AllBooksOfAParticularAuthorAccess extends NeoPatternAccess<AllBooksOfAParticularAuthorData, AllBooksOfAParticularAuthorMask> {
		public final String _someAuthor = "someAuthor";
		public final String _book = "book";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(0);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllBooksOfAParticularAuthorData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllBooksOfAParticularAuthorData(d));
		}
		
		@Override
		public AllBooksOfAParticularAuthorMask mask() {
			return new AllBooksOfAParticularAuthorMask();
		}
	}
	
	public class AllBooksOfAParticularAuthorData extends NeoData {
		public final SomeAuthorNode _someAuthor;
		public final BookNode _book;
		public final Book_authors_0_someAuthorRel _book_authors_0_someAuthor;
		
		public AllBooksOfAParticularAuthorData(Record data) {
			var _someAuthor = data.get("someAuthor");
			this._someAuthor = new SomeAuthorNode(_someAuthor);
			var _book = data.get("book");
			this._book = new BookNode(_book);
			var _book_authors_0_someAuthor = data.get("book_authors_0_someAuthor");
			this._book_authors_0_someAuthor = new Book_authors_0_someAuthorRel(_book_authors_0_someAuthor);
		}
		
		
		public class SomeAuthorNode {
			public String _name;
			public String _surname;
			public String _ename;
			
			public SomeAuthorNode(Value _someAuthor) {
				if(!_someAuthor.get("name").isNull())
					this._name = _someAuthor.get("name").asString();
				if(!_someAuthor.get("surname").isNull())
					this._surname = _someAuthor.get("surname").asString();
				if(!_someAuthor.get("ename").isNull())
					this._ename = _someAuthor.get("ename").asString();
			}
		}
		
		public class BookNode {
			public String _title;
			public String _ename;
			
			public BookNode(Value _book) {
				if(!_book.get("title").isNull())
					this._title = _book.get("title").asString();
				if(!_book.get("ename").isNull())
					this._ename = _book.get("ename").asString();
			}
		}
		
		public class Book_authors_0_someAuthorRel {
		
			public Book_authors_0_someAuthorRel(Value _book_authors_0_someAuthor) {
			}
		}
	}
	
	public class AllBooksOfAParticularAuthorMask extends NeoMask {
		public AllBooksOfAParticularAuthorMask setSomeAuthor(Long value) {
			nodeMask.put("someAuthor", value);
			return this;
		}
		public AllBooksOfAParticularAuthorMask setSomeAuthorName(String value) {
			attributeMask.put("someAuthor.name", value);
			return this;
		}
		public AllBooksOfAParticularAuthorMask setSomeAuthorSurname(String value) {
			attributeMask.put("someAuthor.surname", value);
			return this;
		}
		public AllBooksOfAParticularAuthorMask setSomeAuthorEname(String value) {
			attributeMask.put("someAuthor.ename", value);
			return this;
		}
		public AllBooksOfAParticularAuthorMask setBook(Long value) {
			nodeMask.put("book", value);
			return this;
		}
		public AllBooksOfAParticularAuthorMask setBookTitle(String value) {
			attributeMask.put("book.title", value);
			return this;
		}
		public AllBooksOfAParticularAuthorMask setBookEname(String value) {
			attributeMask.put("book.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.1
	public AllBooksWithAParticularClassificationAccess getPattern_AllBooksWithAParticularClassification() {
		return new AllBooksWithAParticularClassificationAccess();
	}
	
	public class AllBooksWithAParticularClassificationAccess extends NeoPatternAccess<AllBooksWithAParticularClassificationData, AllBooksWithAParticularClassificationMask> {
		public final String _classification = "classification";
		public final String _book = "book";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(1);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllBooksWithAParticularClassificationData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllBooksWithAParticularClassificationData(d));
		}
		
		@Override
		public AllBooksWithAParticularClassificationMask mask() {
			return new AllBooksWithAParticularClassificationMask();
		}
	}
	
	public class AllBooksWithAParticularClassificationData extends NeoData {
		public final ClassificationNode _classification;
		public final BookNode _book;
		public final Book_classification_0_classificationRel _book_classification_0_classification;
		
		public AllBooksWithAParticularClassificationData(Record data) {
			var _classification = data.get("classification");
			this._classification = new ClassificationNode(_classification);
			var _book = data.get("book");
			this._book = new BookNode(_book);
			var _book_classification_0_classification = data.get("book_classification_0_classification");
			this._book_classification_0_classification = new Book_classification_0_classificationRel(_book_classification_0_classification);
		}
		
		
		public class ClassificationNode {
			public String _name;
			public String _ename;
			
			public ClassificationNode(Value _classification) {
				if(!_classification.get("name").isNull())
					this._name = _classification.get("name").asString();
				if(!_classification.get("ename").isNull())
					this._ename = _classification.get("ename").asString();
			}
		}
		
		public class BookNode {
			public String _title;
			public String _ename;
			
			public BookNode(Value _book) {
				if(!_book.get("title").isNull())
					this._title = _book.get("title").asString();
				if(!_book.get("ename").isNull())
					this._ename = _book.get("ename").asString();
			}
		}
		
		public class Book_classification_0_classificationRel {
		
			public Book_classification_0_classificationRel(Value _book_classification_0_classification) {
			}
		}
	}
	
	public class AllBooksWithAParticularClassificationMask extends NeoMask {
		public AllBooksWithAParticularClassificationMask setClassification(Long value) {
			nodeMask.put("classification", value);
			return this;
		}
		public AllBooksWithAParticularClassificationMask setClassificationName(String value) {
			attributeMask.put("classification.name", value);
			return this;
		}
		public AllBooksWithAParticularClassificationMask setClassificationEname(String value) {
			attributeMask.put("classification.ename", value);
			return this;
		}
		public AllBooksWithAParticularClassificationMask setBook(Long value) {
			nodeMask.put("book", value);
			return this;
		}
		public AllBooksWithAParticularClassificationMask setBookTitle(String value) {
			attributeMask.put("book.title", value);
			return this;
		}
		public AllBooksWithAParticularClassificationMask setBookEname(String value) {
			attributeMask.put("book.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.2
	public AllPagesOfAParticularBookAccess getPattern_AllPagesOfAParticularBook() {
		return new AllPagesOfAParticularBookAccess();
	}
	
	public class AllPagesOfAParticularBookAccess extends NeoPatternAccess<AllPagesOfAParticularBookData, AllPagesOfAParticularBookMask> {
		public final String _book = "book";
		public final String _page = "page";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesOfAParticularBookData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesOfAParticularBookData(d));
		}
		
		@Override
		public AllPagesOfAParticularBookMask mask() {
			return new AllPagesOfAParticularBookMask();
		}
	}
	
	public class AllPagesOfAParticularBookData extends NeoData {
		public final BookNode _book;
		public final PageNode _page;
		public final Page_book_0_bookRel _page_book_0_book;
		
		public AllPagesOfAParticularBookData(Record data) {
			var _book = data.get("book");
			this._book = new BookNode(_book);
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_book_0_book = data.get("page_book_0_book");
			this._page_book_0_book = new Page_book_0_bookRel(_page_book_0_book);
		}
		
		
		public class BookNode {
			public String _title;
			public String _ename;
			
			public BookNode(Value _book) {
				if(!_book.get("title").isNull())
					this._title = _book.get("title").asString();
				if(!_book.get("ename").isNull())
					this._ename = _book.get("ename").asString();
			}
		}
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_book_0_bookRel {
		
			public Page_book_0_bookRel(Value _page_book_0_book) {
			}
		}
	}
	
	public class AllPagesOfAParticularBookMask extends NeoMask {
		public AllPagesOfAParticularBookMask setBook(Long value) {
			nodeMask.put("book", value);
			return this;
		}
		public AllPagesOfAParticularBookMask setBookTitle(String value) {
			attributeMask.put("book.title", value);
			return this;
		}
		public AllPagesOfAParticularBookMask setBookEname(String value) {
			attributeMask.put("book.ename", value);
			return this;
		}
		public AllPagesOfAParticularBookMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesOfAParticularBookMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesOfAParticularBookMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesOfAParticularBookMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.3
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.4
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.5
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.6
	public AllPagesOnQuiltsWithACertainPatternAccess getPattern_AllPagesOnQuiltsWithACertainPattern() {
		return new AllPagesOnQuiltsWithACertainPatternAccess();
	}
	
	public class AllPagesOnQuiltsWithACertainPatternAccess extends NeoPatternAccess<AllPagesOnQuiltsWithACertainPatternData, AllPagesOnQuiltsWithACertainPatternMask> {
		public final String _pat = "pat";
		public final String _page = "page";
		public final String _type = "type";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(6);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesOnQuiltsWithACertainPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesOnQuiltsWithACertainPatternData(d));
		}
		
		@Override
		public AllPagesOnQuiltsWithACertainPatternMask mask() {
			return new AllPagesOnQuiltsWithACertainPatternMask();
		}
	}
	
	public class AllPagesOnQuiltsWithACertainPatternData extends NeoData {
		public final PatNode _pat;
		public final PageNode _page;
		public final Page_blockPattern_0_patRel _page_blockPattern_0_pat;
		public final Page_type_1_typeRel _page_type_1_type;
		public final TypeNode _type;
		
		public AllPagesOnQuiltsWithACertainPatternData(Record data) {
			var _pat = data.get("pat");
			this._pat = new PatNode(_pat);
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_blockPattern_0_pat = data.get("page_blockPattern_0_pat");
			this._page_blockPattern_0_pat = new Page_blockPattern_0_patRel(_page_blockPattern_0_pat);
			var _page_type_1_type = data.get("page_type_1_type");
			this._page_type_1_type = new Page_type_1_typeRel(_page_type_1_type);
			var _type = data.get("type");
			this._type = new TypeNode(_type);
		}
		
		
		public class PatNode {
			public String _name;
			public String _ename;
			
			public PatNode(Value _pat) {
				if(!_pat.get("name").isNull())
					this._name = _pat.get("name").asString();
				if(!_pat.get("ename").isNull())
					this._ename = _pat.get("ename").asString();
			}
		}
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_blockPattern_0_patRel {
		
			public Page_blockPattern_0_patRel(Value _page_blockPattern_0_pat) {
			}
		}
		public class Page_type_1_typeRel {
		
			public Page_type_1_typeRel(Value _page_type_1_type) {
			}
		}
		public class TypeNode {
			public String _name;
			public String _ename;
			
			public TypeNode(Value _type) {
				if(!_type.get("name").isNull())
					this._name = _type.get("name").asString();
				if(!_type.get("ename").isNull())
					this._ename = _type.get("ename").asString();
			}
		}
		
	}
	
	public class AllPagesOnQuiltsWithACertainPatternMask extends NeoMask {
		public AllPagesOnQuiltsWithACertainPatternMask setPat(Long value) {
			nodeMask.put("pat", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setPatName(String value) {
			attributeMask.put("pat.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setPatEname(String value) {
			attributeMask.put("pat.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setType(Long value) {
			nodeMask.put("type", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setTypeName(String value) {
			attributeMask.put("type.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternMask setTypeEname(String value) {
			attributeMask.put("type.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.7
	public AllPagesOnPillowsWithACertainPatternAccess getPattern_AllPagesOnPillowsWithACertainPattern() {
		return new AllPagesOnPillowsWithACertainPatternAccess();
	}
	
	public class AllPagesOnPillowsWithACertainPatternAccess extends NeoPatternAccess<AllPagesOnPillowsWithACertainPatternData, AllPagesOnPillowsWithACertainPatternMask> {
		public final String _pat = "pat";
		public final String _page = "page";
		public final String _type = "type";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(7);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesOnPillowsWithACertainPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesOnPillowsWithACertainPatternData(d));
		}
		
		@Override
		public AllPagesOnPillowsWithACertainPatternMask mask() {
			return new AllPagesOnPillowsWithACertainPatternMask();
		}
	}
	
	public class AllPagesOnPillowsWithACertainPatternData extends NeoData {
		public final PatNode _pat;
		public final PageNode _page;
		public final Page_blockPattern_0_patRel _page_blockPattern_0_pat;
		public final Page_type_1_typeRel _page_type_1_type;
		public final TypeNode _type;
		
		public AllPagesOnPillowsWithACertainPatternData(Record data) {
			var _pat = data.get("pat");
			this._pat = new PatNode(_pat);
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_blockPattern_0_pat = data.get("page_blockPattern_0_pat");
			this._page_blockPattern_0_pat = new Page_blockPattern_0_patRel(_page_blockPattern_0_pat);
			var _page_type_1_type = data.get("page_type_1_type");
			this._page_type_1_type = new Page_type_1_typeRel(_page_type_1_type);
			var _type = data.get("type");
			this._type = new TypeNode(_type);
		}
		
		
		public class PatNode {
			public String _name;
			public String _ename;
			
			public PatNode(Value _pat) {
				if(!_pat.get("name").isNull())
					this._name = _pat.get("name").asString();
				if(!_pat.get("ename").isNull())
					this._ename = _pat.get("ename").asString();
			}
		}
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_blockPattern_0_patRel {
		
			public Page_blockPattern_0_patRel(Value _page_blockPattern_0_pat) {
			}
		}
		public class Page_type_1_typeRel {
		
			public Page_type_1_typeRel(Value _page_type_1_type) {
			}
		}
		public class TypeNode {
			public String _name;
			public String _ename;
			
			public TypeNode(Value _type) {
				if(!_type.get("name").isNull())
					this._name = _type.get("name").asString();
				if(!_type.get("ename").isNull())
					this._ename = _type.get("ename").asString();
			}
		}
		
	}
	
	public class AllPagesOnPillowsWithACertainPatternMask extends NeoMask {
		public AllPagesOnPillowsWithACertainPatternMask setPat(Long value) {
			nodeMask.put("pat", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setPatName(String value) {
			attributeMask.put("pat.name", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setPatEname(String value) {
			attributeMask.put("pat.ename", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setType(Long value) {
			nodeMask.put("type", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setTypeName(String value) {
			attributeMask.put("type.name", value);
			return this;
		}
		public AllPagesOnPillowsWithACertainPatternMask setTypeEname(String value) {
			attributeMask.put("type.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.8
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.9
	public AllPagesOnQuiltsWithACertainPatternWithACertainBookAccess getPattern_AllPagesOnQuiltsWithACertainPatternWithACertainBook() {
		return new AllPagesOnQuiltsWithACertainPatternWithACertainBookAccess();
	}
	
	public class AllPagesOnQuiltsWithACertainPatternWithACertainBookAccess extends NeoPatternAccess<AllPagesOnQuiltsWithACertainPatternWithACertainBookData, AllPagesOnQuiltsWithACertainPatternWithACertainBookMask> {
		public final String _pat = "pat";
		public final String _b = "b";
		public final String _c = "c";
		public final String _page = "page";
		public final String _type = "type";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(9);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesOnQuiltsWithACertainPatternWithACertainBookData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesOnQuiltsWithACertainPatternWithACertainBookData(d));
		}
		
		@Override
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask mask() {
			return new AllPagesOnQuiltsWithACertainPatternWithACertainBookMask();
		}
	}
	
	public class AllPagesOnQuiltsWithACertainPatternWithACertainBookData extends NeoData {
		public final PatNode _pat;
		public final BNode _b;
		public final B_classification_0_cRel _b_classification_0_c;
		public final CNode _c;
		public final PageNode _page;
		public final Page_book_0_bRel _page_book_0_b;
		public final Page_blockPattern_1_patRel _page_blockPattern_1_pat;
		public final Page_type_2_typeRel _page_type_2_type;
		public final TypeNode _type;
		
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookData(Record data) {
			var _pat = data.get("pat");
			this._pat = new PatNode(_pat);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_classification_0_c = data.get("b_classification_0_c");
			this._b_classification_0_c = new B_classification_0_cRel(_b_classification_0_c);
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_book_0_b = data.get("page_book_0_b");
			this._page_book_0_b = new Page_book_0_bRel(_page_book_0_b);
			var _page_blockPattern_1_pat = data.get("page_blockPattern_1_pat");
			this._page_blockPattern_1_pat = new Page_blockPattern_1_patRel(_page_blockPattern_1_pat);
			var _page_type_2_type = data.get("page_type_2_type");
			this._page_type_2_type = new Page_type_2_typeRel(_page_type_2_type);
			var _type = data.get("type");
			this._type = new TypeNode(_type);
		}
		
		
		public class PatNode {
			public String _name;
			public String _ename;
			
			public PatNode(Value _pat) {
				if(!_pat.get("name").isNull())
					this._name = _pat.get("name").asString();
				if(!_pat.get("ename").isNull())
					this._ename = _pat.get("ename").asString();
			}
		}
		
		public class BNode {
			public String _title;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("title").isNull())
					this._title = _b.get("title").asString();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_classification_0_cRel {
		
			public B_classification_0_cRel(Value _b_classification_0_c) {
			}
		}
		public class CNode {
			public String _name;
			public String _ename;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
				if(!_c.get("ename").isNull())
					this._ename = _c.get("ename").asString();
			}
		}
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_book_0_bRel {
		
			public Page_book_0_bRel(Value _page_book_0_b) {
			}
		}
		public class Page_blockPattern_1_patRel {
		
			public Page_blockPattern_1_patRel(Value _page_blockPattern_1_pat) {
			}
		}
		public class Page_type_2_typeRel {
		
			public Page_type_2_typeRel(Value _page_type_2_type) {
			}
		}
		public class TypeNode {
			public String _name;
			public String _ename;
			
			public TypeNode(Value _type) {
				if(!_type.get("name").isNull())
					this._name = _type.get("name").asString();
				if(!_type.get("ename").isNull())
					this._ename = _type.get("ename").asString();
			}
		}
		
	}
	
	public class AllPagesOnQuiltsWithACertainPatternWithACertainBookMask extends NeoMask {
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPat(Long value) {
			nodeMask.put("pat", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPatName(String value) {
			attributeMask.put("pat.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPatEname(String value) {
			attributeMask.put("pat.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setBTitle(String value) {
			attributeMask.put("b.title", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setC(Long value) {
			nodeMask.put("c", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setCName(String value) {
			attributeMask.put("c.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setCEname(String value) {
			attributeMask.put("c.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setType(Long value) {
			nodeMask.put("type", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setTypeName(String value) {
			attributeMask.put("type.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainPatternWithACertainBookMask setTypeEname(String value) {
			attributeMask.put("type.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.10
	public AllPagesOnQuiltsWithACertainBookAccess getPattern_AllPagesOnQuiltsWithACertainBook() {
		return new AllPagesOnQuiltsWithACertainBookAccess();
	}
	
	public class AllPagesOnQuiltsWithACertainBookAccess extends NeoPatternAccess<AllPagesOnQuiltsWithACertainBookData, AllPagesOnQuiltsWithACertainBookMask> {
		public final String _b = "b";
		public final String _c = "c";
		public final String _page = "page";
		public final String _type = "type";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(10);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesOnQuiltsWithACertainBookData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesOnQuiltsWithACertainBookData(d));
		}
		
		@Override
		public AllPagesOnQuiltsWithACertainBookMask mask() {
			return new AllPagesOnQuiltsWithACertainBookMask();
		}
	}
	
	public class AllPagesOnQuiltsWithACertainBookData extends NeoData {
		public final BNode _b;
		public final B_classification_0_cRel _b_classification_0_c;
		public final CNode _c;
		public final PageNode _page;
		public final Page_book_0_bRel _page_book_0_b;
		public final Page_type_1_typeRel _page_type_1_type;
		public final TypeNode _type;
		
		public AllPagesOnQuiltsWithACertainBookData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_classification_0_c = data.get("b_classification_0_c");
			this._b_classification_0_c = new B_classification_0_cRel(_b_classification_0_c);
			var _c = data.get("c");
			this._c = new CNode(_c);
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_book_0_b = data.get("page_book_0_b");
			this._page_book_0_b = new Page_book_0_bRel(_page_book_0_b);
			var _page_type_1_type = data.get("page_type_1_type");
			this._page_type_1_type = new Page_type_1_typeRel(_page_type_1_type);
			var _type = data.get("type");
			this._type = new TypeNode(_type);
		}
		
		
		public class BNode {
			public String _title;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("title").isNull())
					this._title = _b.get("title").asString();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_classification_0_cRel {
		
			public B_classification_0_cRel(Value _b_classification_0_c) {
			}
		}
		public class CNode {
			public String _name;
			public String _ename;
			
			public CNode(Value _c) {
				if(!_c.get("name").isNull())
					this._name = _c.get("name").asString();
				if(!_c.get("ename").isNull())
					this._ename = _c.get("ename").asString();
			}
		}
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_book_0_bRel {
		
			public Page_book_0_bRel(Value _page_book_0_b) {
			}
		}
		public class Page_type_1_typeRel {
		
			public Page_type_1_typeRel(Value _page_type_1_type) {
			}
		}
		public class TypeNode {
			public String _name;
			public String _ename;
			
			public TypeNode(Value _type) {
				if(!_type.get("name").isNull())
					this._name = _type.get("name").asString();
				if(!_type.get("ename").isNull())
					this._ename = _type.get("ename").asString();
			}
		}
		
	}
	
	public class AllPagesOnQuiltsWithACertainBookMask extends NeoMask {
		public AllPagesOnQuiltsWithACertainBookMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setBTitle(String value) {
			attributeMask.put("b.title", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setC(Long value) {
			nodeMask.put("c", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setCName(String value) {
			attributeMask.put("c.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setCEname(String value) {
			attributeMask.put("c.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setType(Long value) {
			nodeMask.put("type", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setTypeName(String value) {
			attributeMask.put("type.name", value);
			return this;
		}
		public AllPagesOnQuiltsWithACertainBookMask setTypeEname(String value) {
			attributeMask.put("type.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.11
	public AllPagesWithBasicContentsAccess getPattern_AllPagesWithBasicContents() {
		return new AllPagesWithBasicContentsAccess();
	}
	
	public class AllPagesWithBasicContentsAccess extends NeoPatternAccess<AllPagesWithBasicContentsData, AllPagesWithBasicContentsMask> {
		public final String _page = "page";
		public final String _type = "type";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(11);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesWithBasicContentsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesWithBasicContentsData(d));
		}
		
		@Override
		public AllPagesWithBasicContentsMask mask() {
			return new AllPagesWithBasicContentsMask();
		}
	}
	
	public class AllPagesWithBasicContentsData extends NeoData {
		public final PageNode _page;
		public final Page_type_0_typeRel _page_type_0_type;
		public final TypeNode _type;
		
		public AllPagesWithBasicContentsData(Record data) {
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_type_0_type = data.get("page_type_0_type");
			this._page_type_0_type = new Page_type_0_typeRel(_page_type_0_type);
			var _type = data.get("type");
			this._type = new TypeNode(_type);
		}
		
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_type_0_typeRel {
		
			public Page_type_0_typeRel(Value _page_type_0_type) {
			}
		}
		public class TypeNode {
			public String _name;
			public String _ename;
			
			public TypeNode(Value _type) {
				if(!_type.get("name").isNull())
					this._name = _type.get("name").asString();
				if(!_type.get("ename").isNull())
					this._ename = _type.get("ename").asString();
			}
		}
		
	}
	
	public class AllPagesWithBasicContentsMask extends NeoMask {
		public AllPagesWithBasicContentsMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesWithBasicContentsMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesWithBasicContentsMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesWithBasicContentsMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
		public AllPagesWithBasicContentsMask setType(Long value) {
			nodeMask.put("type", value);
			return this;
		}
		public AllPagesWithBasicContentsMask setTypeName(String value) {
			attributeMask.put("type.name", value);
			return this;
		}
		public AllPagesWithBasicContentsMask setTypeEname(String value) {
			attributeMask.put("type.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Quiltography/bin/QuiltographyQueries.msl#//@entities.12
	public AllPagesWithTipContentsAccess getPattern_AllPagesWithTipContents() {
		return new AllPagesWithTipContentsAccess();
	}
	
	public class AllPagesWithTipContentsAccess extends NeoPatternAccess<AllPagesWithTipContentsData, AllPagesWithTipContentsMask> {
		public final String _page = "page";
		public final String _type = "type";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(12);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllPagesWithTipContentsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllPagesWithTipContentsData(d));
		}
		
		@Override
		public AllPagesWithTipContentsMask mask() {
			return new AllPagesWithTipContentsMask();
		}
	}
	
	public class AllPagesWithTipContentsData extends NeoData {
		public final PageNode _page;
		public final Page_type_0_typeRel _page_type_0_type;
		public final TypeNode _type;
		
		public AllPagesWithTipContentsData(Record data) {
			var _page = data.get("page");
			this._page = new PageNode(_page);
			var _page_type_0_type = data.get("page_type_0_type");
			this._page_type_0_type = new Page_type_0_typeRel(_page_type_0_type);
			var _type = data.get("type");
			this._type = new TypeNode(_type);
		}
		
		
		public class PageNode {
			public int _number;
			public String _name;
			public String _ename;
			
			public PageNode(Value _page) {
				if(!_page.get("number").isNull())
					this._number = _page.get("number").asInt();
				if(!_page.get("name").isNull())
					this._name = _page.get("name").asString();
				if(!_page.get("ename").isNull())
					this._ename = _page.get("ename").asString();
			}
		}
		
		public class Page_type_0_typeRel {
		
			public Page_type_0_typeRel(Value _page_type_0_type) {
			}
		}
		public class TypeNode {
			public String _name;
			public String _ename;
			
			public TypeNode(Value _type) {
				if(!_type.get("name").isNull())
					this._name = _type.get("name").asString();
				if(!_type.get("ename").isNull())
					this._ename = _type.get("ename").asString();
			}
		}
		
	}
	
	public class AllPagesWithTipContentsMask extends NeoMask {
		public AllPagesWithTipContentsMask setPage(Long value) {
			nodeMask.put("page", value);
			return this;
		}
		public AllPagesWithTipContentsMask setPageNumber(int value) {
			attributeMask.put("page.number", value);
			return this;
		}
		public AllPagesWithTipContentsMask setPageName(String value) {
			attributeMask.put("page.name", value);
			return this;
		}
		public AllPagesWithTipContentsMask setPageEname(String value) {
			attributeMask.put("page.ename", value);
			return this;
		}
		public AllPagesWithTipContentsMask setType(Long value) {
			nodeMask.put("type", value);
			return this;
		}
		public AllPagesWithTipContentsMask setTypeName(String value) {
			attributeMask.put("type.name", value);
			return this;
		}
		public AllPagesWithTipContentsMask setTypeEname(String value) {
			attributeMask.put("type.ename", value);
			return this;
		}
	}
}
