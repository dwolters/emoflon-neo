/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.org.emoflon.neo.example.javatodoc;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_DCC {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_DCC(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_DCC(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/DCC.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_DCC(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/DCC.msl#//@entities.0
	public Model getModel_MoflonJava(){
		return (Model) spec.getEntities().get(0);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/DCC.msl#//@entities.1
	public Model getModel_MoflonDoc(){
		return (Model) spec.getEntities().get(1);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/DCC.msl#//@entities.2
	public CreateCorrsAccess getRule_CreateCorrs() {
		return new CreateCorrsAccess();
	}
	
	public class CreateCorrsAccess extends NeoRuleCoAccess<CreateCorrsData, CreateCorrsCoData, CreateCorrsMask> {
		public final String _c1 = "c1";
		public final String _c2 = "c2";
		public final String _f5 = "f5";
		public final String _f7 = "f7";
		public final String _m6 = "m6";
		public final String _m8 = "m8";
		public final String _p9 = "p9";
		public final String _p10 = "p10";
		public final String _doc1 = "doc1";
		public final String _doc2 = "doc2";
		public final String _e5 = "e5";
		public final String _e6 = "e6";
		public final String _e7 = "e7";
		public final String _e8 = "e8";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrsData(d));
		}
			
		@Override
		public Stream<CreateCorrsCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrsCoData(d));
		}
		
		@Override
		public CreateCorrsMask mask() {
			return new CreateCorrsMask();
		}
	}
	
	public class CreateCorrsData extends NeoData {
		public CreateCorrsData(Record data) {
		
		}
	}
	
	public class CreateCorrsCoData extends NeoData {
		public CreateCorrsCoData(Record data) {
		
		}
	}
	
	public class CreateCorrsMask extends NeoMask {
	}
}
