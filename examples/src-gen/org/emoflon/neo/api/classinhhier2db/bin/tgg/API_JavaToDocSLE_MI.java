/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_JavaToDocSLE_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_JavaToDocSLE_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_JavaToDocSLE_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_JavaToDocSLE_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForJavaToDocSLE_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_ClazzToDocRule().rule());
		rules.add(getRule_ClazzToDocRule_1().rule());
		rules.add(getRule_ClazzToDocRule_3().rule());
		rules.add(getRule_ClazzToDocRule_5().rule());
		rules.add(getRule_SubClazzToSubDocRule().rule());
		rules.add(getRule_SubClazzToSubDocRule_1().rule());
		rules.add(getRule_SubClazzToSubDocRule_2().rule());
		rules.add(getRule_SubClazzToSubDocRule_3().rule());
		rules.add(getRule_SubClazzToSubDocRule_7().rule());
		rules.add(getRule_SubClazzToSubDocRule_8().rule());
		rules.add(getRule_SubClazzToSubDocRule_9().rule());
		rules.add(getRule_SubClazzToSubDocRule_25().rule());
		rules.add(getRule_MethodToEntryRule().rule());
		rules.add(getRule_MethodToEntryRule_1().rule());
		rules.add(getRule_MethodToEntryRule_2().rule());
		rules.add(getRule_MethodToEntryRule_3().rule());
		rules.add(getRule_MethodToEntryRule_7().rule());
		rules.add(getRule_MethodToEntryRule_8().rule());
		rules.add(getRule_MethodToEntryRule_9().rule());
		rules.add(getRule_MethodToEntryRule_25().rule());
		rules.add(getRule_AddParameterRule().rule());
		rules.add(getRule_AddParameterRule_1().rule());
		rules.add(getRule_AddParameterRule_2().rule());
		rules.add(getRule_AddParameterRule_3().rule());
		rules.add(getRule_FieldToEntryRule().rule());
		rules.add(getRule_FieldToEntryRule_1().rule());
		rules.add(getRule_FieldToEntryRule_2().rule());
		rules.add(getRule_FieldToEntryRule_3().rule());
		rules.add(getRule_FieldToEntryRule_7().rule());
		rules.add(getRule_FieldToEntryRule_8().rule());
		rules.add(getRule_FieldToEntryRule_9().rule());
		rules.add(getRule_FieldToEntryRule_25().rule());
		rules.add(getRule_AddGlossaryRule().rule());
		rules.add(getRule_LinkGlossaryEntryRule().rule());
		rules.add(getRule_AddGlossaryEntryRule().rule());
		rules.add(getRule_AddGlossaryEntryRule_1().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForJavaToDocSLE_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForJavaToDocSLE_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		rules.add((Rule) spec.getEntities().get(29));
		rules.add((Rule) spec.getEntities().get(30));
		rules.add((Rule) spec.getEntities().get(31));
		rules.add((Rule) spec.getEntities().get(32));
		rules.add((Rule) spec.getEntities().get(33));
		rules.add((Rule) spec.getEntities().get(34));
		rules.add((Rule) spec.getEntities().get(35));
		rules.add((Rule) spec.getEntities().get(36));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.1
	public ClazzToDocRuleAccess getRule_ClazzToDocRule() {
		return new ClazzToDocRuleAccess();
	}
	
	public class ClazzToDocRuleAccess extends NeoRuleCoAccess<ClazzToDocRuleData, ClazzToDocRuleCoData, ClazzToDocRuleMask> {
		public final String _c = "c";
		public final String _d = "d";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRuleData(d));
		}
			
		@Override
		public Stream<ClazzToDocRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRuleCoData(d));
		}
		
		@Override
		public ClazzToDocRuleMask mask() {
			return new ClazzToDocRuleMask();
		}
	}
	
	public class ClazzToDocRuleData extends NeoData {
		public ClazzToDocRuleData(Record data) {
		
		}
	}
	
	public class ClazzToDocRuleCoData extends NeoData {
		public ClazzToDocRuleCoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.2
	public ClazzToDocRule_1Access getRule_ClazzToDocRule_1() {
		return new ClazzToDocRule_1Access();
	}
	
	public class ClazzToDocRule_1Access extends NeoRuleCoAccess<ClazzToDocRule_1Data, ClazzToDocRule_1CoData, ClazzToDocRule_1Mask> {
		public final String _c = "c";
		public final String _d = "d";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_1Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_1CoData(d));
		}
		
		@Override
		public ClazzToDocRule_1Mask mask() {
			return new ClazzToDocRule_1Mask();
		}
	}
	
	public class ClazzToDocRule_1Data extends NeoData {
		public ClazzToDocRule_1Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_1CoData extends NeoData {
		public ClazzToDocRule_1CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.3
	public ClazzToDocRule_3Access getRule_ClazzToDocRule_3() {
		return new ClazzToDocRule_3Access();
	}
	
	public class ClazzToDocRule_3Access extends NeoRuleCoAccess<ClazzToDocRule_3Data, ClazzToDocRule_3CoData, ClazzToDocRule_3Mask> {
		public final String _c = "c";
		public final String _d = "d";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_3Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_3CoData(d));
		}
		
		@Override
		public ClazzToDocRule_3Mask mask() {
			return new ClazzToDocRule_3Mask();
		}
	}
	
	public class ClazzToDocRule_3Data extends NeoData {
		public ClazzToDocRule_3Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_3CoData extends NeoData {
		public ClazzToDocRule_3CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.4
	public ClazzToDocRule_5Access getRule_ClazzToDocRule_5() {
		return new ClazzToDocRule_5Access();
	}
	
	public class ClazzToDocRule_5Access extends NeoRuleCoAccess<ClazzToDocRule_5Data, ClazzToDocRule_5CoData, ClazzToDocRule_5Mask> {
		public final String _c = "c";
		public final String _d = "d";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ClazzToDocRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_5Data(d));
		}
			
		@Override
		public Stream<ClazzToDocRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzToDocRule_5CoData(d));
		}
		
		@Override
		public ClazzToDocRule_5Mask mask() {
			return new ClazzToDocRule_5Mask();
		}
	}
	
	public class ClazzToDocRule_5Data extends NeoData {
		public ClazzToDocRule_5Data(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_5CoData extends NeoData {
		public ClazzToDocRule_5CoData(Record data) {
		
		}
	}
	
	public class ClazzToDocRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.5
	public SubClazzToSubDocRuleAccess getRule_SubClazzToSubDocRule() {
		return new SubClazzToSubDocRuleAccess();
	}
	
	public class SubClazzToSubDocRuleAccess extends NeoRuleCoAccess<SubClazzToSubDocRuleData, SubClazzToSubDocRuleCoData, SubClazzToSubDocRuleMask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRuleData(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRuleCoData(d));
		}
		
		@Override
		public SubClazzToSubDocRuleMask mask() {
			return new SubClazzToSubDocRuleMask();
		}
	}
	
	public class SubClazzToSubDocRuleData extends NeoData {
		public SubClazzToSubDocRuleData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRuleCoData extends NeoData {
		public SubClazzToSubDocRuleCoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.6
	public SubClazzToSubDocRule_1Access getRule_SubClazzToSubDocRule_1() {
		return new SubClazzToSubDocRule_1Access();
	}
	
	public class SubClazzToSubDocRule_1Access extends NeoRuleCoAccess<SubClazzToSubDocRule_1Data, SubClazzToSubDocRule_1CoData, SubClazzToSubDocRule_1Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_1Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_1CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_1Mask mask() {
			return new SubClazzToSubDocRule_1Mask();
		}
	}
	
	public class SubClazzToSubDocRule_1Data extends NeoData {
		public SubClazzToSubDocRule_1Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_1CoData extends NeoData {
		public SubClazzToSubDocRule_1CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.7
	public SubClazzToSubDocRule_2Access getRule_SubClazzToSubDocRule_2() {
		return new SubClazzToSubDocRule_2Access();
	}
	
	public class SubClazzToSubDocRule_2Access extends NeoRuleCoAccess<SubClazzToSubDocRule_2Data, SubClazzToSubDocRule_2CoData, SubClazzToSubDocRule_2Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_2Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_2CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_2Mask mask() {
			return new SubClazzToSubDocRule_2Mask();
		}
	}
	
	public class SubClazzToSubDocRule_2Data extends NeoData {
		public SubClazzToSubDocRule_2Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_2CoData extends NeoData {
		public SubClazzToSubDocRule_2CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.8
	public SubClazzToSubDocRule_3Access getRule_SubClazzToSubDocRule_3() {
		return new SubClazzToSubDocRule_3Access();
	}
	
	public class SubClazzToSubDocRule_3Access extends NeoRuleCoAccess<SubClazzToSubDocRule_3Data, SubClazzToSubDocRule_3CoData, SubClazzToSubDocRule_3Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_3Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_3CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_3Mask mask() {
			return new SubClazzToSubDocRule_3Mask();
		}
	}
	
	public class SubClazzToSubDocRule_3Data extends NeoData {
		public SubClazzToSubDocRule_3Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_3CoData extends NeoData {
		public SubClazzToSubDocRule_3CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.9
	public SubClazzToSubDocRule_7Access getRule_SubClazzToSubDocRule_7() {
		return new SubClazzToSubDocRule_7Access();
	}
	
	public class SubClazzToSubDocRule_7Access extends NeoRuleCoAccess<SubClazzToSubDocRule_7Data, SubClazzToSubDocRule_7CoData, SubClazzToSubDocRule_7Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_7Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_7CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_7Mask mask() {
			return new SubClazzToSubDocRule_7Mask();
		}
	}
	
	public class SubClazzToSubDocRule_7Data extends NeoData {
		public SubClazzToSubDocRule_7Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_7CoData extends NeoData {
		public SubClazzToSubDocRule_7CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.10
	public SubClazzToSubDocRule_8Access getRule_SubClazzToSubDocRule_8() {
		return new SubClazzToSubDocRule_8Access();
	}
	
	public class SubClazzToSubDocRule_8Access extends NeoRuleCoAccess<SubClazzToSubDocRule_8Data, SubClazzToSubDocRule_8CoData, SubClazzToSubDocRule_8Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_8Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_8CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_8Mask mask() {
			return new SubClazzToSubDocRule_8Mask();
		}
	}
	
	public class SubClazzToSubDocRule_8Data extends NeoData {
		public SubClazzToSubDocRule_8Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_8CoData extends NeoData {
		public SubClazzToSubDocRule_8CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.11
	public SubClazzToSubDocRule_9Access getRule_SubClazzToSubDocRule_9() {
		return new SubClazzToSubDocRule_9Access();
	}
	
	public class SubClazzToSubDocRule_9Access extends NeoRuleCoAccess<SubClazzToSubDocRule_9Data, SubClazzToSubDocRule_9CoData, SubClazzToSubDocRule_9Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_9Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_9CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_9Mask mask() {
			return new SubClazzToSubDocRule_9Mask();
		}
	}
	
	public class SubClazzToSubDocRule_9Data extends NeoData {
		public SubClazzToSubDocRule_9Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_9CoData extends NeoData {
		public SubClazzToSubDocRule_9CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.12
	public SubClazzToSubDocRule_25Access getRule_SubClazzToSubDocRule_25() {
		return new SubClazzToSubDocRule_25Access();
	}
	
	public class SubClazzToSubDocRule_25Access extends NeoRuleCoAccess<SubClazzToSubDocRule_25Data, SubClazzToSubDocRule_25CoData, SubClazzToSubDocRule_25Mask> {
		public final String _c = "c";
		public final String _sc = "sc";
		public final String _d = "d";
		public final String _sd = "sd";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SubClazzToSubDocRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_25Data(d));
		}
			
		@Override
		public Stream<SubClazzToSubDocRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SubClazzToSubDocRule_25CoData(d));
		}
		
		@Override
		public SubClazzToSubDocRule_25Mask mask() {
			return new SubClazzToSubDocRule_25Mask();
		}
	}
	
	public class SubClazzToSubDocRule_25Data extends NeoData {
		public SubClazzToSubDocRule_25Data(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_25CoData extends NeoData {
		public SubClazzToSubDocRule_25CoData(Record data) {
		
		}
	}
	
	public class SubClazzToSubDocRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.13
	public MethodToEntryRuleAccess getRule_MethodToEntryRule() {
		return new MethodToEntryRuleAccess();
	}
	
	public class MethodToEntryRuleAccess extends NeoRuleCoAccess<MethodToEntryRuleData, MethodToEntryRuleCoData, MethodToEntryRuleMask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRuleData(d));
		}
			
		@Override
		public Stream<MethodToEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRuleCoData(d));
		}
		
		@Override
		public MethodToEntryRuleMask mask() {
			return new MethodToEntryRuleMask();
		}
	}
	
	public class MethodToEntryRuleData extends NeoData {
		public MethodToEntryRuleData(Record data) {
		
		}
	}
	
	public class MethodToEntryRuleCoData extends NeoData {
		public MethodToEntryRuleCoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.14
	public MethodToEntryRule_1Access getRule_MethodToEntryRule_1() {
		return new MethodToEntryRule_1Access();
	}
	
	public class MethodToEntryRule_1Access extends NeoRuleCoAccess<MethodToEntryRule_1Data, MethodToEntryRule_1CoData, MethodToEntryRule_1Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_1Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_1CoData(d));
		}
		
		@Override
		public MethodToEntryRule_1Mask mask() {
			return new MethodToEntryRule_1Mask();
		}
	}
	
	public class MethodToEntryRule_1Data extends NeoData {
		public MethodToEntryRule_1Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_1CoData extends NeoData {
		public MethodToEntryRule_1CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.15
	public MethodToEntryRule_2Access getRule_MethodToEntryRule_2() {
		return new MethodToEntryRule_2Access();
	}
	
	public class MethodToEntryRule_2Access extends NeoRuleCoAccess<MethodToEntryRule_2Data, MethodToEntryRule_2CoData, MethodToEntryRule_2Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_2Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_2CoData(d));
		}
		
		@Override
		public MethodToEntryRule_2Mask mask() {
			return new MethodToEntryRule_2Mask();
		}
	}
	
	public class MethodToEntryRule_2Data extends NeoData {
		public MethodToEntryRule_2Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_2CoData extends NeoData {
		public MethodToEntryRule_2CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.16
	public MethodToEntryRule_3Access getRule_MethodToEntryRule_3() {
		return new MethodToEntryRule_3Access();
	}
	
	public class MethodToEntryRule_3Access extends NeoRuleCoAccess<MethodToEntryRule_3Data, MethodToEntryRule_3CoData, MethodToEntryRule_3Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_3Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_3CoData(d));
		}
		
		@Override
		public MethodToEntryRule_3Mask mask() {
			return new MethodToEntryRule_3Mask();
		}
	}
	
	public class MethodToEntryRule_3Data extends NeoData {
		public MethodToEntryRule_3Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_3CoData extends NeoData {
		public MethodToEntryRule_3CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.17
	public MethodToEntryRule_7Access getRule_MethodToEntryRule_7() {
		return new MethodToEntryRule_7Access();
	}
	
	public class MethodToEntryRule_7Access extends NeoRuleCoAccess<MethodToEntryRule_7Data, MethodToEntryRule_7CoData, MethodToEntryRule_7Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_7Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_7CoData(d));
		}
		
		@Override
		public MethodToEntryRule_7Mask mask() {
			return new MethodToEntryRule_7Mask();
		}
	}
	
	public class MethodToEntryRule_7Data extends NeoData {
		public MethodToEntryRule_7Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_7CoData extends NeoData {
		public MethodToEntryRule_7CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.18
	public MethodToEntryRule_8Access getRule_MethodToEntryRule_8() {
		return new MethodToEntryRule_8Access();
	}
	
	public class MethodToEntryRule_8Access extends NeoRuleCoAccess<MethodToEntryRule_8Data, MethodToEntryRule_8CoData, MethodToEntryRule_8Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_8Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_8CoData(d));
		}
		
		@Override
		public MethodToEntryRule_8Mask mask() {
			return new MethodToEntryRule_8Mask();
		}
	}
	
	public class MethodToEntryRule_8Data extends NeoData {
		public MethodToEntryRule_8Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_8CoData extends NeoData {
		public MethodToEntryRule_8CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.19
	public MethodToEntryRule_9Access getRule_MethodToEntryRule_9() {
		return new MethodToEntryRule_9Access();
	}
	
	public class MethodToEntryRule_9Access extends NeoRuleCoAccess<MethodToEntryRule_9Data, MethodToEntryRule_9CoData, MethodToEntryRule_9Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_9Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_9CoData(d));
		}
		
		@Override
		public MethodToEntryRule_9Mask mask() {
			return new MethodToEntryRule_9Mask();
		}
	}
	
	public class MethodToEntryRule_9Data extends NeoData {
		public MethodToEntryRule_9Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_9CoData extends NeoData {
		public MethodToEntryRule_9CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.20
	public MethodToEntryRule_25Access getRule_MethodToEntryRule_25() {
		return new MethodToEntryRule_25Access();
	}
	
	public class MethodToEntryRule_25Access extends NeoRuleCoAccess<MethodToEntryRule_25Data, MethodToEntryRule_25CoData, MethodToEntryRule_25Mask> {
		public final String _c = "c";
		public final String _m = "m";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MethodToEntryRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_25Data(d));
		}
			
		@Override
		public Stream<MethodToEntryRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MethodToEntryRule_25CoData(d));
		}
		
		@Override
		public MethodToEntryRule_25Mask mask() {
			return new MethodToEntryRule_25Mask();
		}
	}
	
	public class MethodToEntryRule_25Data extends NeoData {
		public MethodToEntryRule_25Data(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_25CoData extends NeoData {
		public MethodToEntryRule_25CoData(Record data) {
		
		}
	}
	
	public class MethodToEntryRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.21
	public AddParameterRuleAccess getRule_AddParameterRule() {
		return new AddParameterRuleAccess();
	}
	
	public class AddParameterRuleAccess extends NeoRuleCoAccess<AddParameterRuleData, AddParameterRuleCoData, AddParameterRuleMask> {
		public final String _m = "m";
		public final String _p = "p";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddParameterRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRuleData(d));
		}
			
		@Override
		public Stream<AddParameterRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRuleCoData(d));
		}
		
		@Override
		public AddParameterRuleMask mask() {
			return new AddParameterRuleMask();
		}
	}
	
	public class AddParameterRuleData extends NeoData {
		public AddParameterRuleData(Record data) {
		
		}
	}
	
	public class AddParameterRuleCoData extends NeoData {
		public AddParameterRuleCoData(Record data) {
		
		}
	}
	
	public class AddParameterRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.22
	public AddParameterRule_1Access getRule_AddParameterRule_1() {
		return new AddParameterRule_1Access();
	}
	
	public class AddParameterRule_1Access extends NeoRuleCoAccess<AddParameterRule_1Data, AddParameterRule_1CoData, AddParameterRule_1Mask> {
		public final String _m = "m";
		public final String _p = "p";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__entryName = "entryName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddParameterRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRule_1Data(d));
		}
			
		@Override
		public Stream<AddParameterRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRule_1CoData(d));
		}
		
		@Override
		public AddParameterRule_1Mask mask() {
			return new AddParameterRule_1Mask();
		}
	}
	
	public class AddParameterRule_1Data extends NeoData {
		public AddParameterRule_1Data(Record data) {
		
		}
	}
	
	public class AddParameterRule_1CoData extends NeoData {
		public AddParameterRule_1CoData(Record data) {
		
		}
	}
	
	public class AddParameterRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.23
	public AddParameterRule_2Access getRule_AddParameterRule_2() {
		return new AddParameterRule_2Access();
	}
	
	public class AddParameterRule_2Access extends NeoRuleCoAccess<AddParameterRule_2Data, AddParameterRule_2CoData, AddParameterRule_2Mask> {
		public final String _m = "m";
		public final String _p = "p";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddParameterRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRule_2Data(d));
		}
			
		@Override
		public Stream<AddParameterRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRule_2CoData(d));
		}
		
		@Override
		public AddParameterRule_2Mask mask() {
			return new AddParameterRule_2Mask();
		}
	}
	
	public class AddParameterRule_2Data extends NeoData {
		public AddParameterRule_2Data(Record data) {
		
		}
	}
	
	public class AddParameterRule_2CoData extends NeoData {
		public AddParameterRule_2CoData(Record data) {
		
		}
	}
	
	public class AddParameterRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.24
	public AddParameterRule_3Access getRule_AddParameterRule_3() {
		return new AddParameterRule_3Access();
	}
	
	public class AddParameterRule_3Access extends NeoRuleCoAccess<AddParameterRule_3Data, AddParameterRule_3CoData, AddParameterRule_3Mask> {
		public final String _m = "m";
		public final String _p = "p";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__entryName = "entryName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddParameterRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRule_3Data(d));
		}
			
		@Override
		public Stream<AddParameterRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddParameterRule_3CoData(d));
		}
		
		@Override
		public AddParameterRule_3Mask mask() {
			return new AddParameterRule_3Mask();
		}
	}
	
	public class AddParameterRule_3Data extends NeoData {
		public AddParameterRule_3Data(Record data) {
		
		}
	}
	
	public class AddParameterRule_3CoData extends NeoData {
		public AddParameterRule_3CoData(Record data) {
		
		}
	}
	
	public class AddParameterRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.25
	public FieldToEntryRuleAccess getRule_FieldToEntryRule() {
		return new FieldToEntryRuleAccess();
	}
	
	public class FieldToEntryRuleAccess extends NeoRuleCoAccess<FieldToEntryRuleData, FieldToEntryRuleCoData, FieldToEntryRuleMask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRuleData(d));
		}
			
		@Override
		public Stream<FieldToEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRuleCoData(d));
		}
		
		@Override
		public FieldToEntryRuleMask mask() {
			return new FieldToEntryRuleMask();
		}
	}
	
	public class FieldToEntryRuleData extends NeoData {
		public FieldToEntryRuleData(Record data) {
		
		}
	}
	
	public class FieldToEntryRuleCoData extends NeoData {
		public FieldToEntryRuleCoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.26
	public FieldToEntryRule_1Access getRule_FieldToEntryRule_1() {
		return new FieldToEntryRule_1Access();
	}
	
	public class FieldToEntryRule_1Access extends NeoRuleCoAccess<FieldToEntryRule_1Data, FieldToEntryRule_1CoData, FieldToEntryRule_1Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_1Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_1CoData(d));
		}
		
		@Override
		public FieldToEntryRule_1Mask mask() {
			return new FieldToEntryRule_1Mask();
		}
	}
	
	public class FieldToEntryRule_1Data extends NeoData {
		public FieldToEntryRule_1Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_1CoData extends NeoData {
		public FieldToEntryRule_1CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.27
	public FieldToEntryRule_2Access getRule_FieldToEntryRule_2() {
		return new FieldToEntryRule_2Access();
	}
	
	public class FieldToEntryRule_2Access extends NeoRuleCoAccess<FieldToEntryRule_2Data, FieldToEntryRule_2CoData, FieldToEntryRule_2Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_2Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_2CoData(d));
		}
		
		@Override
		public FieldToEntryRule_2Mask mask() {
			return new FieldToEntryRule_2Mask();
		}
	}
	
	public class FieldToEntryRule_2Data extends NeoData {
		public FieldToEntryRule_2Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_2CoData extends NeoData {
		public FieldToEntryRule_2CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.28
	public FieldToEntryRule_3Access getRule_FieldToEntryRule_3() {
		return new FieldToEntryRule_3Access();
	}
	
	public class FieldToEntryRule_3Access extends NeoRuleCoAccess<FieldToEntryRule_3Data, FieldToEntryRule_3CoData, FieldToEntryRule_3Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_3Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_3CoData(d));
		}
		
		@Override
		public FieldToEntryRule_3Mask mask() {
			return new FieldToEntryRule_3Mask();
		}
	}
	
	public class FieldToEntryRule_3Data extends NeoData {
		public FieldToEntryRule_3Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_3CoData extends NeoData {
		public FieldToEntryRule_3CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.29
	public FieldToEntryRule_7Access getRule_FieldToEntryRule_7() {
		return new FieldToEntryRule_7Access();
	}
	
	public class FieldToEntryRule_7Access extends NeoRuleCoAccess<FieldToEntryRule_7Data, FieldToEntryRule_7CoData, FieldToEntryRule_7Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_7Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_7CoData(d));
		}
		
		@Override
		public FieldToEntryRule_7Mask mask() {
			return new FieldToEntryRule_7Mask();
		}
	}
	
	public class FieldToEntryRule_7Data extends NeoData {
		public FieldToEntryRule_7Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_7CoData extends NeoData {
		public FieldToEntryRule_7CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.30
	public FieldToEntryRule_8Access getRule_FieldToEntryRule_8() {
		return new FieldToEntryRule_8Access();
	}
	
	public class FieldToEntryRule_8Access extends NeoRuleCoAccess<FieldToEntryRule_8Data, FieldToEntryRule_8CoData, FieldToEntryRule_8Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(30);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_8Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_8CoData(d));
		}
		
		@Override
		public FieldToEntryRule_8Mask mask() {
			return new FieldToEntryRule_8Mask();
		}
	}
	
	public class FieldToEntryRule_8Data extends NeoData {
		public FieldToEntryRule_8Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_8CoData extends NeoData {
		public FieldToEntryRule_8CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.31
	public FieldToEntryRule_9Access getRule_FieldToEntryRule_9() {
		return new FieldToEntryRule_9Access();
	}
	
	public class FieldToEntryRule_9Access extends NeoRuleCoAccess<FieldToEntryRule_9Data, FieldToEntryRule_9CoData, FieldToEntryRule_9Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(31);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_9Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_9CoData(d));
		}
		
		@Override
		public FieldToEntryRule_9Mask mask() {
			return new FieldToEntryRule_9Mask();
		}
	}
	
	public class FieldToEntryRule_9Data extends NeoData {
		public FieldToEntryRule_9Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_9CoData extends NeoData {
		public FieldToEntryRule_9CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.32
	public FieldToEntryRule_25Access getRule_FieldToEntryRule_25() {
		return new FieldToEntryRule_25Access();
	}
	
	public class FieldToEntryRule_25Access extends NeoRuleCoAccess<FieldToEntryRule_25Data, FieldToEntryRule_25CoData, FieldToEntryRule_25Mask> {
		public final String _c = "c";
		public final String _f = "f";
		public final String _d = "d";
		public final String _e = "e";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(32);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FieldToEntryRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_25Data(d));
		}
			
		@Override
		public Stream<FieldToEntryRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldToEntryRule_25CoData(d));
		}
		
		@Override
		public FieldToEntryRule_25Mask mask() {
			return new FieldToEntryRule_25Mask();
		}
	}
	
	public class FieldToEntryRule_25Data extends NeoData {
		public FieldToEntryRule_25Data(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_25CoData extends NeoData {
		public FieldToEntryRule_25CoData(Record data) {
		
		}
	}
	
	public class FieldToEntryRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.33
	public AddGlossaryRuleAccess getRule_AddGlossaryRule() {
		return new AddGlossaryRuleAccess();
	}
	
	public class AddGlossaryRuleAccess extends NeoRuleCoAccess<AddGlossaryRuleData, AddGlossaryRuleCoData, AddGlossaryRuleMask> {
		public final String _g = "g";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(33);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddGlossaryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddGlossaryRuleData(d));
		}
			
		@Override
		public Stream<AddGlossaryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddGlossaryRuleCoData(d));
		}
		
		@Override
		public AddGlossaryRuleMask mask() {
			return new AddGlossaryRuleMask();
		}
	}
	
	public class AddGlossaryRuleData extends NeoData {
		public AddGlossaryRuleData(Record data) {
		
		}
	}
	
	public class AddGlossaryRuleCoData extends NeoData {
		public AddGlossaryRuleCoData(Record data) {
		
		}
	}
	
	public class AddGlossaryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.34
	public LinkGlossaryEntryRuleAccess getRule_LinkGlossaryEntryRule() {
		return new LinkGlossaryEntryRuleAccess();
	}
	
	public class LinkGlossaryEntryRuleAccess extends NeoRuleCoAccess<LinkGlossaryEntryRuleData, LinkGlossaryEntryRuleCoData, LinkGlossaryEntryRuleMask> {
		public final String _e = "e";
		public final String _ge = "ge";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(34);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<LinkGlossaryEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new LinkGlossaryEntryRuleData(d));
		}
			
		@Override
		public Stream<LinkGlossaryEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new LinkGlossaryEntryRuleCoData(d));
		}
		
		@Override
		public LinkGlossaryEntryRuleMask mask() {
			return new LinkGlossaryEntryRuleMask();
		}
	}
	
	public class LinkGlossaryEntryRuleData extends NeoData {
		public LinkGlossaryEntryRuleData(Record data) {
		
		}
	}
	
	public class LinkGlossaryEntryRuleCoData extends NeoData {
		public LinkGlossaryEntryRuleCoData(Record data) {
		
		}
	}
	
	public class LinkGlossaryEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.35
	public AddGlossaryEntryRuleAccess getRule_AddGlossaryEntryRule() {
		return new AddGlossaryEntryRuleAccess();
	}
	
	public class AddGlossaryEntryRuleAccess extends NeoRuleCoAccess<AddGlossaryEntryRuleData, AddGlossaryEntryRuleCoData, AddGlossaryEntryRuleMask> {
		public final String _g = "g";
		public final String _ge = "ge";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(35);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddGlossaryEntryRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddGlossaryEntryRuleData(d));
		}
			
		@Override
		public Stream<AddGlossaryEntryRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddGlossaryEntryRuleCoData(d));
		}
		
		@Override
		public AddGlossaryEntryRuleMask mask() {
			return new AddGlossaryEntryRuleMask();
		}
	}
	
	public class AddGlossaryEntryRuleData extends NeoData {
		public AddGlossaryEntryRuleData(Record data) {
		
		}
	}
	
	public class AddGlossaryEntryRuleCoData extends NeoData {
		public AddGlossaryEntryRuleCoData(Record data) {
		
		}
	}
	
	public class AddGlossaryEntryRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDocSLE/bin/tgg/JavaToDocSLE_MI.msl#//@entities.36
	public AddGlossaryEntryRule_1Access getRule_AddGlossaryEntryRule_1() {
		return new AddGlossaryEntryRule_1Access();
	}
	
	public class AddGlossaryEntryRule_1Access extends NeoRuleCoAccess<AddGlossaryEntryRule_1Data, AddGlossaryEntryRule_1CoData, AddGlossaryEntryRule_1Mask> {
		public final String _g = "g";
		public final String _ge = "ge";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(36);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AddGlossaryEntryRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddGlossaryEntryRule_1Data(d));
		}
			
		@Override
		public Stream<AddGlossaryEntryRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AddGlossaryEntryRule_1CoData(d));
		}
		
		@Override
		public AddGlossaryEntryRule_1Mask mask() {
			return new AddGlossaryEntryRule_1Mask();
		}
	}
	
	public class AddGlossaryEntryRule_1Data extends NeoData {
		public AddGlossaryEntryRule_1Data(Record data) {
		
		}
	}
	
	public class AddGlossaryEntryRule_1CoData extends NeoData {
		public AddGlossaryEntryRule_1CoData(Record data) {
		
		}
	}
	
	public class AddGlossaryEntryRule_1Mask extends NeoMask {
	}
}
