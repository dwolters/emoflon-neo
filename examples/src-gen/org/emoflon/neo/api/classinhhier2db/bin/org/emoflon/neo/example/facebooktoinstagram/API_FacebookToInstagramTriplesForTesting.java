/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.org.emoflon.neo.example.facebooktoinstagram;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_FacebookToInstagramTriplesForTesting {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_FacebookToInstagramTriplesForTesting(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_FacebookToInstagramTriplesForTesting(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_FacebookToInstagramTriplesForTesting(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.0
	public Model getModel_ConsistentSrc1(){
		return (Model) spec.getEntities().get(0);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.1
	public Model getModel_ConsistentTrg1(){
		return (Model) spec.getEntities().get(1);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.2
	public CreateCorrs1Access getRule_CreateCorrs1() {
		return new CreateCorrs1Access();
	}
	
	public class CreateCorrs1Access extends NeoRuleCoAccess<CreateCorrs1Data, CreateCorrs1CoData, CreateCorrs1Mask> {
		public final String _fn = "fn";
		public final String _in = "in";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs1Data(d));
		}
			
		@Override
		public Stream<CreateCorrs1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs1CoData(d));
		}
		
		@Override
		public CreateCorrs1Mask mask() {
			return new CreateCorrs1Mask();
		}
	}
	
	public class CreateCorrs1Data extends NeoData {
		public CreateCorrs1Data(Record data) {
		
		}
	}
	
	public class CreateCorrs1CoData extends NeoData {
		public CreateCorrs1CoData(Record data) {
		
		}
	}
	
	public class CreateCorrs1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.3
	public Model getModel_ConsistentSrc2(){
		return (Model) spec.getEntities().get(3);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.4
	public Model getModel_ConsistentTrg2(){
		return (Model) spec.getEntities().get(4);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.5
	public CreateCorrs2Access getRule_CreateCorrs2() {
		return new CreateCorrs2Access();
	}
	
	public class CreateCorrs2Access extends NeoRuleCoAccess<CreateCorrs2Data, CreateCorrs2CoData, CreateCorrs2Mask> {
		public final String _in = "in";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _fu = "fu";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs2Data(d));
		}
			
		@Override
		public Stream<CreateCorrs2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs2CoData(d));
		}
		
		@Override
		public CreateCorrs2Mask mask() {
			return new CreateCorrs2Mask();
		}
	}
	
	public class CreateCorrs2Data extends NeoData {
		public CreateCorrs2Data(Record data) {
		
		}
	}
	
	public class CreateCorrs2CoData extends NeoData {
		public CreateCorrs2CoData(Record data) {
		
		}
	}
	
	public class CreateCorrs2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.6
	public Model getModel_ConsistentSrc3(){
		return (Model) spec.getEntities().get(6);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.7
	public Model getModel_ConsistentTrg3(){
		return (Model) spec.getEntities().get(7);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/facebooktoinstagram/FacebookToInstagramTriplesForTesting.msl#//@entities.8
	public CreateCorrs3Access getRule_CreateCorrs3() {
		return new CreateCorrs3Access();
	}
	
	public class CreateCorrs3Access extends NeoRuleCoAccess<CreateCorrs3Data, CreateCorrs3CoData, CreateCorrs3Mask> {
		public final String _fu2 = "fu2";
		public final String _fu1 = "fu1";
		public final String _iu1 = "iu1";
		public final String _in = "in";
		public final String _iu2 = "iu2";
		public final String _fn = "fn";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateCorrs3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs3Data(d));
		}
			
		@Override
		public Stream<CreateCorrs3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateCorrs3CoData(d));
		}
		
		@Override
		public CreateCorrs3Mask mask() {
			return new CreateCorrs3Mask();
		}
	}
	
	public class CreateCorrs3Data extends NeoData {
		public CreateCorrs3Data(Record data) {
		
		}
	}
	
	public class CreateCorrs3CoData extends NeoData {
		public CreateCorrs3CoData(Record data) {
		
		}
	}
	
	public class CreateCorrs3Mask extends NeoMask {
	}
}
