/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_Transformations {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_Transformations(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_Transformations(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_Transformations(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.0
	public void exportMetamodelsForFacebookToInstagramFASE() throws FlattenerException {
		{
			var api = new org.emoflon.neo.api.facebooktoinstagramfase.API_Facebook(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
			builder.exportEMSLEntityToNeo4j(api.getMetamodel_FacebookLanguage());
		}
		{
			var api = new org.emoflon.neo.api.facebooktoinstagramfase.API_Instagram(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
			builder.exportEMSLEntityToNeo4j(api.getMetamodel_InstagramLanguage());
		}
	}
	
	public Collection<TripleRule> getTripleRulesOfFacebookToInstagramFASE(){
		var rules = new HashSet<TripleRule>();
		var rs = spec.eResource().getResourceSet();
		{
			var uri = "platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.1";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.2";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.3";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.6";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		return rules;
	}
	
	public Collection<IConstraint> getConstraintsOfFacebookToInstagramFASE(){
		var constraints = new HashSet<IConstraint>();
		var rs = spec.eResource().getResourceSet();
		{
			var uri = "platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.9";
			var c = (Constraint) rs.getEObject(URI.createURI(uri), true);
			constraints.add(NeoConstraintFactory.createNeoConstraint(c, builder));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.11";
			var c = (Constraint) rs.getEObject(URI.createURI(uri), true);
			constraints.add(NeoConstraintFactory.createNeoConstraint(c, builder));
		}
		return constraints;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.1
	public static final String FacebookToInstagramFASE__NetworkToNetwork = "NetworkToNetwork";
	public static final String FacebookToInstagramFASE__NetworkToNetwork__fl = "fl";
	public static final String FacebookToInstagramFASE__NetworkToNetwork__il = "il";
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.2
	public static final String FacebookToInstagramFASE__UserToUser = "UserToUser";
	public static final String FacebookToInstagramFASE__UserToUser__fu = "fu";
	public static final String FacebookToInstagramFASE__UserToUser__fn = "fn";
	public static final String FacebookToInstagramFASE__UserToUser__iu = "iu";
	public static final String FacebookToInstagramFASE__UserToUser__in = "in";
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.3
	public static final String FacebookToInstagramFASE__RequestFriendship = "RequestFriendship";
	public static final String FacebookToInstagramFASE__RequestFriendship__fu1 = "fu1";
	public static final String FacebookToInstagramFASE__RequestFriendship__fu2 = "fu2";
	public static final String FacebookToInstagramFASE__RequestFriendship__fn = "fn";
	public static final String FacebookToInstagramFASE__RequestFriendship__in = "in";
	public static final String FacebookToInstagramFASE__RequestFriendship__iu1 = "iu1";
	public static final String FacebookToInstagramFASE__RequestFriendship__iu2 = "iu2";
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.4
	public NoDoubleFollowsAccess getPattern_NoDoubleFollows() {
		return new NoDoubleFollowsAccess();
	}
	
	public class NoDoubleFollowsAccess extends NeoPatternAccess<NoDoubleFollowsData, NoDoubleFollowsMask> {
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(4);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NoDoubleFollowsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NoDoubleFollowsData(d));
		}
		
		@Override
		public NoDoubleFollowsMask mask() {
			return new NoDoubleFollowsMask();
		}
	}
	
	public class NoDoubleFollowsData extends NeoData {
		public NoDoubleFollowsData(Record data) {
			
		}
	}
	
	public class NoDoubleFollowsMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.5
	public NoOppositeFollowsAccess getPattern_NoOppositeFollows() {
		return new NoOppositeFollowsAccess();
	}
	
	public class NoOppositeFollowsAccess extends NeoPatternAccess<NoOppositeFollowsData, NoOppositeFollowsMask> {
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(5);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NoOppositeFollowsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NoOppositeFollowsData(d));
		}
		
		@Override
		public NoOppositeFollowsMask mask() {
			return new NoOppositeFollowsMask();
		}
	}
	
	public class NoOppositeFollowsData extends NeoData {
		public NoOppositeFollowsData(Record data) {
			
		}
	}
	
	public class NoOppositeFollowsMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.6
	public static final String FacebookToInstagramFASE__AcceptFriendship = "AcceptFriendship";
	public static final String FacebookToInstagramFASE__AcceptFriendship__fu1 = "fu1";
	public static final String FacebookToInstagramFASE__AcceptFriendship__fu2 = "fu2";
	public static final String FacebookToInstagramFASE__AcceptFriendship__fn = "fn";
	public static final String FacebookToInstagramFASE__AcceptFriendship__fri = "fri";
	public static final String FacebookToInstagramFASE__AcceptFriendship__iu1 = "iu1";
	public static final String FacebookToInstagramFASE__AcceptFriendship__iu2 = "iu2";
	public static final String FacebookToInstagramFASE__AcceptFriendship__in = "in";
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.7
	public NoDoubleFriendshipFacebookAccess getPattern_NoDoubleFriendshipFacebook() {
		return new NoDoubleFriendshipFacebookAccess();
	}
	
	public class NoDoubleFriendshipFacebookAccess extends NeoPatternAccess<NoDoubleFriendshipFacebookData, NoDoubleFriendshipFacebookMask> {
		public final String _fn = "fn";
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _other = "other";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(7);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NoDoubleFriendshipFacebookData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NoDoubleFriendshipFacebookData(d));
		}
		
		@Override
		public NoDoubleFriendshipFacebookMask mask() {
			return new NoDoubleFriendshipFacebookMask();
		}
	}
	
	public class NoDoubleFriendshipFacebookData extends NeoData {
		public NoDoubleFriendshipFacebookData(Record data) {
			
		}
	}
	
	public class NoDoubleFriendshipFacebookMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.8
	public NoDoubleFriendshipFacebookConstraintAccess getPattern_NoDoubleFriendshipFacebookConstraint() {
		return new NoDoubleFriendshipFacebookConstraintAccess();
	}
	
	public class NoDoubleFriendshipFacebookConstraintAccess extends NeoPatternAccess<NoDoubleFriendshipFacebookConstraintData, NoDoubleFriendshipFacebookConstraintMask> {
		public final String _fu2 = "fu2";
		public final String _other = "other";
		public final String _fu1 = "fu1";
		public final String _one = "one";
		public final String _fn = "fn";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NoDoubleFriendshipFacebookConstraintData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NoDoubleFriendshipFacebookConstraintData(d));
		}
		
		@Override
		public NoDoubleFriendshipFacebookConstraintMask mask() {
			return new NoDoubleFriendshipFacebookConstraintMask();
		}
	}
	
	public class NoDoubleFriendshipFacebookConstraintData extends NeoData {
		public NoDoubleFriendshipFacebookConstraintData(Record data) {
			
		}
	}
	
	public class NoDoubleFriendshipFacebookConstraintMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.9
	public IConstraint getConstraint_NoDoubleFriendship() {
		var c = (Constraint) spec.getEntities().get(9);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.10
	public NoDoubleFollowershipInstagramConstraintAccess getPattern_NoDoubleFollowershipInstagramConstraint() {
		return new NoDoubleFollowershipInstagramConstraintAccess();
	}
	
	public class NoDoubleFollowershipInstagramConstraintAccess extends NeoPatternAccess<NoDoubleFollowershipInstagramConstraintData, NoDoubleFollowershipInstagramConstraintMask> {
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(10);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NoDoubleFollowershipInstagramConstraintData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NoDoubleFollowershipInstagramConstraintData(d));
		}
		
		@Override
		public NoDoubleFollowershipInstagramConstraintMask mask() {
			return new NoDoubleFollowershipInstagramConstraintMask();
		}
	}
	
	public class NoDoubleFollowershipInstagramConstraintData extends NeoData {
		public NoDoubleFollowershipInstagramConstraintData(Record data) {
			
		}
	}
	
	public class NoDoubleFollowershipInstagramConstraintMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagramFASE/bin/Transformations.msl#//@entities.11
	public IConstraint getConstraint_NoDoubleFollowership() {
		var c = (Constraint) spec.getEntities().get(11);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
}
