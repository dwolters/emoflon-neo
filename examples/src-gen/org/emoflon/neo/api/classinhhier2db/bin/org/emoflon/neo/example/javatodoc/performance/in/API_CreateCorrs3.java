/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.org.emoflon.neo.example.javatodoc.performance.in;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_CreateCorrs3 {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_CreateCorrs3(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_CreateCorrs3(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs3.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_CreateCorrs3(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs3.msl#//@entities.0
	public CreateClazzToDoc3Access getRule_CreateClazzToDoc3() {
		return new CreateClazzToDoc3Access();
	}
	
	public class CreateClazzToDoc3Access extends NeoRuleCoAccess<CreateClazzToDoc3Data, CreateClazzToDoc3CoData, CreateClazzToDoc3Mask> {
		public final String _c300 = "c300";
		public final String _d300 = "d300";
		public final String _c301 = "c301";
		public final String _d301 = "d301";
		public final String _c302 = "c302";
		public final String _d302 = "d302";
		public final String _c303 = "c303";
		public final String _d303 = "d303";
		public final String _c304 = "c304";
		public final String _d304 = "d304";
		public final String _c305 = "c305";
		public final String _d305 = "d305";
		public final String _c306 = "c306";
		public final String _d306 = "d306";
		public final String _c307 = "c307";
		public final String _d307 = "d307";
		public final String _c308 = "c308";
		public final String _d308 = "d308";
		public final String _c309 = "c309";
		public final String _d309 = "d309";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(0);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateClazzToDoc3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateClazzToDoc3Data(d));
		}
			
		@Override
		public Stream<CreateClazzToDoc3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateClazzToDoc3CoData(d));
		}
		
		@Override
		public CreateClazzToDoc3Mask mask() {
			return new CreateClazzToDoc3Mask();
		}
	}
	
	public class CreateClazzToDoc3Data extends NeoData {
		public CreateClazzToDoc3Data(Record data) {
		
		}
	}
	
	public class CreateClazzToDoc3CoData extends NeoData {
		public CreateClazzToDoc3CoData(Record data) {
		
		}
	}
	
	public class CreateClazzToDoc3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs3.msl#//@entities.1
	public CreateMethodToEntry3Access getRule_CreateMethodToEntry3() {
		return new CreateMethodToEntry3Access();
	}
	
	public class CreateMethodToEntry3Access extends NeoRuleCoAccess<CreateMethodToEntry3Data, CreateMethodToEntry3CoData, CreateMethodToEntry3Mask> {
		public final String _m310 = "m310";
		public final String _e310 = "e310";
		public final String _p350 = "p350";
		public final String _m311 = "m311";
		public final String _e311 = "e311";
		public final String _p357 = "p357";
		public final String _m312 = "m312";
		public final String _e312 = "e312";
		public final String _p394 = "p394";
		public final String _m313 = "m313";
		public final String _e313 = "e313";
		public final String _p379 = "p379";
		public final String _m314 = "m314";
		public final String _e314 = "e314";
		public final String _p387 = "p387";
		public final String _m315 = "m315";
		public final String _e315 = "e315";
		public final String _p374 = "p374";
		public final String _m316 = "m316";
		public final String _e316 = "e316";
		public final String _p392 = "p392";
		public final String _p399 = "p399";
		public final String _p351 = "p351";
		public final String _p362 = "p362";
		public final String _m317 = "m317";
		public final String _e317 = "e317";
		public final String _p377 = "p377";
		public final String _m318 = "m318";
		public final String _e318 = "e318";
		public final String _m319 = "m319";
		public final String _e319 = "e319";
		public final String _p376 = "p376";
		public final String _m320 = "m320";
		public final String _e320 = "e320";
		public final String _m321 = "m321";
		public final String _e321 = "e321";
		public final String _m322 = "m322";
		public final String _e322 = "e322";
		public final String _p359 = "p359";
		public final String _p368 = "p368";
		public final String _m323 = "m323";
		public final String _e323 = "e323";
		public final String _m324 = "m324";
		public final String _e324 = "e324";
		public final String _p364 = "p364";
		public final String _p383 = "p383";
		public final String _m325 = "m325";
		public final String _e325 = "e325";
		public final String _p378 = "p378";
		public final String _m326 = "m326";
		public final String _e326 = "e326";
		public final String _p366 = "p366";
		public final String _p385 = "p385";
		public final String _m327 = "m327";
		public final String _e327 = "e327";
		public final String _p355 = "p355";
		public final String _p381 = "p381";
		public final String _m328 = "m328";
		public final String _e328 = "e328";
		public final String _p384 = "p384";
		public final String _p367 = "p367";
		public final String _p352 = "p352";
		public final String _m329 = "m329";
		public final String _e329 = "e329";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateMethodToEntry3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateMethodToEntry3Data(d));
		}
			
		@Override
		public Stream<CreateMethodToEntry3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateMethodToEntry3CoData(d));
		}
		
		@Override
		public CreateMethodToEntry3Mask mask() {
			return new CreateMethodToEntry3Mask();
		}
	}
	
	public class CreateMethodToEntry3Data extends NeoData {
		public CreateMethodToEntry3Data(Record data) {
		
		}
	}
	
	public class CreateMethodToEntry3CoData extends NeoData {
		public CreateMethodToEntry3CoData(Record data) {
		
		}
	}
	
	public class CreateMethodToEntry3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs3.msl#//@entities.2
	public CreateFieldToEntry3Access getRule_CreateFieldToEntry3() {
		return new CreateFieldToEntry3Access();
	}
	
	public class CreateFieldToEntry3Access extends NeoRuleCoAccess<CreateFieldToEntry3Data, CreateFieldToEntry3CoData, CreateFieldToEntry3Mask> {
		public final String _f330 = "f330";
		public final String _f331 = "f331";
		public final String _f332 = "f332";
		public final String _f333 = "f333";
		public final String _f334 = "f334";
		public final String _f335 = "f335";
		public final String _f336 = "f336";
		public final String _f337 = "f337";
		public final String _f338 = "f338";
		public final String _f339 = "f339";
		public final String _f340 = "f340";
		public final String _f341 = "f341";
		public final String _f342 = "f342";
		public final String _f343 = "f343";
		public final String _f344 = "f344";
		public final String _f345 = "f345";
		public final String _f346 = "f346";
		public final String _f347 = "f347";
		public final String _f348 = "f348";
		public final String _f349 = "f349";
		public final String _e330 = "e330";
		public final String _e331 = "e331";
		public final String _e332 = "e332";
		public final String _e333 = "e333";
		public final String _e334 = "e334";
		public final String _e335 = "e335";
		public final String _e336 = "e336";
		public final String _e337 = "e337";
		public final String _e338 = "e338";
		public final String _e339 = "e339";
		public final String _e340 = "e340";
		public final String _e341 = "e341";
		public final String _e342 = "e342";
		public final String _e343 = "e343";
		public final String _e344 = "e344";
		public final String _e345 = "e345";
		public final String _e346 = "e346";
		public final String _e347 = "e347";
		public final String _e348 = "e348";
		public final String _e349 = "e349";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFieldToEntry3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFieldToEntry3Data(d));
		}
			
		@Override
		public Stream<CreateFieldToEntry3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFieldToEntry3CoData(d));
		}
		
		@Override
		public CreateFieldToEntry3Mask mask() {
			return new CreateFieldToEntry3Mask();
		}
	}
	
	public class CreateFieldToEntry3Data extends NeoData {
		public CreateFieldToEntry3Data(Record data) {
		
		}
	}
	
	public class CreateFieldToEntry3CoData extends NeoData {
		public CreateFieldToEntry3CoData(Record data) {
		
		}
	}
	
	public class CreateFieldToEntry3Mask extends NeoMask {
	}
}
