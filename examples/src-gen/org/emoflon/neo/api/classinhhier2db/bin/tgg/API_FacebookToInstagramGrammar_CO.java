/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_FacebookToInstagramGrammar_CO {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_FacebookToInstagramGrammar_CO(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_FacebookToInstagramGrammar_CO(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_FacebookToInstagramGrammar_CO(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForFacebookToInstagramGrammar_CO() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_NetworkToNetworkIslandRule().rule());
		rules.add(getRule_UserToUserIslandRule().rule());
		rules.add(getRule_UserNetworkBridgeRule().rule());
		rules.add(getRule_RequestFriendship().rule());
		rules.add(getRule_AcceptFriendship().rule());
		rules.add(getRule_IgnoreInterNetworkFollowers().rule());
		rules.add(getRule_ParentsIgnoreRule().rule());
		rules.add(getRule_SpouseIgnoreRule().rule());
		rules.add(getRule_SiblingsIgnoreRule().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForFacebookToInstagramGrammar_CO() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForFacebookToInstagramGrammar_CO(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.1
	public NetworkToNetworkIslandRuleAccess getRule_NetworkToNetworkIslandRule() {
		return new NetworkToNetworkIslandRuleAccess();
	}
	
	public class NetworkToNetworkIslandRuleAccess extends NeoRuleCoAccess<NetworkToNetworkIslandRuleData, NetworkToNetworkIslandRuleCoData, NetworkToNetworkIslandRuleMask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetworkIslandRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRuleData(d));
		}
			
		@Override
		public Stream<NetworkToNetworkIslandRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkIslandRuleCoData(d));
		}
		
		@Override
		public NetworkToNetworkIslandRuleMask mask() {
			return new NetworkToNetworkIslandRuleMask();
		}
	}
	
	public class NetworkToNetworkIslandRuleData extends NeoData {
		public NetworkToNetworkIslandRuleData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRuleCoData extends NeoData {
		public NetworkToNetworkIslandRuleCoData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkIslandRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.2
	public UserToUserIslandRuleAccess getRule_UserToUserIslandRule() {
		return new UserToUserIslandRuleAccess();
	}
	
	public class UserToUserIslandRuleAccess extends NeoRuleCoAccess<UserToUserIslandRuleData, UserToUserIslandRuleCoData, UserToUserIslandRuleMask> {
		public final String _flu = "flu";
		public final String _ilu = "ilu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUserIslandRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRuleData(d));
		}
			
		@Override
		public Stream<UserToUserIslandRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserIslandRuleCoData(d));
		}
		
		@Override
		public UserToUserIslandRuleMask mask() {
			return new UserToUserIslandRuleMask();
		}
	}
	
	public class UserToUserIslandRuleData extends NeoData {
		public UserToUserIslandRuleData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRuleCoData extends NeoData {
		public UserToUserIslandRuleCoData(Record data) {
		
		}
	}
	
	public class UserToUserIslandRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.3
	public UserNetworkBridgeRuleAccess getRule_UserNetworkBridgeRule() {
		return new UserNetworkBridgeRuleAccess();
	}
	
	public class UserNetworkBridgeRuleAccess extends NeoRuleCoAccess<UserNetworkBridgeRuleData, UserNetworkBridgeRuleCoData, UserNetworkBridgeRuleMask> {
		public final String _f = "f";
		public final String _fu = "fu";
		public final String _i = "i";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserNetworkBridgeRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRuleData(d));
		}
			
		@Override
		public Stream<UserNetworkBridgeRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserNetworkBridgeRuleCoData(d));
		}
		
		@Override
		public UserNetworkBridgeRuleMask mask() {
			return new UserNetworkBridgeRuleMask();
		}
	}
	
	public class UserNetworkBridgeRuleData extends NeoData {
		public UserNetworkBridgeRuleData(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRuleCoData extends NeoData {
		public UserNetworkBridgeRuleCoData(Record data) {
		
		}
	}
	
	public class UserNetworkBridgeRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.4
	public RequestFriendshipAccess getRule_RequestFriendship() {
		return new RequestFriendshipAccess();
	}
	
	public class RequestFriendshipAccess extends NeoRuleCoAccess<RequestFriendshipData, RequestFriendshipCoData, RequestFriendshipMask> {
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RequestFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RequestFriendshipData(d));
		}
			
		@Override
		public Stream<RequestFriendshipCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RequestFriendshipCoData(d));
		}
		
		@Override
		public RequestFriendshipMask mask() {
			return new RequestFriendshipMask();
		}
	}
	
	public class RequestFriendshipData extends NeoData {
		public RequestFriendshipData(Record data) {
		
		}
	}
	
	public class RequestFriendshipCoData extends NeoData {
		public RequestFriendshipCoData(Record data) {
		
		}
	}
	
	public class RequestFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.5
	public AcceptFriendshipAccess getRule_AcceptFriendship() {
		return new AcceptFriendshipAccess();
	}
	
	public class AcceptFriendshipAccess extends NeoRuleCoAccess<AcceptFriendshipData, AcceptFriendshipCoData, AcceptFriendshipMask> {
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendshipData(d));
		}
			
		@Override
		public Stream<AcceptFriendshipCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendshipCoData(d));
		}
		
		@Override
		public AcceptFriendshipMask mask() {
			return new AcceptFriendshipMask();
		}
	}
	
	public class AcceptFriendshipData extends NeoData {
		public AcceptFriendshipData(Record data) {
		
		}
	}
	
	public class AcceptFriendshipCoData extends NeoData {
		public AcceptFriendshipCoData(Record data) {
		
		}
	}
	
	public class AcceptFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.6
	public IgnoreInterNetworkFollowersAccess getRule_IgnoreInterNetworkFollowers() {
		return new IgnoreInterNetworkFollowersAccess();
	}
	
	public class IgnoreInterNetworkFollowersAccess extends NeoRuleCoAccess<IgnoreInterNetworkFollowersData, IgnoreInterNetworkFollowersCoData, IgnoreInterNetworkFollowersMask> {
		public final String _nu = "nu";
		public final String _fn = "fn";
		public final String _n = "n";
		public final String _fu = "fu";
		public final String _in = "in";
		public final String _iu = "iu";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<IgnoreInterNetworkFollowersData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreInterNetworkFollowersData(d));
		}
			
		@Override
		public Stream<IgnoreInterNetworkFollowersCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreInterNetworkFollowersCoData(d));
		}
		
		@Override
		public IgnoreInterNetworkFollowersMask mask() {
			return new IgnoreInterNetworkFollowersMask();
		}
	}
	
	public class IgnoreInterNetworkFollowersData extends NeoData {
		public IgnoreInterNetworkFollowersData(Record data) {
		
		}
	}
	
	public class IgnoreInterNetworkFollowersCoData extends NeoData {
		public IgnoreInterNetworkFollowersCoData(Record data) {
		
		}
	}
	
	public class IgnoreInterNetworkFollowersMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.7
	public ParentsIgnoreRuleAccess getRule_ParentsIgnoreRule() {
		return new ParentsIgnoreRuleAccess();
	}
	
	public class ParentsIgnoreRuleAccess extends NeoRuleCoAccess<ParentsIgnoreRuleData, ParentsIgnoreRuleCoData, ParentsIgnoreRuleMask> {
		public final String _fn = "fn";
		public final String _fu = "fu";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ParentsIgnoreRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ParentsIgnoreRuleData(d));
		}
			
		@Override
		public Stream<ParentsIgnoreRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ParentsIgnoreRuleCoData(d));
		}
		
		@Override
		public ParentsIgnoreRuleMask mask() {
			return new ParentsIgnoreRuleMask();
		}
	}
	
	public class ParentsIgnoreRuleData extends NeoData {
		public ParentsIgnoreRuleData(Record data) {
		
		}
	}
	
	public class ParentsIgnoreRuleCoData extends NeoData {
		public ParentsIgnoreRuleCoData(Record data) {
		
		}
	}
	
	public class ParentsIgnoreRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.8
	public SpouseIgnoreRuleAccess getRule_SpouseIgnoreRule() {
		return new SpouseIgnoreRuleAccess();
	}
	
	public class SpouseIgnoreRuleAccess extends NeoRuleCoAccess<SpouseIgnoreRuleData, SpouseIgnoreRuleCoData, SpouseIgnoreRuleMask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SpouseIgnoreRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRuleData(d));
		}
			
		@Override
		public Stream<SpouseIgnoreRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SpouseIgnoreRuleCoData(d));
		}
		
		@Override
		public SpouseIgnoreRuleMask mask() {
			return new SpouseIgnoreRuleMask();
		}
	}
	
	public class SpouseIgnoreRuleData extends NeoData {
		public SpouseIgnoreRuleData(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRuleCoData extends NeoData {
		public SpouseIgnoreRuleCoData(Record data) {
		
		}
	}
	
	public class SpouseIgnoreRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/tgg-gen/bin/tgg/FacebookToInstagramGrammar_CO.msl#//@entities.9
	public SiblingsIgnoreRuleAccess getRule_SiblingsIgnoreRule() {
		return new SiblingsIgnoreRuleAccess();
	}
	
	public class SiblingsIgnoreRuleAccess extends NeoRuleCoAccess<SiblingsIgnoreRuleData, SiblingsIgnoreRuleCoData, SiblingsIgnoreRuleMask> {
		public final String _fn = "fn";
		public final String _fu = "fu";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SiblingsIgnoreRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRuleData(d));
		}
			
		@Override
		public Stream<SiblingsIgnoreRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SiblingsIgnoreRuleCoData(d));
		}
		
		@Override
		public SiblingsIgnoreRuleMask mask() {
			return new SiblingsIgnoreRuleMask();
		}
	}
	
	public class SiblingsIgnoreRuleData extends NeoData {
		public SiblingsIgnoreRuleData(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRuleCoData extends NeoData {
		public SiblingsIgnoreRuleCoData(Record data) {
		
		}
	}
	
	public class SiblingsIgnoreRuleMask extends NeoMask {
	}
}
