/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_FacebookToInstagram_Constrained_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_FacebookToInstagram_Constrained_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_FacebookToInstagram_Constrained_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_FacebookToInstagram_Constrained_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForFacebookToInstagram_Constrained_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_NetworkToNetwork().rule());
		rules.add(getRule_NetworkToNetwork_1().rule());
		rules.add(getRule_NetworkToNetwork_3().rule());
		rules.add(getRule_NetworkToNetwork_5().rule());
		rules.add(getRule_UserToUser().rule());
		rules.add(getRule_UserToUser_1().rule());
		rules.add(getRule_UserToUser_4().rule());
		rules.add(getRule_UserToUser_5().rule());
		rules.add(getRule_UserToUser_7().rule());
		rules.add(getRule_UserToUser_16().rule());
		rules.add(getRule_UserToUser_17().rule());
		rules.add(getRule_UserToUser_25().rule());
		rules.add(getRule_RequestFriendship().rule());
		rules.add(getRule_AcceptFriendship().rule());
		rules.add(getRule_AcceptFriendship_1().rule());
		rules.add(getRule_AcceptFriendship_2().rule());
		rules.add(getRule_AcceptFriendship_8().rule());
		rules.add(getRule_AcceptFriendship_10().rule());
		rules.add(getRule_AcceptFriendship_16().rule());
		rules.add(getRule_AcceptFriendship_18().rule());
		rules.add(getRule_AcceptFriendship_24().rule());
		rules.add(getRule_AcceptFriendship_26().rule());
		rules.add(getRule_AcceptFriendship_30().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForFacebookToInstagram_Constrained_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForFacebookToInstagram_Constrained_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.1
	public NetworkToNetworkAccess getRule_NetworkToNetwork() {
		return new NetworkToNetworkAccess();
	}
	
	public class NetworkToNetworkAccess extends NeoRuleCoAccess<NetworkToNetworkData, NetworkToNetworkCoData, NetworkToNetworkMask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetworkData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkData(d));
		}
			
		@Override
		public Stream<NetworkToNetworkCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetworkCoData(d));
		}
		
		@Override
		public NetworkToNetworkMask mask() {
			return new NetworkToNetworkMask();
		}
	}
	
	public class NetworkToNetworkData extends NeoData {
		public NetworkToNetworkData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkCoData extends NeoData {
		public NetworkToNetworkCoData(Record data) {
		
		}
	}
	
	public class NetworkToNetworkMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.2
	public NetworkToNetwork_1Access getRule_NetworkToNetwork_1() {
		return new NetworkToNetwork_1Access();
	}
	
	public class NetworkToNetwork_1Access extends NeoRuleCoAccess<NetworkToNetwork_1Data, NetworkToNetwork_1CoData, NetworkToNetwork_1Mask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetwork_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetwork_1Data(d));
		}
			
		@Override
		public Stream<NetworkToNetwork_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetwork_1CoData(d));
		}
		
		@Override
		public NetworkToNetwork_1Mask mask() {
			return new NetworkToNetwork_1Mask();
		}
	}
	
	public class NetworkToNetwork_1Data extends NeoData {
		public NetworkToNetwork_1Data(Record data) {
		
		}
	}
	
	public class NetworkToNetwork_1CoData extends NeoData {
		public NetworkToNetwork_1CoData(Record data) {
		
		}
	}
	
	public class NetworkToNetwork_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.3
	public NetworkToNetwork_3Access getRule_NetworkToNetwork_3() {
		return new NetworkToNetwork_3Access();
	}
	
	public class NetworkToNetwork_3Access extends NeoRuleCoAccess<NetworkToNetwork_3Data, NetworkToNetwork_3CoData, NetworkToNetwork_3Mask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetwork_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetwork_3Data(d));
		}
			
		@Override
		public Stream<NetworkToNetwork_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetwork_3CoData(d));
		}
		
		@Override
		public NetworkToNetwork_3Mask mask() {
			return new NetworkToNetwork_3Mask();
		}
	}
	
	public class NetworkToNetwork_3Data extends NeoData {
		public NetworkToNetwork_3Data(Record data) {
		
		}
	}
	
	public class NetworkToNetwork_3CoData extends NeoData {
		public NetworkToNetwork_3CoData(Record data) {
		
		}
	}
	
	public class NetworkToNetwork_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.4
	public NetworkToNetwork_5Access getRule_NetworkToNetwork_5() {
		return new NetworkToNetwork_5Access();
	}
	
	public class NetworkToNetwork_5Access extends NeoRuleCoAccess<NetworkToNetwork_5Data, NetworkToNetwork_5CoData, NetworkToNetwork_5Mask> {
		public final String _fl = "fl";
		public final String _il = "il";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<NetworkToNetwork_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetwork_5Data(d));
		}
			
		@Override
		public Stream<NetworkToNetwork_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NetworkToNetwork_5CoData(d));
		}
		
		@Override
		public NetworkToNetwork_5Mask mask() {
			return new NetworkToNetwork_5Mask();
		}
	}
	
	public class NetworkToNetwork_5Data extends NeoData {
		public NetworkToNetwork_5Data(Record data) {
		
		}
	}
	
	public class NetworkToNetwork_5CoData extends NeoData {
		public NetworkToNetwork_5CoData(Record data) {
		
		}
	}
	
	public class NetworkToNetwork_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.5
	public UserToUserAccess getRule_UserToUser() {
		return new UserToUserAccess();
	}
	
	public class UserToUserAccess extends NeoRuleCoAccess<UserToUserData, UserToUserCoData, UserToUserMask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUserData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserData(d));
		}
			
		@Override
		public Stream<UserToUserCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUserCoData(d));
		}
		
		@Override
		public UserToUserMask mask() {
			return new UserToUserMask();
		}
	}
	
	public class UserToUserData extends NeoData {
		public UserToUserData(Record data) {
		
		}
	}
	
	public class UserToUserCoData extends NeoData {
		public UserToUserCoData(Record data) {
		
		}
	}
	
	public class UserToUserMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.6
	public UserToUser_1Access getRule_UserToUser_1() {
		return new UserToUser_1Access();
	}
	
	public class UserToUser_1Access extends NeoRuleCoAccess<UserToUser_1Data, UserToUser_1CoData, UserToUser_1Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_1Data(d));
		}
			
		@Override
		public Stream<UserToUser_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_1CoData(d));
		}
		
		@Override
		public UserToUser_1Mask mask() {
			return new UserToUser_1Mask();
		}
	}
	
	public class UserToUser_1Data extends NeoData {
		public UserToUser_1Data(Record data) {
		
		}
	}
	
	public class UserToUser_1CoData extends NeoData {
		public UserToUser_1CoData(Record data) {
		
		}
	}
	
	public class UserToUser_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.7
	public UserToUser_4Access getRule_UserToUser_4() {
		return new UserToUser_4Access();
	}
	
	public class UserToUser_4Access extends NeoRuleCoAccess<UserToUser_4Data, UserToUser_4CoData, UserToUser_4Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_4Data(d));
		}
			
		@Override
		public Stream<UserToUser_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_4CoData(d));
		}
		
		@Override
		public UserToUser_4Mask mask() {
			return new UserToUser_4Mask();
		}
	}
	
	public class UserToUser_4Data extends NeoData {
		public UserToUser_4Data(Record data) {
		
		}
	}
	
	public class UserToUser_4CoData extends NeoData {
		public UserToUser_4CoData(Record data) {
		
		}
	}
	
	public class UserToUser_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.8
	public UserToUser_5Access getRule_UserToUser_5() {
		return new UserToUser_5Access();
	}
	
	public class UserToUser_5Access extends NeoRuleCoAccess<UserToUser_5Data, UserToUser_5CoData, UserToUser_5Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_5Data(d));
		}
			
		@Override
		public Stream<UserToUser_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_5CoData(d));
		}
		
		@Override
		public UserToUser_5Mask mask() {
			return new UserToUser_5Mask();
		}
	}
	
	public class UserToUser_5Data extends NeoData {
		public UserToUser_5Data(Record data) {
		
		}
	}
	
	public class UserToUser_5CoData extends NeoData {
		public UserToUser_5CoData(Record data) {
		
		}
	}
	
	public class UserToUser_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.9
	public UserToUser_7Access getRule_UserToUser_7() {
		return new UserToUser_7Access();
	}
	
	public class UserToUser_7Access extends NeoRuleCoAccess<UserToUser_7Data, UserToUser_7CoData, UserToUser_7Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_7Data(d));
		}
			
		@Override
		public Stream<UserToUser_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_7CoData(d));
		}
		
		@Override
		public UserToUser_7Mask mask() {
			return new UserToUser_7Mask();
		}
	}
	
	public class UserToUser_7Data extends NeoData {
		public UserToUser_7Data(Record data) {
		
		}
	}
	
	public class UserToUser_7CoData extends NeoData {
		public UserToUser_7CoData(Record data) {
		
		}
	}
	
	public class UserToUser_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.10
	public UserToUser_16Access getRule_UserToUser_16() {
		return new UserToUser_16Access();
	}
	
	public class UserToUser_16Access extends NeoRuleCoAccess<UserToUser_16Data, UserToUser_16CoData, UserToUser_16Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_16Data(d));
		}
			
		@Override
		public Stream<UserToUser_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_16CoData(d));
		}
		
		@Override
		public UserToUser_16Mask mask() {
			return new UserToUser_16Mask();
		}
	}
	
	public class UserToUser_16Data extends NeoData {
		public UserToUser_16Data(Record data) {
		
		}
	}
	
	public class UserToUser_16CoData extends NeoData {
		public UserToUser_16CoData(Record data) {
		
		}
	}
	
	public class UserToUser_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.11
	public UserToUser_17Access getRule_UserToUser_17() {
		return new UserToUser_17Access();
	}
	
	public class UserToUser_17Access extends NeoRuleCoAccess<UserToUser_17Data, UserToUser_17CoData, UserToUser_17Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_17Data(d));
		}
			
		@Override
		public Stream<UserToUser_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_17CoData(d));
		}
		
		@Override
		public UserToUser_17Mask mask() {
			return new UserToUser_17Mask();
		}
	}
	
	public class UserToUser_17Data extends NeoData {
		public UserToUser_17Data(Record data) {
		
		}
	}
	
	public class UserToUser_17CoData extends NeoData {
		public UserToUser_17CoData(Record data) {
		
		}
	}
	
	public class UserToUser_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.12
	public UserToUser_25Access getRule_UserToUser_25() {
		return new UserToUser_25Access();
	}
	
	public class UserToUser_25Access extends NeoRuleCoAccess<UserToUser_25Data, UserToUser_25CoData, UserToUser_25Mask> {
		public final String _fu = "fu";
		public final String _fn = "fn";
		public final String _iu = "iu";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<UserToUser_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_25Data(d));
		}
			
		@Override
		public Stream<UserToUser_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new UserToUser_25CoData(d));
		}
		
		@Override
		public UserToUser_25Mask mask() {
			return new UserToUser_25Mask();
		}
	}
	
	public class UserToUser_25Data extends NeoData {
		public UserToUser_25Data(Record data) {
		
		}
	}
	
	public class UserToUser_25CoData extends NeoData {
		public UserToUser_25CoData(Record data) {
		
		}
	}
	
	public class UserToUser_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.13
	public RequestFriendshipAccess getRule_RequestFriendship() {
		return new RequestFriendshipAccess();
	}
	
	public class RequestFriendshipAccess extends NeoRuleCoAccess<RequestFriendshipData, RequestFriendshipCoData, RequestFriendshipMask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _in = "in";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RequestFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RequestFriendshipData(d));
		}
			
		@Override
		public Stream<RequestFriendshipCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RequestFriendshipCoData(d));
		}
		
		@Override
		public RequestFriendshipMask mask() {
			return new RequestFriendshipMask();
		}
	}
	
	public class RequestFriendshipData extends NeoData {
		public RequestFriendshipData(Record data) {
		
		}
	}
	
	public class RequestFriendshipCoData extends NeoData {
		public RequestFriendshipCoData(Record data) {
		
		}
	}
	
	public class RequestFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.14
	public AcceptFriendshipAccess getRule_AcceptFriendship() {
		return new AcceptFriendshipAccess();
	}
	
	public class AcceptFriendshipAccess extends NeoRuleCoAccess<AcceptFriendshipData, AcceptFriendshipCoData, AcceptFriendshipMask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendshipData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendshipData(d));
		}
			
		@Override
		public Stream<AcceptFriendshipCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendshipCoData(d));
		}
		
		@Override
		public AcceptFriendshipMask mask() {
			return new AcceptFriendshipMask();
		}
	}
	
	public class AcceptFriendshipData extends NeoData {
		public AcceptFriendshipData(Record data) {
		
		}
	}
	
	public class AcceptFriendshipCoData extends NeoData {
		public AcceptFriendshipCoData(Record data) {
		
		}
	}
	
	public class AcceptFriendshipMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.15
	public AcceptFriendship_1Access getRule_AcceptFriendship_1() {
		return new AcceptFriendship_1Access();
	}
	
	public class AcceptFriendship_1Access extends NeoRuleCoAccess<AcceptFriendship_1Data, AcceptFriendship_1CoData, AcceptFriendship_1Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_1Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_1CoData(d));
		}
		
		@Override
		public AcceptFriendship_1Mask mask() {
			return new AcceptFriendship_1Mask();
		}
	}
	
	public class AcceptFriendship_1Data extends NeoData {
		public AcceptFriendship_1Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_1CoData extends NeoData {
		public AcceptFriendship_1CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.16
	public AcceptFriendship_2Access getRule_AcceptFriendship_2() {
		return new AcceptFriendship_2Access();
	}
	
	public class AcceptFriendship_2Access extends NeoRuleCoAccess<AcceptFriendship_2Data, AcceptFriendship_2CoData, AcceptFriendship_2Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_2Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_2CoData(d));
		}
		
		@Override
		public AcceptFriendship_2Mask mask() {
			return new AcceptFriendship_2Mask();
		}
	}
	
	public class AcceptFriendship_2Data extends NeoData {
		public AcceptFriendship_2Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_2CoData extends NeoData {
		public AcceptFriendship_2CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.17
	public AcceptFriendship_8Access getRule_AcceptFriendship_8() {
		return new AcceptFriendship_8Access();
	}
	
	public class AcceptFriendship_8Access extends NeoRuleCoAccess<AcceptFriendship_8Data, AcceptFriendship_8CoData, AcceptFriendship_8Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_8Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_8CoData(d));
		}
		
		@Override
		public AcceptFriendship_8Mask mask() {
			return new AcceptFriendship_8Mask();
		}
	}
	
	public class AcceptFriendship_8Data extends NeoData {
		public AcceptFriendship_8Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_8CoData extends NeoData {
		public AcceptFriendship_8CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.18
	public AcceptFriendship_10Access getRule_AcceptFriendship_10() {
		return new AcceptFriendship_10Access();
	}
	
	public class AcceptFriendship_10Access extends NeoRuleCoAccess<AcceptFriendship_10Data, AcceptFriendship_10CoData, AcceptFriendship_10Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_10Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_10Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_10CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_10CoData(d));
		}
		
		@Override
		public AcceptFriendship_10Mask mask() {
			return new AcceptFriendship_10Mask();
		}
	}
	
	public class AcceptFriendship_10Data extends NeoData {
		public AcceptFriendship_10Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_10CoData extends NeoData {
		public AcceptFriendship_10CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_10Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.19
	public AcceptFriendship_16Access getRule_AcceptFriendship_16() {
		return new AcceptFriendship_16Access();
	}
	
	public class AcceptFriendship_16Access extends NeoRuleCoAccess<AcceptFriendship_16Data, AcceptFriendship_16CoData, AcceptFriendship_16Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_16Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_16CoData(d));
		}
		
		@Override
		public AcceptFriendship_16Mask mask() {
			return new AcceptFriendship_16Mask();
		}
	}
	
	public class AcceptFriendship_16Data extends NeoData {
		public AcceptFriendship_16Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_16CoData extends NeoData {
		public AcceptFriendship_16CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.20
	public AcceptFriendship_18Access getRule_AcceptFriendship_18() {
		return new AcceptFriendship_18Access();
	}
	
	public class AcceptFriendship_18Access extends NeoRuleCoAccess<AcceptFriendship_18Data, AcceptFriendship_18CoData, AcceptFriendship_18Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_18Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_18Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_18CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_18CoData(d));
		}
		
		@Override
		public AcceptFriendship_18Mask mask() {
			return new AcceptFriendship_18Mask();
		}
	}
	
	public class AcceptFriendship_18Data extends NeoData {
		public AcceptFriendship_18Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_18CoData extends NeoData {
		public AcceptFriendship_18CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_18Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.21
	public AcceptFriendship_24Access getRule_AcceptFriendship_24() {
		return new AcceptFriendship_24Access();
	}
	
	public class AcceptFriendship_24Access extends NeoRuleCoAccess<AcceptFriendship_24Data, AcceptFriendship_24CoData, AcceptFriendship_24Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_24Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_24Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_24CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_24CoData(d));
		}
		
		@Override
		public AcceptFriendship_24Mask mask() {
			return new AcceptFriendship_24Mask();
		}
	}
	
	public class AcceptFriendship_24Data extends NeoData {
		public AcceptFriendship_24Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_24CoData extends NeoData {
		public AcceptFriendship_24CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_24Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.22
	public AcceptFriendship_26Access getRule_AcceptFriendship_26() {
		return new AcceptFriendship_26Access();
	}
	
	public class AcceptFriendship_26Access extends NeoRuleCoAccess<AcceptFriendship_26Data, AcceptFriendship_26CoData, AcceptFriendship_26Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_26Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_26Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_26CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_26CoData(d));
		}
		
		@Override
		public AcceptFriendship_26Mask mask() {
			return new AcceptFriendship_26Mask();
		}
	}
	
	public class AcceptFriendship_26Data extends NeoData {
		public AcceptFriendship_26Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_26CoData extends NeoData {
		public AcceptFriendship_26CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_26Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FacebookToInstagram_Constrained/bin/tgg/FacebookToInstagram_Constrained_MI.msl#//@entities.23
	public AcceptFriendship_30Access getRule_AcceptFriendship_30() {
		return new AcceptFriendship_30Access();
	}
	
	public class AcceptFriendship_30Access extends NeoRuleCoAccess<AcceptFriendship_30Data, AcceptFriendship_30CoData, AcceptFriendship_30Mask> {
		public final String _fu1 = "fu1";
		public final String _fu2 = "fu2";
		public final String _fn = "fn";
		public final String _fri = "fri";
		public final String _iu1 = "iu1";
		public final String _iu2 = "iu2";
		public final String _in = "in";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<AcceptFriendship_30Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_30Data(d));
		}
			
		@Override
		public Stream<AcceptFriendship_30CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AcceptFriendship_30CoData(d));
		}
		
		@Override
		public AcceptFriendship_30Mask mask() {
			return new AcceptFriendship_30Mask();
		}
	}
	
	public class AcceptFriendship_30Data extends NeoData {
		public AcceptFriendship_30Data(Record data) {
		
		}
	}
	
	public class AcceptFriendship_30CoData extends NeoData {
		public AcceptFriendship_30CoData(Record data) {
		
		}
	}
	
	public class AcceptFriendship_30Mask extends NeoMask {
	}
}
