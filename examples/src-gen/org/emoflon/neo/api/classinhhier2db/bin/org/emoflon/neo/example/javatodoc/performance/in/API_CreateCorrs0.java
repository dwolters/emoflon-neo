/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.org.emoflon.neo.example.javatodoc.performance.in;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_CreateCorrs0 {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_CreateCorrs0(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_CreateCorrs0(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs0.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_CreateCorrs0(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs0.msl#//@entities.0
	public CreateClazzToDoc0Access getRule_CreateClazzToDoc0() {
		return new CreateClazzToDoc0Access();
	}
	
	public class CreateClazzToDoc0Access extends NeoRuleCoAccess<CreateClazzToDoc0Data, CreateClazzToDoc0CoData, CreateClazzToDoc0Mask> {
		public final String _c0 = "c0";
		public final String _d0 = "d0";
		public final String _c1 = "c1";
		public final String _d1 = "d1";
		public final String _c2 = "c2";
		public final String _d2 = "d2";
		public final String _c3 = "c3";
		public final String _d3 = "d3";
		public final String _c4 = "c4";
		public final String _d4 = "d4";
		public final String _c5 = "c5";
		public final String _d5 = "d5";
		public final String _c6 = "c6";
		public final String _d6 = "d6";
		public final String _c7 = "c7";
		public final String _d7 = "d7";
		public final String _c8 = "c8";
		public final String _d8 = "d8";
		public final String _c9 = "c9";
		public final String _d9 = "d9";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(0);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateClazzToDoc0Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateClazzToDoc0Data(d));
		}
			
		@Override
		public Stream<CreateClazzToDoc0CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateClazzToDoc0CoData(d));
		}
		
		@Override
		public CreateClazzToDoc0Mask mask() {
			return new CreateClazzToDoc0Mask();
		}
	}
	
	public class CreateClazzToDoc0Data extends NeoData {
		public CreateClazzToDoc0Data(Record data) {
		
		}
	}
	
	public class CreateClazzToDoc0CoData extends NeoData {
		public CreateClazzToDoc0CoData(Record data) {
		
		}
	}
	
	public class CreateClazzToDoc0Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs0.msl#//@entities.1
	public CreateMethodToEntry0Access getRule_CreateMethodToEntry0() {
		return new CreateMethodToEntry0Access();
	}
	
	public class CreateMethodToEntry0Access extends NeoRuleCoAccess<CreateMethodToEntry0Data, CreateMethodToEntry0CoData, CreateMethodToEntry0Mask> {
		public final String _m10 = "m10";
		public final String _e10 = "e10";
		public final String _p58 = "p58";
		public final String _p84 = "p84";
		public final String _m11 = "m11";
		public final String _e11 = "e11";
		public final String _p82 = "p82";
		public final String _p57 = "p57";
		public final String _p54 = "p54";
		public final String _m12 = "m12";
		public final String _e12 = "e12";
		public final String _p77 = "p77";
		public final String _p76 = "p76";
		public final String _m13 = "m13";
		public final String _e13 = "e13";
		public final String _p53 = "p53";
		public final String _p86 = "p86";
		public final String _p69 = "p69";
		public final String _m14 = "m14";
		public final String _e14 = "e14";
		public final String _p92 = "p92";
		public final String _p85 = "p85";
		public final String _m15 = "m15";
		public final String _e15 = "e15";
		public final String _p70 = "p70";
		public final String _p88 = "p88";
		public final String _m16 = "m16";
		public final String _e16 = "e16";
		public final String _p65 = "p65";
		public final String _m17 = "m17";
		public final String _e17 = "e17";
		public final String _p95 = "p95";
		public final String _p81 = "p81";
		public final String _p72 = "p72";
		public final String _m18 = "m18";
		public final String _e18 = "e18";
		public final String _p59 = "p59";
		public final String _m19 = "m19";
		public final String _e19 = "e19";
		public final String _m20 = "m20";
		public final String _e20 = "e20";
		public final String _p93 = "p93";
		public final String _m21 = "m21";
		public final String _e21 = "e21";
		public final String _p99 = "p99";
		public final String _p97 = "p97";
		public final String _m22 = "m22";
		public final String _e22 = "e22";
		public final String _p73 = "p73";
		public final String _m23 = "m23";
		public final String _e23 = "e23";
		public final String _p56 = "p56";
		public final String _m24 = "m24";
		public final String _e24 = "e24";
		public final String _m25 = "m25";
		public final String _e25 = "e25";
		public final String _p79 = "p79";
		public final String _m26 = "m26";
		public final String _e26 = "e26";
		public final String _m27 = "m27";
		public final String _e27 = "e27";
		public final String _m28 = "m28";
		public final String _e28 = "e28";
		public final String _m29 = "m29";
		public final String _e29 = "e29";
		public final String _p78 = "p78";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateMethodToEntry0Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateMethodToEntry0Data(d));
		}
			
		@Override
		public Stream<CreateMethodToEntry0CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateMethodToEntry0CoData(d));
		}
		
		@Override
		public CreateMethodToEntry0Mask mask() {
			return new CreateMethodToEntry0Mask();
		}
	}
	
	public class CreateMethodToEntry0Data extends NeoData {
		public CreateMethodToEntry0Data(Record data) {
		
		}
	}
	
	public class CreateMethodToEntry0CoData extends NeoData {
		public CreateMethodToEntry0CoData(Record data) {
		
		}
	}
	
	public class CreateMethodToEntry0Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs0.msl#//@entities.2
	public CreateFieldToEntry0Access getRule_CreateFieldToEntry0() {
		return new CreateFieldToEntry0Access();
	}
	
	public class CreateFieldToEntry0Access extends NeoRuleCoAccess<CreateFieldToEntry0Data, CreateFieldToEntry0CoData, CreateFieldToEntry0Mask> {
		public final String _f30 = "f30";
		public final String _f31 = "f31";
		public final String _f32 = "f32";
		public final String _f33 = "f33";
		public final String _f34 = "f34";
		public final String _f35 = "f35";
		public final String _f36 = "f36";
		public final String _f37 = "f37";
		public final String _f38 = "f38";
		public final String _f39 = "f39";
		public final String _f40 = "f40";
		public final String _f41 = "f41";
		public final String _f42 = "f42";
		public final String _f43 = "f43";
		public final String _f44 = "f44";
		public final String _f45 = "f45";
		public final String _f46 = "f46";
		public final String _f47 = "f47";
		public final String _f48 = "f48";
		public final String _f49 = "f49";
		public final String _e30 = "e30";
		public final String _e31 = "e31";
		public final String _e32 = "e32";
		public final String _e33 = "e33";
		public final String _e34 = "e34";
		public final String _e35 = "e35";
		public final String _e36 = "e36";
		public final String _e37 = "e37";
		public final String _e38 = "e38";
		public final String _e39 = "e39";
		public final String _e40 = "e40";
		public final String _e41 = "e41";
		public final String _e42 = "e42";
		public final String _e43 = "e43";
		public final String _e44 = "e44";
		public final String _e45 = "e45";
		public final String _e46 = "e46";
		public final String _e47 = "e47";
		public final String _e48 = "e48";
		public final String _e49 = "e49";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFieldToEntry0Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFieldToEntry0Data(d));
		}
			
		@Override
		public Stream<CreateFieldToEntry0CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFieldToEntry0CoData(d));
		}
		
		@Override
		public CreateFieldToEntry0Mask mask() {
			return new CreateFieldToEntry0Mask();
		}
	}
	
	public class CreateFieldToEntry0Data extends NeoData {
		public CreateFieldToEntry0Data(Record data) {
		
		}
	}
	
	public class CreateFieldToEntry0CoData extends NeoData {
		public CreateFieldToEntry0CoData(Record data) {
		
		}
	}
	
	public class CreateFieldToEntry0Mask extends NeoMask {
	}
}
