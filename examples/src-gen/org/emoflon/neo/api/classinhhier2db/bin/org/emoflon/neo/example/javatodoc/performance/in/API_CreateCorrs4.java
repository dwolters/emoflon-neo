/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.org.emoflon.neo.example.javatodoc.performance.in;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_CreateCorrs4 {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_CreateCorrs4(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_CreateCorrs4(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs4.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_CreateCorrs4(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs4.msl#//@entities.0
	public CreateClazzToDoc4Access getRule_CreateClazzToDoc4() {
		return new CreateClazzToDoc4Access();
	}
	
	public class CreateClazzToDoc4Access extends NeoRuleCoAccess<CreateClazzToDoc4Data, CreateClazzToDoc4CoData, CreateClazzToDoc4Mask> {
		public final String _c400 = "c400";
		public final String _d400 = "d400";
		public final String _c401 = "c401";
		public final String _d401 = "d401";
		public final String _c402 = "c402";
		public final String _d402 = "d402";
		public final String _c403 = "c403";
		public final String _d403 = "d403";
		public final String _c404 = "c404";
		public final String _d404 = "d404";
		public final String _c405 = "c405";
		public final String _d405 = "d405";
		public final String _c406 = "c406";
		public final String _d406 = "d406";
		public final String _c407 = "c407";
		public final String _d407 = "d407";
		public final String _c408 = "c408";
		public final String _d408 = "d408";
		public final String _c409 = "c409";
		public final String _d409 = "d409";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(0);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateClazzToDoc4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateClazzToDoc4Data(d));
		}
			
		@Override
		public Stream<CreateClazzToDoc4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateClazzToDoc4CoData(d));
		}
		
		@Override
		public CreateClazzToDoc4Mask mask() {
			return new CreateClazzToDoc4Mask();
		}
	}
	
	public class CreateClazzToDoc4Data extends NeoData {
		public CreateClazzToDoc4Data(Record data) {
		
		}
	}
	
	public class CreateClazzToDoc4CoData extends NeoData {
		public CreateClazzToDoc4CoData(Record data) {
		
		}
	}
	
	public class CreateClazzToDoc4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs4.msl#//@entities.1
	public CreateMethodToEntry4Access getRule_CreateMethodToEntry4() {
		return new CreateMethodToEntry4Access();
	}
	
	public class CreateMethodToEntry4Access extends NeoRuleCoAccess<CreateMethodToEntry4Data, CreateMethodToEntry4CoData, CreateMethodToEntry4Mask> {
		public final String _m410 = "m410";
		public final String _e410 = "e410";
		public final String _p474 = "p474";
		public final String _p457 = "p457";
		public final String _p462 = "p462";
		public final String _m411 = "m411";
		public final String _e411 = "e411";
		public final String _p477 = "p477";
		public final String _p475 = "p475";
		public final String _p476 = "p476";
		public final String _m412 = "m412";
		public final String _e412 = "e412";
		public final String _p456 = "p456";
		public final String _m413 = "m413";
		public final String _e413 = "e413";
		public final String _p480 = "p480";
		public final String _m414 = "m414";
		public final String _e414 = "e414";
		public final String _p482 = "p482";
		public final String _p455 = "p455";
		public final String _m415 = "m415";
		public final String _e415 = "e415";
		public final String _m416 = "m416";
		public final String _e416 = "e416";
		public final String _p464 = "p464";
		public final String _m417 = "m417";
		public final String _e417 = "e417";
		public final String _p470 = "p470";
		public final String _p497 = "p497";
		public final String _m418 = "m418";
		public final String _e418 = "e418";
		public final String _p459 = "p459";
		public final String _m419 = "m419";
		public final String _e419 = "e419";
		public final String _p454 = "p454";
		public final String _m420 = "m420";
		public final String _e420 = "e420";
		public final String _m421 = "m421";
		public final String _e421 = "e421";
		public final String _p488 = "p488";
		public final String _p496 = "p496";
		public final String _m422 = "m422";
		public final String _e422 = "e422";
		public final String _p481 = "p481";
		public final String _p498 = "p498";
		public final String _m423 = "m423";
		public final String _e423 = "e423";
		public final String _p453 = "p453";
		public final String _m424 = "m424";
		public final String _e424 = "e424";
		public final String _p451 = "p451";
		public final String _m425 = "m425";
		public final String _e425 = "e425";
		public final String _p468 = "p468";
		public final String _m426 = "m426";
		public final String _e426 = "e426";
		public final String _m427 = "m427";
		public final String _e427 = "e427";
		public final String _p466 = "p466";
		public final String _m428 = "m428";
		public final String _e428 = "e428";
		public final String _m429 = "m429";
		public final String _e429 = "e429";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateMethodToEntry4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateMethodToEntry4Data(d));
		}
			
		@Override
		public Stream<CreateMethodToEntry4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateMethodToEntry4CoData(d));
		}
		
		@Override
		public CreateMethodToEntry4Mask mask() {
			return new CreateMethodToEntry4Mask();
		}
	}
	
	public class CreateMethodToEntry4Data extends NeoData {
		public CreateMethodToEntry4Data(Record data) {
		
		}
	}
	
	public class CreateMethodToEntry4CoData extends NeoData {
		public CreateMethodToEntry4CoData(Record data) {
		
		}
	}
	
	public class CreateMethodToEntry4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/TestSuiteTGG/bin/org/emoflon/neo/example/javatodoc/performance/in/CreateCorrs4.msl#//@entities.2
	public CreateFieldToEntry4Access getRule_CreateFieldToEntry4() {
		return new CreateFieldToEntry4Access();
	}
	
	public class CreateFieldToEntry4Access extends NeoRuleCoAccess<CreateFieldToEntry4Data, CreateFieldToEntry4CoData, CreateFieldToEntry4Mask> {
		public final String _f430 = "f430";
		public final String _f431 = "f431";
		public final String _f432 = "f432";
		public final String _f433 = "f433";
		public final String _f434 = "f434";
		public final String _f435 = "f435";
		public final String _f436 = "f436";
		public final String _f437 = "f437";
		public final String _f438 = "f438";
		public final String _f439 = "f439";
		public final String _f440 = "f440";
		public final String _f441 = "f441";
		public final String _f442 = "f442";
		public final String _f443 = "f443";
		public final String _f444 = "f444";
		public final String _f445 = "f445";
		public final String _f446 = "f446";
		public final String _f447 = "f447";
		public final String _f448 = "f448";
		public final String _f449 = "f449";
		public final String _e430 = "e430";
		public final String _e431 = "e431";
		public final String _e432 = "e432";
		public final String _e433 = "e433";
		public final String _e434 = "e434";
		public final String _e435 = "e435";
		public final String _e436 = "e436";
		public final String _e437 = "e437";
		public final String _e438 = "e438";
		public final String _e439 = "e439";
		public final String _e440 = "e440";
		public final String _e441 = "e441";
		public final String _e442 = "e442";
		public final String _e443 = "e443";
		public final String _e444 = "e444";
		public final String _e445 = "e445";
		public final String _e446 = "e446";
		public final String _e447 = "e447";
		public final String _e448 = "e448";
		public final String _e449 = "e449";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFieldToEntry4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFieldToEntry4Data(d));
		}
			
		@Override
		public Stream<CreateFieldToEntry4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFieldToEntry4CoData(d));
		}
		
		@Override
		public CreateFieldToEntry4Mask mask() {
			return new CreateFieldToEntry4Mask();
		}
	}
	
	public class CreateFieldToEntry4Data extends NeoData {
		public CreateFieldToEntry4Data(Record data) {
		
		}
	}
	
	public class CreateFieldToEntry4CoData extends NeoData {
		public CreateFieldToEntry4CoData(Record data) {
		
		}
	}
	
	public class CreateFieldToEntry4Mask extends NeoMask {
	}
}
