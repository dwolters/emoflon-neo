/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.org.moflon.tutorial.sokobangamegui.patterns;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_SokobanGUIPatterns {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_SokobanGUIPatterns(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_SokobanGUIPatterns(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_SokobanGUIPatterns(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.0
	public BoardAccess getPattern_Board() {
		return new BoardAccess();
	}
	
	public class BoardAccess extends NeoPatternAccess<BoardData, BoardMask> {
		public final String _board = "board";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(0);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BoardData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoardData(d));
		}
		
		@Override
		public BoardMask mask() {
			return new BoardMask();
		}
	}
	
	public class BoardData extends NeoData {
		public final BoardNode _board;
		
		public BoardData(Record data) {
			var _board = data.get("board");
			this._board = new BoardNode(_board);
		}
		
		
		public class BoardNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BoardNode(Value _board) {
				if(!_board.get("width").isNull())
					this._width = _board.get("width").asInt();
				if(!_board.get("height").isNull())
					this._height = _board.get("height").asInt();
				if(!_board.get("ename").isNull())
					this._ename = _board.get("ename").asString();
			}
		}
		
	}
	
	public class BoardMask extends NeoMask {
		public BoardMask setBoard(Long value) {
			nodeMask.put("board", value);
			return this;
		}
		public BoardMask setBoardWidth(int value) {
			attributeMask.put("board.width", value);
			return this;
		}
		public BoardMask setBoardHeight(int value) {
			attributeMask.put("board.height", value);
			return this;
		}
		public BoardMask setBoardEname(String value) {
			attributeMask.put("board.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.1
	public FieldsAccess getPattern_Fields() {
		return new FieldsAccess();
	}
	
	public class FieldsAccess extends NeoPatternAccess<FieldsData, FieldsMask> {
		public final String _board = "board";
		public final String _field = "field";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(1);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldsData(d));
		}
		
		@Override
		public FieldsMask mask() {
			return new FieldsMask();
		}
	}
	
	public class FieldsData extends NeoData {
		public final BoardNode _board;
		public final Board_fields_0_fieldRel _board_fields_0_field;
		public final FieldNode _field;
		
		public FieldsData(Record data) {
			var _board = data.get("board");
			this._board = new BoardNode(_board);
			var _board_fields_0_field = data.get("board_fields_0_field");
			this._board_fields_0_field = new Board_fields_0_fieldRel(_board_fields_0_field);
			var _field = data.get("field");
			this._field = new FieldNode(_field);
		}
		
		
		public class BoardNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BoardNode(Value _board) {
				if(!_board.get("width").isNull())
					this._width = _board.get("width").asInt();
				if(!_board.get("height").isNull())
					this._height = _board.get("height").asInt();
				if(!_board.get("ename").isNull())
					this._ename = _board.get("ename").asString();
			}
		}
		
		public class Board_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public Board_fields_0_fieldRel(Value _board_fields_0_field) {
				if(!_board_fields_0_field.get("row").isNull())
					this._row = _board_fields_0_field.get("row").asInt();
				if(!_board_fields_0_field.get("col").isNull())
					this._col = _board_fields_0_field.get("col").asInt();
			}
		}
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
	}
	
	public class FieldsMask extends NeoMask {
		public FieldsMask setBoard(Long value) {
			nodeMask.put("board", value);
			return this;
		}
		public FieldsMask setBoardWidth(int value) {
			attributeMask.put("board.width", value);
			return this;
		}
		public FieldsMask setBoardHeight(int value) {
			attributeMask.put("board.height", value);
			return this;
		}
		public FieldsMask setBoardEname(String value) {
			attributeMask.put("board.ename", value);
			return this;
		}
		public FieldsMask setBoard_fields_0_fieldRow(int value) {
			attributeMask.put("board_fields_0_field.row", value);
			return this;
		}
		public FieldsMask setBoard_fields_0_fieldCol(int value) {
			attributeMask.put("board_fields_0_field.col", value);
			return this;
		}
		public FieldsMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public FieldsMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public FieldsMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.2
	public OccupiedAccess getPattern_Occupied() {
		return new OccupiedAccess();
	}
	
	public class OccupiedAccess extends NeoPatternAccess<OccupiedData, OccupiedMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OccupiedData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OccupiedData(d));
		}
		
		@Override
		public OccupiedMask mask() {
			return new OccupiedMask();
		}
	}
	
	public class OccupiedData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public OccupiedData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class OccupiedMask extends NeoMask {
		public OccupiedMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public OccupiedMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public OccupiedMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public OccupiedMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public OccupiedMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.3
	public EmptyFieldsAccess getPattern_EmptyFields() {
		return new EmptyFieldsAccess();
	}
	
	public class EmptyFieldsAccess extends NeoPatternAccess<EmptyFieldsData, EmptyFieldsMask> {
		public final String _field = "field";
		public final String _board = "board";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(3);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<EmptyFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new EmptyFieldsData(d));
		}
		
		@Override
		public EmptyFieldsMask mask() {
			return new EmptyFieldsMask();
		}
	}
	
	public class EmptyFieldsData extends NeoData {
		public final FieldNode _field;
		public final BoardNode _board;
		public final Board_fields_0_fieldRel _board_fields_0_field;
		
		public EmptyFieldsData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _board = data.get("board");
			this._board = new BoardNode(_board);
			var _board_fields_0_field = data.get("board_fields_0_field");
			this._board_fields_0_field = new Board_fields_0_fieldRel(_board_fields_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class BoardNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BoardNode(Value _board) {
				if(!_board.get("width").isNull())
					this._width = _board.get("width").asInt();
				if(!_board.get("height").isNull())
					this._height = _board.get("height").asInt();
				if(!_board.get("ename").isNull())
					this._ename = _board.get("ename").asString();
			}
		}
		
		public class Board_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public Board_fields_0_fieldRel(Value _board_fields_0_field) {
				if(!_board_fields_0_field.get("row").isNull())
					this._row = _board_fields_0_field.get("row").asInt();
				if(!_board_fields_0_field.get("col").isNull())
					this._col = _board_fields_0_field.get("col").asInt();
			}
		}
	}
	
	public class EmptyFieldsMask extends NeoMask {
		public EmptyFieldsMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public EmptyFieldsMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public EmptyFieldsMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public EmptyFieldsMask setBoard(Long value) {
			nodeMask.put("board", value);
			return this;
		}
		public EmptyFieldsMask setBoardWidth(int value) {
			attributeMask.put("board.width", value);
			return this;
		}
		public EmptyFieldsMask setBoardHeight(int value) {
			attributeMask.put("board.height", value);
			return this;
		}
		public EmptyFieldsMask setBoardEname(String value) {
			attributeMask.put("board.ename", value);
			return this;
		}
		public EmptyFieldsMask setBoard_fields_0_fieldRow(int value) {
			attributeMask.put("board_fields_0_field.row", value);
			return this;
		}
		public EmptyFieldsMask setBoard_fields_0_fieldCol(int value) {
			attributeMask.put("board_fields_0_field.col", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.4
	public OccupiedFieldsAccess getPattern_OccupiedFields() {
		return new OccupiedFieldsAccess();
	}
	
	public class OccupiedFieldsAccess extends NeoPatternAccess<OccupiedFieldsData, OccupiedFieldsMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		public final String _board = "board";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(4);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OccupiedFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OccupiedFieldsData(d));
		}
		
		@Override
		public OccupiedFieldsMask mask() {
			return new OccupiedFieldsMask();
		}
	}
	
	public class OccupiedFieldsData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		public final BoardNode _board;
		public final Board_fields_0_fieldRel _board_fields_0_field;
		
		public OccupiedFieldsData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
			var _board = data.get("board");
			this._board = new BoardNode(_board);
			var _board_fields_0_field = data.get("board_fields_0_field");
			this._board_fields_0_field = new Board_fields_0_fieldRel(_board_fields_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
		public class BoardNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BoardNode(Value _board) {
				if(!_board.get("width").isNull())
					this._width = _board.get("width").asInt();
				if(!_board.get("height").isNull())
					this._height = _board.get("height").asInt();
				if(!_board.get("ename").isNull())
					this._ename = _board.get("ename").asString();
			}
		}
		
		public class Board_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public Board_fields_0_fieldRel(Value _board_fields_0_field) {
				if(!_board_fields_0_field.get("row").isNull())
					this._row = _board_fields_0_field.get("row").asInt();
				if(!_board_fields_0_field.get("col").isNull())
					this._col = _board_fields_0_field.get("col").asInt();
			}
		}
	}
	
	public class OccupiedFieldsMask extends NeoMask {
		public OccupiedFieldsMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public OccupiedFieldsMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public OccupiedFieldsMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public OccupiedFieldsMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public OccupiedFieldsMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public OccupiedFieldsMask setBoard(Long value) {
			nodeMask.put("board", value);
			return this;
		}
		public OccupiedFieldsMask setBoardWidth(int value) {
			attributeMask.put("board.width", value);
			return this;
		}
		public OccupiedFieldsMask setBoardHeight(int value) {
			attributeMask.put("board.height", value);
			return this;
		}
		public OccupiedFieldsMask setBoardEname(String value) {
			attributeMask.put("board.ename", value);
			return this;
		}
		public OccupiedFieldsMask setBoard_fields_0_fieldRow(int value) {
			attributeMask.put("board_fields_0_field.row", value);
			return this;
		}
		public OccupiedFieldsMask setBoard_fields_0_fieldCol(int value) {
			attributeMask.put("board_fields_0_field.col", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.5
	public FigureTypesAccess getPattern_FigureTypes() {
		return new FigureTypesAccess();
	}
	
	public class FigureTypesAccess extends NeoPatternAccess<FigureTypesData, FigureTypesMask> {
		public final String _figClass = "figClass";
		public final String _eclass = "eclass";
		public final String _mm = "mm";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(5);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FigureTypesData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FigureTypesData(d));
		}
		
		@Override
		public FigureTypesMask mask() {
			return new FigureTypesMask();
		}
	}
	
	public class FigureTypesData extends NeoData {
		public final FigClassNode _figClass;
		public final EclassNode _eclass;
		public final Eclass_eSuperType_0_figClassRel _eclass_eSuperType_0_figClass;
		public final MmNode _mm;
		
		public FigureTypesData(Record data) {
			var _figClass = data.get("figClass");
			this._figClass = new FigClassNode(_figClass);
			var _eclass = data.get("eclass");
			this._eclass = new EclassNode(_eclass);
			var _eclass_eSuperType_0_figClass = data.get("eclass_eSuperType_0_figClass");
			this._eclass_eSuperType_0_figClass = new Eclass_eSuperType_0_figClassRel(_eclass_eSuperType_0_figClass);
			var _mm = data.get("mm");
			this._mm = new MmNode(_mm);
		}
		
		
		public class FigClassNode {
			public String _ename;
			public String _enamespace;
			public boolean __tr_;
			public boolean __de_;
			public boolean __cr_;
			public boolean __ex_;
			
			public FigClassNode(Value _figClass) {
				if(!_figClass.get("ename").isNull())
					this._ename = _figClass.get("ename").asString();
				if(!_figClass.get("enamespace").isNull())
					this._enamespace = _figClass.get("enamespace").asString();
				if(!_figClass.get("_tr_").isNull())
					this.__tr_ = _figClass.get("_tr_").asBoolean();
				if(!_figClass.get("_de_").isNull())
					this.__de_ = _figClass.get("_de_").asBoolean();
				if(!_figClass.get("_cr_").isNull())
					this.__cr_ = _figClass.get("_cr_").asBoolean();
				if(!_figClass.get("_ex_").isNull())
					this.__ex_ = _figClass.get("_ex_").asBoolean();
			}
		}
		
		public class EclassNode {
			public String _ename;
			public String _enamespace;
			public boolean __tr_;
			public boolean __de_;
			public boolean __cr_;
			public boolean __ex_;
			
			public EclassNode(Value _eclass) {
				if(!_eclass.get("ename").isNull())
					this._ename = _eclass.get("ename").asString();
				if(!_eclass.get("enamespace").isNull())
					this._enamespace = _eclass.get("enamespace").asString();
				if(!_eclass.get("_tr_").isNull())
					this.__tr_ = _eclass.get("_tr_").asBoolean();
				if(!_eclass.get("_de_").isNull())
					this.__de_ = _eclass.get("_de_").asBoolean();
				if(!_eclass.get("_cr_").isNull())
					this.__cr_ = _eclass.get("_cr_").asBoolean();
				if(!_eclass.get("_ex_").isNull())
					this.__ex_ = _eclass.get("_ex_").asBoolean();
			}
		}
		
		public class Eclass_eSuperType_0_figClassRel {
		
			public Eclass_eSuperType_0_figClassRel(Value _eclass_eSuperType_0_figClass) {
			}
		}
		public class MmNode {
			public String _ename;
			public String _enamespace;
			public boolean __tr_;
			public boolean __de_;
			public boolean __cr_;
			public boolean __ex_;
			
			public MmNode(Value _mm) {
				if(!_mm.get("ename").isNull())
					this._ename = _mm.get("ename").asString();
				if(!_mm.get("enamespace").isNull())
					this._enamespace = _mm.get("enamespace").asString();
				if(!_mm.get("_tr_").isNull())
					this.__tr_ = _mm.get("_tr_").asBoolean();
				if(!_mm.get("_de_").isNull())
					this.__de_ = _mm.get("_de_").asBoolean();
				if(!_mm.get("_cr_").isNull())
					this.__cr_ = _mm.get("_cr_").asBoolean();
				if(!_mm.get("_ex_").isNull())
					this.__ex_ = _mm.get("_ex_").asBoolean();
			}
		}
		
	}
	
	public class FigureTypesMask extends NeoMask {
		public FigureTypesMask setFigClass(Long value) {
			nodeMask.put("figClass", value);
			return this;
		}
		public FigureTypesMask setFigClassEname(String value) {
			attributeMask.put("figClass.ename", value);
			return this;
		}
		public FigureTypesMask setFigClassEnamespace(String value) {
			attributeMask.put("figClass.enamespace", value);
			return this;
		}
		public FigureTypesMask setFigClass_tr_(boolean value) {
			attributeMask.put("figClass._tr_", value);
			return this;
		}
		public FigureTypesMask setFigClass_de_(boolean value) {
			attributeMask.put("figClass._de_", value);
			return this;
		}
		public FigureTypesMask setFigClass_cr_(boolean value) {
			attributeMask.put("figClass._cr_", value);
			return this;
		}
		public FigureTypesMask setFigClass_ex_(boolean value) {
			attributeMask.put("figClass._ex_", value);
			return this;
		}
		public FigureTypesMask setEclass(Long value) {
			nodeMask.put("eclass", value);
			return this;
		}
		public FigureTypesMask setEclassEname(String value) {
			attributeMask.put("eclass.ename", value);
			return this;
		}
		public FigureTypesMask setEclassEnamespace(String value) {
			attributeMask.put("eclass.enamespace", value);
			return this;
		}
		public FigureTypesMask setEclass_tr_(boolean value) {
			attributeMask.put("eclass._tr_", value);
			return this;
		}
		public FigureTypesMask setEclass_de_(boolean value) {
			attributeMask.put("eclass._de_", value);
			return this;
		}
		public FigureTypesMask setEclass_cr_(boolean value) {
			attributeMask.put("eclass._cr_", value);
			return this;
		}
		public FigureTypesMask setEclass_ex_(boolean value) {
			attributeMask.put("eclass._ex_", value);
			return this;
		}
		public FigureTypesMask setMm(Long value) {
			nodeMask.put("mm", value);
			return this;
		}
		public FigureTypesMask setMmEname(String value) {
			attributeMask.put("mm.ename", value);
			return this;
		}
		public FigureTypesMask setMmEnamespace(String value) {
			attributeMask.put("mm.enamespace", value);
			return this;
		}
		public FigureTypesMask setMm_tr_(boolean value) {
			attributeMask.put("mm._tr_", value);
			return this;
		}
		public FigureTypesMask setMm_de_(boolean value) {
			attributeMask.put("mm._de_", value);
			return this;
		}
		public FigureTypesMask setMm_cr_(boolean value) {
			attributeMask.put("mm._cr_", value);
			return this;
		}
		public FigureTypesMask setMm_ex_(boolean value) {
			attributeMask.put("mm._ex_", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.6
	public SelectedFigureAccess getPattern_SelectedFigure() {
		return new SelectedFigureAccess();
	}
	
	public class SelectedFigureAccess extends NeoPatternAccess<SelectedFigureData, SelectedFigureMask> {
		public final String _b = "b";
		public final String _fig = "fig";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(6);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SelectedFigureData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SelectedFigureData(d));
		}
		
		@Override
		public SelectedFigureMask mask() {
			return new SelectedFigureMask();
		}
	}
	
	public class SelectedFigureData extends NeoData {
		public final BNode _b;
		public final B_selectedFigure_0_figRel _b_selectedFigure_0_fig;
		public final B_fields_1_fRel _b_fields_1_f;
		public final FigNode _fig;
		public final Fig_field_0_fRel _fig_field_0_f;
		public final FNode _f;
		
		public SelectedFigureData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_selectedFigure_0_fig = data.get("b_selectedFigure_0_fig");
			this._b_selectedFigure_0_fig = new B_selectedFigure_0_figRel(_b_selectedFigure_0_fig);
			var _b_fields_1_f = data.get("b_fields_1_f");
			this._b_fields_1_f = new B_fields_1_fRel(_b_fields_1_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_f = data.get("fig_field_0_f");
			this._fig_field_0_f = new Fig_field_0_fRel(_fig_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_selectedFigure_0_figRel {
		
			public B_selectedFigure_0_figRel(Value _b_selectedFigure_0_fig) {
			}
		}
		public class B_fields_1_fRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fRel(Value _b_fields_1_f) {
				if(!_b_fields_1_f.get("row").isNull())
					this._row = _b_fields_1_f.get("row").asInt();
				if(!_b_fields_1_f.get("col").isNull())
					this._col = _b_fields_1_f.get("col").asInt();
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fRel {
		
			public Fig_field_0_fRel(Value _fig_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SelectedFigureMask extends NeoMask {
		public SelectedFigureMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public SelectedFigureMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public SelectedFigureMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public SelectedFigureMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public SelectedFigureMask setB_fields_1_fRow(int value) {
			attributeMask.put("b_fields_1_f.row", value);
			return this;
		}
		public SelectedFigureMask setB_fields_1_fCol(int value) {
			attributeMask.put("b_fields_1_f.col", value);
			return this;
		}
		public SelectedFigureMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public SelectedFigureMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public SelectedFigureMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SelectedFigureMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SelectedFigureMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.7
	public OneSokobanAccess getPattern_OneSokoban() {
		return new OneSokobanAccess();
	}
	
	public class OneSokobanAccess extends NeoPatternAccess<OneSokobanData, OneSokobanMask> {
		public final String _sok = "sok";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(7);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneSokobanData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneSokobanData(d));
		}
		
		@Override
		public OneSokobanMask mask() {
			return new OneSokobanMask();
		}
	}
	
	public class OneSokobanData extends NeoData {
		public final SokNode _sok;
		
		public OneSokobanData(Record data) {
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
		}
		
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
	}
	
	public class OneSokobanMask extends NeoMask {
		public OneSokobanMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public OneSokobanMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.8
	public TwoSokobansAccess getPattern_TwoSokobans() {
		return new TwoSokobansAccess();
	}
	
	public class TwoSokobansAccess extends NeoPatternAccess<TwoSokobansData, TwoSokobansMask> {
		public final String _sok = "sok";
		public final String _otherSok = "otherSok";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoSokobansData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoSokobansData(d));
		}
		
		@Override
		public TwoSokobansMask mask() {
			return new TwoSokobansMask();
		}
	}
	
	public class TwoSokobansData extends NeoData {
		public final SokNode _sok;
		public final OtherSokNode _otherSok;
		
		public TwoSokobansData(Record data) {
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _otherSok = data.get("otherSok");
			this._otherSok = new OtherSokNode(_otherSok);
		}
		
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class OtherSokNode {
			public String _ename;
			
			public OtherSokNode(Value _otherSok) {
				if(!_otherSok.get("ename").isNull())
					this._ename = _otherSok.get("ename").asString();
			}
		}
		
	}
	
	public class TwoSokobansMask extends NeoMask {
		public TwoSokobansMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public TwoSokobansMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
		public TwoSokobansMask setOtherSok(Long value) {
			nodeMask.put("otherSok", value);
			return this;
		}
		public TwoSokobansMask setOtherSokEname(String value) {
			attributeMask.put("otherSok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.9
	public IConstraint getConstraint_OneSokoban() {
		var c = (Constraint) spec.getEntities().get(9);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.10
	public IConstraint getConstraint_NoTwoSokobans() {
		var c = (Constraint) spec.getEntities().get(10);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.11
	public IConstraint getConstraint_ExactlyOneSokoban() {
		var c = (Constraint) spec.getEntities().get(11);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.12
	public EndFieldAccess getPattern_EndField() {
		return new EndFieldAccess();
	}
	
	public class EndFieldAccess extends NeoPatternAccess<EndFieldData, EndFieldMask> {
		public final String _endField = "endField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(12);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<EndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new EndFieldData(d));
		}
		
		@Override
		public EndFieldMask mask() {
			return new EndFieldMask();
		}
	}
	
	public class EndFieldData extends NeoData {
		public final EndFieldNode _endField;
		
		public EndFieldData(Record data) {
			var _endField = data.get("endField");
			this._endField = new EndFieldNode(_endField);
		}
		
		
		public class EndFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public EndFieldNode(Value _endField) {
				if(!_endField.get("endPos").isNull())
					this._endPos = _endField.get("endPos").asBoolean();
				if(!_endField.get("ename").isNull())
					this._ename = _endField.get("ename").asString();
			}
		}
		
	}
	
	public class EndFieldMask extends NeoMask {
		public EndFieldMask setEndField(Long value) {
			nodeMask.put("endField", value);
			return this;
		}
		public EndFieldMask setEndFieldEndPos(boolean value) {
			attributeMask.put("endField.endPos", value);
			return this;
		}
		public EndFieldMask setEndFieldEname(String value) {
			attributeMask.put("endField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.13
	public IConstraint getConstraint_OneEndField() {
		var c = (Constraint) spec.getEntities().get(13);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.14
	public BlockAccess getPattern_Block() {
		return new BlockAccess();
	}
	
	public class BlockAccess extends NeoPatternAccess<BlockData, BlockMask> {
		public final String _boulder = "boulder";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(14);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockData(d));
		}
		
		@Override
		public BlockMask mask() {
			return new BlockMask();
		}
	}
	
	public class BlockData extends NeoData {
		public final BoulderNode _boulder;
		
		public BlockData(Record data) {
			var _boulder = data.get("boulder");
			this._boulder = new BoulderNode(_boulder);
		}
		
		
		public class BoulderNode {
			public String _ename;
			
			public BoulderNode(Value _boulder) {
				if(!_boulder.get("ename").isNull())
					this._ename = _boulder.get("ename").asString();
			}
		}
		
	}
	
	public class BlockMask extends NeoMask {
		public BlockMask setBoulder(Long value) {
			nodeMask.put("boulder", value);
			return this;
		}
		public BlockMask setBoulderEname(String value) {
			attributeMask.put("boulder.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.15
	public EndFieldBlockedByBoulderAccess getPattern_EndFieldBlockedByBoulder() {
		return new EndFieldBlockedByBoulderAccess();
	}
	
	public class EndFieldBlockedByBoulderAccess extends NeoPatternAccess<EndFieldBlockedByBoulderData, EndFieldBlockedByBoulderMask> {
		public final String _boulder = "boulder";
		public final String _endField = "endField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(15);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<EndFieldBlockedByBoulderData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new EndFieldBlockedByBoulderData(d));
		}
		
		@Override
		public EndFieldBlockedByBoulderMask mask() {
			return new EndFieldBlockedByBoulderMask();
		}
	}
	
	public class EndFieldBlockedByBoulderData extends NeoData {
		public final BoulderNode _boulder;
		public final Boulder_field_0_endFieldRel _boulder_field_0_endField;
		public final EndFieldNode _endField;
		
		public EndFieldBlockedByBoulderData(Record data) {
			var _boulder = data.get("boulder");
			this._boulder = new BoulderNode(_boulder);
			var _boulder_field_0_endField = data.get("boulder_field_0_endField");
			this._boulder_field_0_endField = new Boulder_field_0_endFieldRel(_boulder_field_0_endField);
			var _endField = data.get("endField");
			this._endField = new EndFieldNode(_endField);
		}
		
		
		public class BoulderNode {
			public String _ename;
			
			public BoulderNode(Value _boulder) {
				if(!_boulder.get("ename").isNull())
					this._ename = _boulder.get("ename").asString();
			}
		}
		
		public class Boulder_field_0_endFieldRel {
		
			public Boulder_field_0_endFieldRel(Value _boulder_field_0_endField) {
			}
		}
		public class EndFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public EndFieldNode(Value _endField) {
				if(!_endField.get("endPos").isNull())
					this._endPos = _endField.get("endPos").asBoolean();
				if(!_endField.get("ename").isNull())
					this._ename = _endField.get("ename").asString();
			}
		}
		
	}
	
	public class EndFieldBlockedByBoulderMask extends NeoMask {
		public EndFieldBlockedByBoulderMask setBoulder(Long value) {
			nodeMask.put("boulder", value);
			return this;
		}
		public EndFieldBlockedByBoulderMask setBoulderEname(String value) {
			attributeMask.put("boulder.ename", value);
			return this;
		}
		public EndFieldBlockedByBoulderMask setEndField(Long value) {
			nodeMask.put("endField", value);
			return this;
		}
		public EndFieldBlockedByBoulderMask setEndFieldEndPos(boolean value) {
			attributeMask.put("endField.endPos", value);
			return this;
		}
		public EndFieldBlockedByBoulderMask setEndFieldEname(String value) {
			attributeMask.put("endField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.16
	public DeleteFigureAccess getRule_DeleteFigure() {
		return new DeleteFigureAccess();
	}
	
	public class DeleteFigureAccess extends NeoRuleCoAccess<DeleteFigureData, DeleteFigureCoData, DeleteFigureMask> {
		public final String _b = "b";
		public final String _fig = "fig";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFigureData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFigureData(d));
		}
			
		@Override
		public Stream<DeleteFigureCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFigureCoData(d));
		}
		
		@Override
		public DeleteFigureMask mask() {
			return new DeleteFigureMask();
		}
	}
	
	public class DeleteFigureData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FigNode _fig;
		public final Fig_field_0_fRel _fig_field_0_f;
		public final FNode _f;
		
		public DeleteFigureData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_f = data.get("fig_field_0_f");
			this._fig_field_0_f = new Fig_field_0_fRel(_fig_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fRel {
		
			public Fig_field_0_fRel(Value _fig_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteFigureCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public DeleteFigureCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteFigureMask extends NeoMask {
		public DeleteFigureMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public DeleteFigureMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public DeleteFigureMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public DeleteFigureMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public DeleteFigureMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public DeleteFigureMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public DeleteFigureMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public DeleteFigureMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public DeleteFigureMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public DeleteFigureMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public DeleteFigureMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.17
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.18
	public OtherFigureOnFieldAccess getPattern_OtherFigureOnField() {
		return new OtherFigureOnFieldAccess();
	}
	
	public class OtherFigureOnFieldAccess extends NeoPatternAccess<OtherFigureOnFieldData, OtherFigureOnFieldMask> {
		public final String _other = "other";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(18);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OtherFigureOnFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OtherFigureOnFieldData(d));
		}
		
		@Override
		public OtherFigureOnFieldMask mask() {
			return new OtherFigureOnFieldMask();
		}
	}
	
	public class OtherFigureOnFieldData extends NeoData {
		public final OtherNode _other;
		public final Other_field_0_fRel _other_field_0_f;
		public final FNode _f;
		
		public OtherFigureOnFieldData(Record data) {
			var _other = data.get("other");
			this._other = new OtherNode(_other);
			var _other_field_0_f = data.get("other_field_0_f");
			this._other_field_0_f = new Other_field_0_fRel(_other_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class OtherNode {
			public String _ename;
			
			public OtherNode(Value _other) {
				if(!_other.get("ename").isNull())
					this._ename = _other.get("ename").asString();
			}
		}
		
		public class Other_field_0_fRel {
		
			public Other_field_0_fRel(Value _other_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OtherFigureOnFieldMask extends NeoMask {
		public OtherFigureOnFieldMask setOther(Long value) {
			nodeMask.put("other", value);
			return this;
		}
		public OtherFigureOnFieldMask setOtherEname(String value) {
			attributeMask.put("other.ename", value);
			return this;
		}
		public OtherFigureOnFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OtherFigureOnFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OtherFigureOnFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.19
	public CreateSokobanAccess getRule_CreateSokoban() {
		return new CreateSokobanAccess();
	}
	
	public class CreateSokobanAccess extends NeoRuleCoAccess<CreateSokobanData, CreateSokobanCoData, CreateSokobanMask> {
		public final String _b = "b";
		public final String _fig = "fig";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateSokobanData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateSokobanData(d));
		}
			
		@Override
		public Stream<CreateSokobanCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateSokobanCoData(d));
		}
		
		@Override
		public CreateSokobanMask mask() {
			return new CreateSokobanMask();
		}
	}
	
	public class CreateSokobanData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public CreateSokobanData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateSokobanCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FigNode _fig;
		public final Fig_field_0_fRel _fig_field_0_f;
		public final FNode _f;
		
		public CreateSokobanCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_f = data.get("fig_field_0_f");
			this._fig_field_0_f = new Fig_field_0_fRel(_fig_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fRel {
		
			public Fig_field_0_fRel(Value _fig_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateSokobanMask extends NeoMask {
		public CreateSokobanMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateSokobanMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateSokobanMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateSokobanMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateSokobanMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public CreateSokobanMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public CreateSokobanMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public CreateSokobanMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public CreateSokobanMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public CreateSokobanMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public CreateSokobanMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.20
	public CreateBlockAccess getRule_CreateBlock() {
		return new CreateBlockAccess();
	}
	
	public class CreateBlockAccess extends NeoRuleCoAccess<CreateBlockData, CreateBlockCoData, CreateBlockMask> {
		public final String _b = "b";
		public final String _fig = "fig";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateBlockData(d));
		}
			
		@Override
		public Stream<CreateBlockCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateBlockCoData(d));
		}
		
		@Override
		public CreateBlockMask mask() {
			return new CreateBlockMask();
		}
	}
	
	public class CreateBlockData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public CreateBlockData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateBlockCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FigNode _fig;
		public final Fig_field_0_fRel _fig_field_0_f;
		public final FNode _f;
		
		public CreateBlockCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_f = data.get("fig_field_0_f");
			this._fig_field_0_f = new Fig_field_0_fRel(_fig_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fRel {
		
			public Fig_field_0_fRel(Value _fig_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateBlockMask extends NeoMask {
		public CreateBlockMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateBlockMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateBlockMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateBlockMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateBlockMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public CreateBlockMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public CreateBlockMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public CreateBlockMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public CreateBlockMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public CreateBlockMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public CreateBlockMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.21
	public CreateBoulderAccess getRule_CreateBoulder() {
		return new CreateBoulderAccess();
	}
	
	public class CreateBoulderAccess extends NeoRuleCoAccess<CreateBoulderData, CreateBoulderCoData, CreateBoulderMask> {
		public final String _b = "b";
		public final String _fig = "fig";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateBoulderData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateBoulderData(d));
		}
			
		@Override
		public Stream<CreateBoulderCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateBoulderCoData(d));
		}
		
		@Override
		public CreateBoulderMask mask() {
			return new CreateBoulderMask();
		}
	}
	
	public class CreateBoulderData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public CreateBoulderData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateBoulderCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FigNode _fig;
		public final Fig_field_0_fRel _fig_field_0_f;
		public final FNode _f;
		
		public CreateBoulderCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_f = data.get("fig_field_0_f");
			this._fig_field_0_f = new Fig_field_0_fRel(_fig_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fRel {
		
			public Fig_field_0_fRel(Value _fig_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateBoulderMask extends NeoMask {
		public CreateBoulderMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateBoulderMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateBoulderMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateBoulderMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateBoulderMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public CreateBoulderMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public CreateBoulderMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public CreateBoulderMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public CreateBoulderMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public CreateBoulderMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public CreateBoulderMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.22
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.23
	public SetEndFieldAccess getRule_SetEndField() {
		return new SetEndFieldAccess();
	}
	
	public class SetEndFieldAccess extends NeoRuleCoAccess<SetEndFieldData, SetEndFieldCoData, SetEndFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SetEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SetEndFieldData(d));
		}
			
		@Override
		public Stream<SetEndFieldCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SetEndFieldCoData(d));
		}
		
		@Override
		public SetEndFieldMask mask() {
			return new SetEndFieldMask();
		}
	}
	
	public class SetEndFieldData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public SetEndFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SetEndFieldCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public SetEndFieldCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SetEndFieldMask extends NeoMask {
		public SetEndFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public SetEndFieldMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public SetEndFieldMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public SetEndFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public SetEndFieldMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public SetEndFieldMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public SetEndFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SetEndFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SetEndFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.24
	public SetNotEndFieldAccess getRule_SetNotEndField() {
		return new SetNotEndFieldAccess();
	}
	
	public class SetNotEndFieldAccess extends NeoRuleCoAccess<SetNotEndFieldData, SetNotEndFieldCoData, SetNotEndFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SetNotEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SetNotEndFieldData(d));
		}
			
		@Override
		public Stream<SetNotEndFieldCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SetNotEndFieldCoData(d));
		}
		
		@Override
		public SetNotEndFieldMask mask() {
			return new SetNotEndFieldMask();
		}
	}
	
	public class SetNotEndFieldData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public SetNotEndFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SetNotEndFieldCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public SetNotEndFieldCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SetNotEndFieldMask extends NeoMask {
		public SetNotEndFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public SetNotEndFieldMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public SetNotEndFieldMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public SetNotEndFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public SetNotEndFieldMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public SetNotEndFieldMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public SetNotEndFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SetNotEndFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SetNotEndFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.25
	public SelectFigureAccess getRule_SelectFigure() {
		return new SelectFigureAccess();
	}
	
	public class SelectFigureAccess extends NeoRuleCoAccess<SelectFigureData, SelectFigureCoData, SelectFigureMask> {
		public final String _f = "f";
		public final String _newFig = "newFig";
		public final String _fig = "fig";
		public final String _b = "b";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SelectFigureData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SelectFigureData(d));
		}
			
		@Override
		public Stream<SelectFigureCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SelectFigureCoData(d));
		}
		
		@Override
		public SelectFigureMask mask() {
			return new SelectFigureMask();
		}
	}
	
	public class SelectFigureData extends NeoData {
		public final FNode _f;
		public final NewFigNode _newFig;
		public final NewFig_field_0_fRel _newFig_field_0_f;
		public final FigNode _fig;
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final B_selectedFigure_1_figRel _b_selectedFigure_1_fig;
		
		public SelectFigureData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _newFig = data.get("newFig");
			this._newFig = new NewFigNode(_newFig);
			var _newFig_field_0_f = data.get("newFig_field_0_f");
			this._newFig_field_0_f = new NewFig_field_0_fRel(_newFig_field_0_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _b_selectedFigure_1_fig = data.get("b_selectedFigure_1_fig");
			this._b_selectedFigure_1_fig = new B_selectedFigure_1_figRel(_b_selectedFigure_1_fig);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class NewFigNode {
			public String _ename;
			
			public NewFigNode(Value _newFig) {
				if(!_newFig.get("ename").isNull())
					this._ename = _newFig.get("ename").asString();
			}
		}
		
		public class NewFig_field_0_fRel {
		
			public NewFig_field_0_fRel(Value _newFig_field_0_f) {
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class B_selectedFigure_1_figRel {
		
			public B_selectedFigure_1_figRel(Value _b_selectedFigure_1_fig) {
			}
		}
	}
	
	public class SelectFigureCoData extends NeoData {
		public final FNode _f;
		public final NewFigNode _newFig;
		public final NewFig_field_0_fRel _newFig_field_0_f;
		public final FigNode _fig;
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final B_selectedFigure_2_newFigRel _b_selectedFigure_2_newFig;
		
		public SelectFigureCoData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _newFig = data.get("newFig");
			this._newFig = new NewFigNode(_newFig);
			var _newFig_field_0_f = data.get("newFig_field_0_f");
			this._newFig_field_0_f = new NewFig_field_0_fRel(_newFig_field_0_f);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _b_selectedFigure_2_newFig = data.get("b_selectedFigure_2_newFig");
			this._b_selectedFigure_2_newFig = new B_selectedFigure_2_newFigRel(_b_selectedFigure_2_newFig);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class NewFigNode {
			public String _ename;
			
			public NewFigNode(Value _newFig) {
				if(!_newFig.get("ename").isNull())
					this._ename = _newFig.get("ename").asString();
			}
		}
		
		public class NewFig_field_0_fRel {
		
			public NewFig_field_0_fRel(Value _newFig_field_0_f) {
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class B_selectedFigure_2_newFigRel {
		
			public B_selectedFigure_2_newFigRel(Value _b_selectedFigure_2_newFig) {
			}
		}
	}
	
	public class SelectFigureMask extends NeoMask {
		public SelectFigureMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SelectFigureMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SelectFigureMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public SelectFigureMask setNewFig(Long value) {
			nodeMask.put("newFig", value);
			return this;
		}
		public SelectFigureMask setNewFigEname(String value) {
			attributeMask.put("newFig.ename", value);
			return this;
		}
		public SelectFigureMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public SelectFigureMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public SelectFigureMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public SelectFigureMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public SelectFigureMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public SelectFigureMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public SelectFigureMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public SelectFigureMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.26
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.27
	public CreateTopLeftAccess getRule_CreateTopLeft() {
		return new CreateTopLeftAccess();
	}
	
	public class CreateTopLeftAccess extends NeoRuleCoAccess<CreateTopLeftData, CreateTopLeftCoData, CreateTopLeftMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateTopLeftData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateTopLeftData(d));
		}
			
		@Override
		public Stream<CreateTopLeftCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateTopLeftCoData(d));
		}
		
		@Override
		public CreateTopLeftMask mask() {
			return new CreateTopLeftMask();
		}
	}
	
	public class CreateTopLeftData extends NeoData {
		
		public CreateTopLeftData(Record data) {
		}
		
		
	}
	
	public class CreateTopLeftCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public CreateTopLeftCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateTopLeftMask extends NeoMask {
		public CreateTopLeftMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateTopLeftMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateTopLeftMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateTopLeftMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateTopLeftMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public CreateTopLeftMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public CreateTopLeftMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public CreateTopLeftMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public CreateTopLeftMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.28
	public CreateTopLeftWithAppCondAccess getRule_CreateTopLeftWithAppCond() {
		return new CreateTopLeftWithAppCondAccess();
	}
	
	public class CreateTopLeftWithAppCondAccess extends NeoRuleCoAccess<CreateTopLeftWithAppCondData, CreateTopLeftWithAppCondCoData, CreateTopLeftWithAppCondMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateTopLeftWithAppCondData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateTopLeftWithAppCondData(d));
		}
			
		@Override
		public Stream<CreateTopLeftWithAppCondCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateTopLeftWithAppCondCoData(d));
		}
		
		@Override
		public CreateTopLeftWithAppCondMask mask() {
			return new CreateTopLeftWithAppCondMask();
		}
	}
	
	public class CreateTopLeftWithAppCondData extends NeoData {
		
		public CreateTopLeftWithAppCondData(Record data) {
		}
		
		
	}
	
	public class CreateTopLeftWithAppCondCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public CreateTopLeftWithAppCondCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateTopLeftWithAppCondMask extends NeoMask {
		public CreateTopLeftWithAppCondMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public CreateTopLeftWithAppCondMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.29
	public TopLeftAccess getPattern_TopLeft() {
		return new TopLeftAccess();
	}
	
	public class TopLeftAccess extends NeoPatternAccess<TopLeftData, TopLeftMask> {
		public final String _otherBoard = "otherBoard";
		public final String _otherField = "otherField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(29);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TopLeftData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TopLeftData(d));
		}
		
		@Override
		public TopLeftMask mask() {
			return new TopLeftMask();
		}
	}
	
	public class TopLeftData extends NeoData {
		public final OtherBoardNode _otherBoard;
		public final OtherBoard_fields_0_otherFieldRel _otherBoard_fields_0_otherField;
		public final OtherFieldNode _otherField;
		
		public TopLeftData(Record data) {
			var _otherBoard = data.get("otherBoard");
			this._otherBoard = new OtherBoardNode(_otherBoard);
			var _otherBoard_fields_0_otherField = data.get("otherBoard_fields_0_otherField");
			this._otherBoard_fields_0_otherField = new OtherBoard_fields_0_otherFieldRel(_otherBoard_fields_0_otherField);
			var _otherField = data.get("otherField");
			this._otherField = new OtherFieldNode(_otherField);
		}
		
		
		public class OtherBoardNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public OtherBoardNode(Value _otherBoard) {
				if(!_otherBoard.get("width").isNull())
					this._width = _otherBoard.get("width").asInt();
				if(!_otherBoard.get("height").isNull())
					this._height = _otherBoard.get("height").asInt();
				if(!_otherBoard.get("ename").isNull())
					this._ename = _otherBoard.get("ename").asString();
			}
		}
		
		public class OtherBoard_fields_0_otherFieldRel {
			public int _row;
			public int _col;
		
			public OtherBoard_fields_0_otherFieldRel(Value _otherBoard_fields_0_otherField) {
				if(!_otherBoard_fields_0_otherField.get("row").isNull())
					this._row = _otherBoard_fields_0_otherField.get("row").asInt();
				if(!_otherBoard_fields_0_otherField.get("col").isNull())
					this._col = _otherBoard_fields_0_otherField.get("col").asInt();
			}
		}
		public class OtherFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public OtherFieldNode(Value _otherField) {
				if(!_otherField.get("endPos").isNull())
					this._endPos = _otherField.get("endPos").asBoolean();
				if(!_otherField.get("ename").isNull())
					this._ename = _otherField.get("ename").asString();
			}
		}
		
	}
	
	public class TopLeftMask extends NeoMask {
		public TopLeftMask setOtherBoard(Long value) {
			nodeMask.put("otherBoard", value);
			return this;
		}
		public TopLeftMask setOtherBoardWidth(int value) {
			attributeMask.put("otherBoard.width", value);
			return this;
		}
		public TopLeftMask setOtherBoardHeight(int value) {
			attributeMask.put("otherBoard.height", value);
			return this;
		}
		public TopLeftMask setOtherBoardEname(String value) {
			attributeMask.put("otherBoard.ename", value);
			return this;
		}
		public TopLeftMask setOtherBoard_fields_0_otherFieldRow(int value) {
			attributeMask.put("otherBoard_fields_0_otherField.row", value);
			return this;
		}
		public TopLeftMask setOtherBoard_fields_0_otherFieldCol(int value) {
			attributeMask.put("otherBoard_fields_0_otherField.col", value);
			return this;
		}
		public TopLeftMask setOtherField(Long value) {
			nodeMask.put("otherField", value);
			return this;
		}
		public TopLeftMask setOtherFieldEndPos(boolean value) {
			attributeMask.put("otherField.endPos", value);
			return this;
		}
		public TopLeftMask setOtherFieldEname(String value) {
			attributeMask.put("otherField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.30
	public CreateFirstRowAccess getRule_CreateFirstRow() {
		return new CreateFirstRowAccess();
	}
	
	public class CreateFirstRowAccess extends NeoRuleCoAccess<CreateFirstRowData, CreateFirstRowCoData, CreateFirstRowMask> {
		public final String _b = "b";
		public final String _rightField = "rightField";
		public final String _leftField = "leftField";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(30);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFirstRowData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFirstRowData(d));
		}
			
		@Override
		public Stream<CreateFirstRowCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFirstRowCoData(d));
		}
		
		@Override
		public CreateFirstRowMask mask() {
			return new CreateFirstRowMask();
		}
	}
	
	public class CreateFirstRowData extends NeoData {
		public final BNode _b;
		public final B_fields_1_leftFieldRel _b_fields_1_leftField;
		public final LeftFieldNode _leftField;
		
		public CreateFirstRowData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_1_leftField = data.get("b_fields_1_leftField");
			this._b_fields_1_leftField = new B_fields_1_leftFieldRel(_b_fields_1_leftField);
			var _leftField = data.get("leftField");
			this._leftField = new LeftFieldNode(_leftField);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_1_leftFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_1_leftFieldRel(Value _b_fields_1_leftField) {
				if(!_b_fields_1_leftField.get("row").isNull())
					this._row = _b_fields_1_leftField.get("row").asInt();
				if(!_b_fields_1_leftField.get("col").isNull())
					this._col = _b_fields_1_leftField.get("col").asInt();
			}
		}
		public class LeftFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public LeftFieldNode(Value _leftField) {
				if(!_leftField.get("endPos").isNull())
					this._endPos = _leftField.get("endPos").asBoolean();
				if(!_leftField.get("ename").isNull())
					this._ename = _leftField.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFirstRowCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_rightFieldRel _b_fields_0_rightField;
		public final B_fields_1_leftFieldRel _b_fields_1_leftField;
		public final RightFieldNode _rightField;
		public final LeftFieldNode _leftField;
		public final LeftField_right_0_rightFieldRel _leftField_right_0_rightField;
		
		public CreateFirstRowCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_rightField = data.get("b_fields_0_rightField");
			this._b_fields_0_rightField = new B_fields_0_rightFieldRel(_b_fields_0_rightField);
			var _b_fields_1_leftField = data.get("b_fields_1_leftField");
			this._b_fields_1_leftField = new B_fields_1_leftFieldRel(_b_fields_1_leftField);
			var _rightField = data.get("rightField");
			this._rightField = new RightFieldNode(_rightField);
			var _leftField = data.get("leftField");
			this._leftField = new LeftFieldNode(_leftField);
			var _leftField_right_0_rightField = data.get("leftField_right_0_rightField");
			this._leftField_right_0_rightField = new LeftField_right_0_rightFieldRel(_leftField_right_0_rightField);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_rightFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_rightFieldRel(Value _b_fields_0_rightField) {
				if(!_b_fields_0_rightField.get("row").isNull())
					this._row = _b_fields_0_rightField.get("row").asInt();
				if(!_b_fields_0_rightField.get("col").isNull())
					this._col = _b_fields_0_rightField.get("col").asInt();
			}
		}
		public class B_fields_1_leftFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_1_leftFieldRel(Value _b_fields_1_leftField) {
				if(!_b_fields_1_leftField.get("row").isNull())
					this._row = _b_fields_1_leftField.get("row").asInt();
				if(!_b_fields_1_leftField.get("col").isNull())
					this._col = _b_fields_1_leftField.get("col").asInt();
			}
		}
		public class RightFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public RightFieldNode(Value _rightField) {
				if(!_rightField.get("endPos").isNull())
					this._endPos = _rightField.get("endPos").asBoolean();
				if(!_rightField.get("ename").isNull())
					this._ename = _rightField.get("ename").asString();
			}
		}
		
		public class LeftFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public LeftFieldNode(Value _leftField) {
				if(!_leftField.get("endPos").isNull())
					this._endPos = _leftField.get("endPos").asBoolean();
				if(!_leftField.get("ename").isNull())
					this._ename = _leftField.get("ename").asString();
			}
		}
		
		public class LeftField_right_0_rightFieldRel {
		
			public LeftField_right_0_rightFieldRel(Value _leftField_right_0_rightField) {
			}
		}
	}
	
	public class CreateFirstRowMask extends NeoMask {
		public CreateFirstRowMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateFirstRowMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateFirstRowMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateFirstRowMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateFirstRowMask setB_fields_0_rightFieldRow(int value) {
			attributeMask.put("b_fields_0_rightField.row", value);
			return this;
		}
		public CreateFirstRowMask setB_fields_0_rightFieldCol(int value) {
			attributeMask.put("b_fields_0_rightField.col", value);
			return this;
		}
		public CreateFirstRowMask setB_fields_1_leftFieldRow(int value) {
			attributeMask.put("b_fields_1_leftField.row", value);
			return this;
		}
		public CreateFirstRowMask setB_fields_1_leftFieldCol(int value) {
			attributeMask.put("b_fields_1_leftField.col", value);
			return this;
		}
		public CreateFirstRowMask setRightField(Long value) {
			nodeMask.put("rightField", value);
			return this;
		}
		public CreateFirstRowMask setRightFieldEndPos(boolean value) {
			attributeMask.put("rightField.endPos", value);
			return this;
		}
		public CreateFirstRowMask setRightFieldEname(String value) {
			attributeMask.put("rightField.ename", value);
			return this;
		}
		public CreateFirstRowMask setLeftField(Long value) {
			nodeMask.put("leftField", value);
			return this;
		}
		public CreateFirstRowMask setLeftFieldEndPos(boolean value) {
			attributeMask.put("leftField.endPos", value);
			return this;
		}
		public CreateFirstRowMask setLeftFieldEname(String value) {
			attributeMask.put("leftField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.31
	public CreateFirstColAccess getRule_CreateFirstCol() {
		return new CreateFirstColAccess();
	}
	
	public class CreateFirstColAccess extends NeoRuleCoAccess<CreateFirstColData, CreateFirstColCoData, CreateFirstColMask> {
		public final String _bottomField = "bottomField";
		public final String _b = "b";
		public final String _topField = "topField";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(31);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFirstColData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFirstColData(d));
		}
			
		@Override
		public Stream<CreateFirstColCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFirstColCoData(d));
		}
		
		@Override
		public CreateFirstColMask mask() {
			return new CreateFirstColMask();
		}
	}
	
	public class CreateFirstColData extends NeoData {
		public final BNode _b;
		public final B_fields_1_topFieldRel _b_fields_1_topField;
		public final TopFieldNode _topField;
		
		public CreateFirstColData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_1_topField = data.get("b_fields_1_topField");
			this._b_fields_1_topField = new B_fields_1_topFieldRel(_b_fields_1_topField);
			var _topField = data.get("topField");
			this._topField = new TopFieldNode(_topField);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_1_topFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_1_topFieldRel(Value _b_fields_1_topField) {
				if(!_b_fields_1_topField.get("row").isNull())
					this._row = _b_fields_1_topField.get("row").asInt();
				if(!_b_fields_1_topField.get("col").isNull())
					this._col = _b_fields_1_topField.get("col").asInt();
			}
		}
		public class TopFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public TopFieldNode(Value _topField) {
				if(!_topField.get("endPos").isNull())
					this._endPos = _topField.get("endPos").asBoolean();
				if(!_topField.get("ename").isNull())
					this._ename = _topField.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFirstColCoData extends NeoData {
		public final BottomFieldNode _bottomField;
		public final BNode _b;
		public final B_fields_0_bottomFieldRel _b_fields_0_bottomField;
		public final B_fields_1_topFieldRel _b_fields_1_topField;
		public final TopFieldNode _topField;
		public final TopField_bottom_0_bottomFieldRel _topField_bottom_0_bottomField;
		
		public CreateFirstColCoData(Record data) {
			var _bottomField = data.get("bottomField");
			this._bottomField = new BottomFieldNode(_bottomField);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_bottomField = data.get("b_fields_0_bottomField");
			this._b_fields_0_bottomField = new B_fields_0_bottomFieldRel(_b_fields_0_bottomField);
			var _b_fields_1_topField = data.get("b_fields_1_topField");
			this._b_fields_1_topField = new B_fields_1_topFieldRel(_b_fields_1_topField);
			var _topField = data.get("topField");
			this._topField = new TopFieldNode(_topField);
			var _topField_bottom_0_bottomField = data.get("topField_bottom_0_bottomField");
			this._topField_bottom_0_bottomField = new TopField_bottom_0_bottomFieldRel(_topField_bottom_0_bottomField);
		}
		
		
		public class BottomFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public BottomFieldNode(Value _bottomField) {
				if(!_bottomField.get("endPos").isNull())
					this._endPos = _bottomField.get("endPos").asBoolean();
				if(!_bottomField.get("ename").isNull())
					this._ename = _bottomField.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_bottomFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_bottomFieldRel(Value _b_fields_0_bottomField) {
				if(!_b_fields_0_bottomField.get("row").isNull())
					this._row = _b_fields_0_bottomField.get("row").asInt();
				if(!_b_fields_0_bottomField.get("col").isNull())
					this._col = _b_fields_0_bottomField.get("col").asInt();
			}
		}
		public class B_fields_1_topFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_1_topFieldRel(Value _b_fields_1_topField) {
				if(!_b_fields_1_topField.get("row").isNull())
					this._row = _b_fields_1_topField.get("row").asInt();
				if(!_b_fields_1_topField.get("col").isNull())
					this._col = _b_fields_1_topField.get("col").asInt();
			}
		}
		public class TopFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public TopFieldNode(Value _topField) {
				if(!_topField.get("endPos").isNull())
					this._endPos = _topField.get("endPos").asBoolean();
				if(!_topField.get("ename").isNull())
					this._ename = _topField.get("ename").asString();
			}
		}
		
		public class TopField_bottom_0_bottomFieldRel {
		
			public TopField_bottom_0_bottomFieldRel(Value _topField_bottom_0_bottomField) {
			}
		}
	}
	
	public class CreateFirstColMask extends NeoMask {
		public CreateFirstColMask setBottomField(Long value) {
			nodeMask.put("bottomField", value);
			return this;
		}
		public CreateFirstColMask setBottomFieldEndPos(boolean value) {
			attributeMask.put("bottomField.endPos", value);
			return this;
		}
		public CreateFirstColMask setBottomFieldEname(String value) {
			attributeMask.put("bottomField.ename", value);
			return this;
		}
		public CreateFirstColMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateFirstColMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateFirstColMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateFirstColMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateFirstColMask setB_fields_0_bottomFieldRow(int value) {
			attributeMask.put("b_fields_0_bottomField.row", value);
			return this;
		}
		public CreateFirstColMask setB_fields_0_bottomFieldCol(int value) {
			attributeMask.put("b_fields_0_bottomField.col", value);
			return this;
		}
		public CreateFirstColMask setB_fields_1_topFieldRow(int value) {
			attributeMask.put("b_fields_1_topField.row", value);
			return this;
		}
		public CreateFirstColMask setB_fields_1_topFieldCol(int value) {
			attributeMask.put("b_fields_1_topField.col", value);
			return this;
		}
		public CreateFirstColMask setTopField(Long value) {
			nodeMask.put("topField", value);
			return this;
		}
		public CreateFirstColMask setTopFieldEndPos(boolean value) {
			attributeMask.put("topField.endPos", value);
			return this;
		}
		public CreateFirstColMask setTopFieldEname(String value) {
			attributeMask.put("topField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.32
	public CreateRestOfFieldsAccess getRule_CreateRestOfFields() {
		return new CreateRestOfFieldsAccess();
	}
	
	public class CreateRestOfFieldsAccess extends NeoRuleCoAccess<CreateRestOfFieldsData, CreateRestOfFieldsCoData, CreateRestOfFieldsMask> {
		public final String _b = "b";
		public final String _topField = "topField";
		public final String _field = "field";
		public final String _cornerField = "cornerField";
		public final String _leftField = "leftField";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(32);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateRestOfFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateRestOfFieldsData(d));
		}
			
		@Override
		public Stream<CreateRestOfFieldsCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateRestOfFieldsCoData(d));
		}
		
		@Override
		public CreateRestOfFieldsMask mask() {
			return new CreateRestOfFieldsMask();
		}
	}
	
	public class CreateRestOfFieldsData extends NeoData {
		public final BNode _b;
		public final B_fields_0_topFieldRel _b_fields_0_topField;
		public final B_fields_2_cornerFieldRel _b_fields_2_cornerField;
		public final B_fields_3_leftFieldRel _b_fields_3_leftField;
		public final TopFieldNode _topField;
		public final CornerFieldNode _cornerField;
		public final CornerField_bottom_0_leftFieldRel _cornerField_bottom_0_leftField;
		public final CornerField_right_1_topFieldRel _cornerField_right_1_topField;
		public final LeftFieldNode _leftField;
		
		public CreateRestOfFieldsData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_topField = data.get("b_fields_0_topField");
			this._b_fields_0_topField = new B_fields_0_topFieldRel(_b_fields_0_topField);
			var _b_fields_2_cornerField = data.get("b_fields_2_cornerField");
			this._b_fields_2_cornerField = new B_fields_2_cornerFieldRel(_b_fields_2_cornerField);
			var _b_fields_3_leftField = data.get("b_fields_3_leftField");
			this._b_fields_3_leftField = new B_fields_3_leftFieldRel(_b_fields_3_leftField);
			var _topField = data.get("topField");
			this._topField = new TopFieldNode(_topField);
			var _cornerField = data.get("cornerField");
			this._cornerField = new CornerFieldNode(_cornerField);
			var _cornerField_bottom_0_leftField = data.get("cornerField_bottom_0_leftField");
			this._cornerField_bottom_0_leftField = new CornerField_bottom_0_leftFieldRel(_cornerField_bottom_0_leftField);
			var _cornerField_right_1_topField = data.get("cornerField_right_1_topField");
			this._cornerField_right_1_topField = new CornerField_right_1_topFieldRel(_cornerField_right_1_topField);
			var _leftField = data.get("leftField");
			this._leftField = new LeftFieldNode(_leftField);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_topFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_topFieldRel(Value _b_fields_0_topField) {
				if(!_b_fields_0_topField.get("row").isNull())
					this._row = _b_fields_0_topField.get("row").asInt();
				if(!_b_fields_0_topField.get("col").isNull())
					this._col = _b_fields_0_topField.get("col").asInt();
			}
		}
		public class B_fields_2_cornerFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_2_cornerFieldRel(Value _b_fields_2_cornerField) {
				if(!_b_fields_2_cornerField.get("row").isNull())
					this._row = _b_fields_2_cornerField.get("row").asInt();
				if(!_b_fields_2_cornerField.get("col").isNull())
					this._col = _b_fields_2_cornerField.get("col").asInt();
			}
		}
		public class B_fields_3_leftFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_3_leftFieldRel(Value _b_fields_3_leftField) {
				if(!_b_fields_3_leftField.get("row").isNull())
					this._row = _b_fields_3_leftField.get("row").asInt();
				if(!_b_fields_3_leftField.get("col").isNull())
					this._col = _b_fields_3_leftField.get("col").asInt();
			}
		}
		public class TopFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public TopFieldNode(Value _topField) {
				if(!_topField.get("endPos").isNull())
					this._endPos = _topField.get("endPos").asBoolean();
				if(!_topField.get("ename").isNull())
					this._ename = _topField.get("ename").asString();
			}
		}
		
		public class CornerFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public CornerFieldNode(Value _cornerField) {
				if(!_cornerField.get("endPos").isNull())
					this._endPos = _cornerField.get("endPos").asBoolean();
				if(!_cornerField.get("ename").isNull())
					this._ename = _cornerField.get("ename").asString();
			}
		}
		
		public class CornerField_bottom_0_leftFieldRel {
		
			public CornerField_bottom_0_leftFieldRel(Value _cornerField_bottom_0_leftField) {
			}
		}
		public class CornerField_right_1_topFieldRel {
		
			public CornerField_right_1_topFieldRel(Value _cornerField_right_1_topField) {
			}
		}
		public class LeftFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public LeftFieldNode(Value _leftField) {
				if(!_leftField.get("endPos").isNull())
					this._endPos = _leftField.get("endPos").asBoolean();
				if(!_leftField.get("ename").isNull())
					this._ename = _leftField.get("ename").asString();
			}
		}
		
	}
	
	public class CreateRestOfFieldsCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_topFieldRel _b_fields_0_topField;
		public final B_fields_1_fieldRel _b_fields_1_field;
		public final B_fields_2_cornerFieldRel _b_fields_2_cornerField;
		public final B_fields_3_leftFieldRel _b_fields_3_leftField;
		public final TopFieldNode _topField;
		public final TopField_bottom_0_fieldRel _topField_bottom_0_field;
		public final FieldNode _field;
		public final CornerFieldNode _cornerField;
		public final CornerField_bottom_0_leftFieldRel _cornerField_bottom_0_leftField;
		public final CornerField_right_1_topFieldRel _cornerField_right_1_topField;
		public final LeftFieldNode _leftField;
		public final LeftField_right_0_fieldRel _leftField_right_0_field;
		
		public CreateRestOfFieldsCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_topField = data.get("b_fields_0_topField");
			this._b_fields_0_topField = new B_fields_0_topFieldRel(_b_fields_0_topField);
			var _b_fields_1_field = data.get("b_fields_1_field");
			this._b_fields_1_field = new B_fields_1_fieldRel(_b_fields_1_field);
			var _b_fields_2_cornerField = data.get("b_fields_2_cornerField");
			this._b_fields_2_cornerField = new B_fields_2_cornerFieldRel(_b_fields_2_cornerField);
			var _b_fields_3_leftField = data.get("b_fields_3_leftField");
			this._b_fields_3_leftField = new B_fields_3_leftFieldRel(_b_fields_3_leftField);
			var _topField = data.get("topField");
			this._topField = new TopFieldNode(_topField);
			var _topField_bottom_0_field = data.get("topField_bottom_0_field");
			this._topField_bottom_0_field = new TopField_bottom_0_fieldRel(_topField_bottom_0_field);
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _cornerField = data.get("cornerField");
			this._cornerField = new CornerFieldNode(_cornerField);
			var _cornerField_bottom_0_leftField = data.get("cornerField_bottom_0_leftField");
			this._cornerField_bottom_0_leftField = new CornerField_bottom_0_leftFieldRel(_cornerField_bottom_0_leftField);
			var _cornerField_right_1_topField = data.get("cornerField_right_1_topField");
			this._cornerField_right_1_topField = new CornerField_right_1_topFieldRel(_cornerField_right_1_topField);
			var _leftField = data.get("leftField");
			this._leftField = new LeftFieldNode(_leftField);
			var _leftField_right_0_field = data.get("leftField_right_0_field");
			this._leftField_right_0_field = new LeftField_right_0_fieldRel(_leftField_right_0_field);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_topFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_topFieldRel(Value _b_fields_0_topField) {
				if(!_b_fields_0_topField.get("row").isNull())
					this._row = _b_fields_0_topField.get("row").asInt();
				if(!_b_fields_0_topField.get("col").isNull())
					this._col = _b_fields_0_topField.get("col").asInt();
			}
		}
		public class B_fields_1_fieldRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fieldRel(Value _b_fields_1_field) {
				if(!_b_fields_1_field.get("row").isNull())
					this._row = _b_fields_1_field.get("row").asInt();
				if(!_b_fields_1_field.get("col").isNull())
					this._col = _b_fields_1_field.get("col").asInt();
			}
		}
		public class B_fields_2_cornerFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_2_cornerFieldRel(Value _b_fields_2_cornerField) {
				if(!_b_fields_2_cornerField.get("row").isNull())
					this._row = _b_fields_2_cornerField.get("row").asInt();
				if(!_b_fields_2_cornerField.get("col").isNull())
					this._col = _b_fields_2_cornerField.get("col").asInt();
			}
		}
		public class B_fields_3_leftFieldRel {
			public int _row;
			public int _col;
		
			public B_fields_3_leftFieldRel(Value _b_fields_3_leftField) {
				if(!_b_fields_3_leftField.get("row").isNull())
					this._row = _b_fields_3_leftField.get("row").asInt();
				if(!_b_fields_3_leftField.get("col").isNull())
					this._col = _b_fields_3_leftField.get("col").asInt();
			}
		}
		public class TopFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public TopFieldNode(Value _topField) {
				if(!_topField.get("endPos").isNull())
					this._endPos = _topField.get("endPos").asBoolean();
				if(!_topField.get("ename").isNull())
					this._ename = _topField.get("ename").asString();
			}
		}
		
		public class TopField_bottom_0_fieldRel {
		
			public TopField_bottom_0_fieldRel(Value _topField_bottom_0_field) {
			}
		}
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class CornerFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public CornerFieldNode(Value _cornerField) {
				if(!_cornerField.get("endPos").isNull())
					this._endPos = _cornerField.get("endPos").asBoolean();
				if(!_cornerField.get("ename").isNull())
					this._ename = _cornerField.get("ename").asString();
			}
		}
		
		public class CornerField_bottom_0_leftFieldRel {
		
			public CornerField_bottom_0_leftFieldRel(Value _cornerField_bottom_0_leftField) {
			}
		}
		public class CornerField_right_1_topFieldRel {
		
			public CornerField_right_1_topFieldRel(Value _cornerField_right_1_topField) {
			}
		}
		public class LeftFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public LeftFieldNode(Value _leftField) {
				if(!_leftField.get("endPos").isNull())
					this._endPos = _leftField.get("endPos").asBoolean();
				if(!_leftField.get("ename").isNull())
					this._ename = _leftField.get("ename").asString();
			}
		}
		
		public class LeftField_right_0_fieldRel {
		
			public LeftField_right_0_fieldRel(Value _leftField_right_0_field) {
			}
		}
	}
	
	public class CreateRestOfFieldsMask extends NeoMask {
		public CreateRestOfFieldsMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public CreateRestOfFieldsMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public CreateRestOfFieldsMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public CreateRestOfFieldsMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_0_topFieldRow(int value) {
			attributeMask.put("b_fields_0_topField.row", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_0_topFieldCol(int value) {
			attributeMask.put("b_fields_0_topField.col", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_1_fieldRow(int value) {
			attributeMask.put("b_fields_1_field.row", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_1_fieldCol(int value) {
			attributeMask.put("b_fields_1_field.col", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_2_cornerFieldRow(int value) {
			attributeMask.put("b_fields_2_cornerField.row", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_2_cornerFieldCol(int value) {
			attributeMask.put("b_fields_2_cornerField.col", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_3_leftFieldRow(int value) {
			attributeMask.put("b_fields_3_leftField.row", value);
			return this;
		}
		public CreateRestOfFieldsMask setB_fields_3_leftFieldCol(int value) {
			attributeMask.put("b_fields_3_leftField.col", value);
			return this;
		}
		public CreateRestOfFieldsMask setTopField(Long value) {
			nodeMask.put("topField", value);
			return this;
		}
		public CreateRestOfFieldsMask setTopFieldEndPos(boolean value) {
			attributeMask.put("topField.endPos", value);
			return this;
		}
		public CreateRestOfFieldsMask setTopFieldEname(String value) {
			attributeMask.put("topField.ename", value);
			return this;
		}
		public CreateRestOfFieldsMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public CreateRestOfFieldsMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public CreateRestOfFieldsMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public CreateRestOfFieldsMask setCornerField(Long value) {
			nodeMask.put("cornerField", value);
			return this;
		}
		public CreateRestOfFieldsMask setCornerFieldEndPos(boolean value) {
			attributeMask.put("cornerField.endPos", value);
			return this;
		}
		public CreateRestOfFieldsMask setCornerFieldEname(String value) {
			attributeMask.put("cornerField.ename", value);
			return this;
		}
		public CreateRestOfFieldsMask setLeftField(Long value) {
			nodeMask.put("leftField", value);
			return this;
		}
		public CreateRestOfFieldsMask setLeftFieldEndPos(boolean value) {
			attributeMask.put("leftField.endPos", value);
			return this;
		}
		public CreateRestOfFieldsMask setLeftFieldEname(String value) {
			attributeMask.put("leftField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.33
	public IConstraint getConstraint_NoOtherBottom() {
		var c = (Constraint) spec.getEntities().get(33);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.34
	public IConstraint getConstraint_NoOtherRight() {
		var c = (Constraint) spec.getEntities().get(34);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.35
	public IConstraint getConstraint_NoBottomAndNoRight() {
		var c = (Constraint) spec.getEntities().get(35);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.36
	public OtherBottomAccess getPattern_OtherBottom() {
		return new OtherBottomAccess();
	}
	
	public class OtherBottomAccess extends NeoPatternAccess<OtherBottomData, OtherBottomMask> {
		public final String _topField = "topField";
		public final String _otherField = "otherField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(36);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OtherBottomData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OtherBottomData(d));
		}
		
		@Override
		public OtherBottomMask mask() {
			return new OtherBottomMask();
		}
	}
	
	public class OtherBottomData extends NeoData {
		public final TopFieldNode _topField;
		public final TopField_bottom_0_otherFieldRel _topField_bottom_0_otherField;
		public final OtherFieldNode _otherField;
		
		public OtherBottomData(Record data) {
			var _topField = data.get("topField");
			this._topField = new TopFieldNode(_topField);
			var _topField_bottom_0_otherField = data.get("topField_bottom_0_otherField");
			this._topField_bottom_0_otherField = new TopField_bottom_0_otherFieldRel(_topField_bottom_0_otherField);
			var _otherField = data.get("otherField");
			this._otherField = new OtherFieldNode(_otherField);
		}
		
		
		public class TopFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public TopFieldNode(Value _topField) {
				if(!_topField.get("endPos").isNull())
					this._endPos = _topField.get("endPos").asBoolean();
				if(!_topField.get("ename").isNull())
					this._ename = _topField.get("ename").asString();
			}
		}
		
		public class TopField_bottom_0_otherFieldRel {
		
			public TopField_bottom_0_otherFieldRel(Value _topField_bottom_0_otherField) {
			}
		}
		public class OtherFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public OtherFieldNode(Value _otherField) {
				if(!_otherField.get("endPos").isNull())
					this._endPos = _otherField.get("endPos").asBoolean();
				if(!_otherField.get("ename").isNull())
					this._ename = _otherField.get("ename").asString();
			}
		}
		
	}
	
	public class OtherBottomMask extends NeoMask {
		public OtherBottomMask setTopField(Long value) {
			nodeMask.put("topField", value);
			return this;
		}
		public OtherBottomMask setTopFieldEndPos(boolean value) {
			attributeMask.put("topField.endPos", value);
			return this;
		}
		public OtherBottomMask setTopFieldEname(String value) {
			attributeMask.put("topField.ename", value);
			return this;
		}
		public OtherBottomMask setOtherField(Long value) {
			nodeMask.put("otherField", value);
			return this;
		}
		public OtherBottomMask setOtherFieldEndPos(boolean value) {
			attributeMask.put("otherField.endPos", value);
			return this;
		}
		public OtherBottomMask setOtherFieldEname(String value) {
			attributeMask.put("otherField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanGUI/bin/org/moflon/tutorial/sokobangamegui/patterns/SokobanGUIPatterns.msl#//@entities.37
	public OtherRightAccess getPattern_OtherRight() {
		return new OtherRightAccess();
	}
	
	public class OtherRightAccess extends NeoPatternAccess<OtherRightData, OtherRightMask> {
		public final String _leftField = "leftField";
		public final String _otherField = "otherField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(37);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OtherRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OtherRightData(d));
		}
		
		@Override
		public OtherRightMask mask() {
			return new OtherRightMask();
		}
	}
	
	public class OtherRightData extends NeoData {
		public final LeftFieldNode _leftField;
		public final LeftField_right_0_otherFieldRel _leftField_right_0_otherField;
		public final OtherFieldNode _otherField;
		
		public OtherRightData(Record data) {
			var _leftField = data.get("leftField");
			this._leftField = new LeftFieldNode(_leftField);
			var _leftField_right_0_otherField = data.get("leftField_right_0_otherField");
			this._leftField_right_0_otherField = new LeftField_right_0_otherFieldRel(_leftField_right_0_otherField);
			var _otherField = data.get("otherField");
			this._otherField = new OtherFieldNode(_otherField);
		}
		
		
		public class LeftFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public LeftFieldNode(Value _leftField) {
				if(!_leftField.get("endPos").isNull())
					this._endPos = _leftField.get("endPos").asBoolean();
				if(!_leftField.get("ename").isNull())
					this._ename = _leftField.get("ename").asString();
			}
		}
		
		public class LeftField_right_0_otherFieldRel {
		
			public LeftField_right_0_otherFieldRel(Value _leftField_right_0_otherField) {
			}
		}
		public class OtherFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public OtherFieldNode(Value _otherField) {
				if(!_otherField.get("endPos").isNull())
					this._endPos = _otherField.get("endPos").asBoolean();
				if(!_otherField.get("ename").isNull())
					this._ename = _otherField.get("ename").asString();
			}
		}
		
	}
	
	public class OtherRightMask extends NeoMask {
		public OtherRightMask setLeftField(Long value) {
			nodeMask.put("leftField", value);
			return this;
		}
		public OtherRightMask setLeftFieldEndPos(boolean value) {
			attributeMask.put("leftField.endPos", value);
			return this;
		}
		public OtherRightMask setLeftFieldEname(String value) {
			attributeMask.put("leftField.ename", value);
			return this;
		}
		public OtherRightMask setOtherField(Long value) {
			nodeMask.put("otherField", value);
			return this;
		}
		public OtherRightMask setOtherFieldEndPos(boolean value) {
			attributeMask.put("otherField.endPos", value);
			return this;
		}
		public OtherRightMask setOtherFieldEname(String value) {
			attributeMask.put("otherField.ename", value);
			return this;
		}
	}
}
