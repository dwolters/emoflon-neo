/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_FamiliesToPersons_Constrained_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_FamiliesToPersons_Constrained_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_FamiliesToPersons_Constrained_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_FamiliesToPersons_Constrained_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForFamiliesToPersons_Constrained_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_Families2Persons().rule());
		rules.add(getRule_Families2Persons_1().rule());
		rules.add(getRule_Families2Persons_3().rule());
		rules.add(getRule_Families2Persons_5().rule());
		rules.add(getRule_MotherToFemale().rule());
		rules.add(getRule_MotherToFemale_1().rule());
		rules.add(getRule_MotherToFemale_4().rule());
		rules.add(getRule_MotherToFemale_5().rule());
		rules.add(getRule_MotherToFemale_7().rule());
		rules.add(getRule_MotherToFemale_16().rule());
		rules.add(getRule_MotherToFemale_17().rule());
		rules.add(getRule_MotherToFemale_49().rule());
		rules.add(getRule_MotherToFemale_64().rule());
		rules.add(getRule_MotherToFemale_65().rule());
		rules.add(getRule_MotherToFemale_80().rule());
		rules.add(getRule_MotherToFemale_81().rule());
		rules.add(getRule_MotherToFemale_88().rule());
		rules.add(getRule_MotherToFemale_89().rule());
		rules.add(getRule_MotherToFemale_113().rule());
		rules.add(getRule_MotherToFemale_121().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_1().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_4().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_5().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_7().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_8().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_9().rule());
		rules.add(getRule_MotherOfExistingFamilyToFemale_25().rule());
		rules.add(getRule_FatherToMale().rule());
		rules.add(getRule_FatherToMale_1().rule());
		rules.add(getRule_FatherToMale_4().rule());
		rules.add(getRule_FatherToMale_5().rule());
		rules.add(getRule_FatherToMale_7().rule());
		rules.add(getRule_FatherToMale_16().rule());
		rules.add(getRule_FatherToMale_17().rule());
		rules.add(getRule_FatherToMale_49().rule());
		rules.add(getRule_FatherToMale_64().rule());
		rules.add(getRule_FatherToMale_65().rule());
		rules.add(getRule_FatherToMale_80().rule());
		rules.add(getRule_FatherToMale_81().rule());
		rules.add(getRule_FatherToMale_88().rule());
		rules.add(getRule_FatherToMale_89().rule());
		rules.add(getRule_FatherToMale_113().rule());
		rules.add(getRule_FatherToMale_121().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_1().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_4().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_5().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_7().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_8().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_9().rule());
		rules.add(getRule_FatherOfExistingFamilyToMale_25().rule());
		rules.add(getRule_DaughterToFemale().rule());
		rules.add(getRule_DaughterToFemale_1().rule());
		rules.add(getRule_DaughterToFemale_4().rule());
		rules.add(getRule_DaughterToFemale_5().rule());
		rules.add(getRule_DaughterToFemale_7().rule());
		rules.add(getRule_DaughterToFemale_16().rule());
		rules.add(getRule_DaughterToFemale_17().rule());
		rules.add(getRule_DaughterToFemale_49().rule());
		rules.add(getRule_DaughterToFemale_64().rule());
		rules.add(getRule_DaughterToFemale_65().rule());
		rules.add(getRule_DaughterToFemale_80().rule());
		rules.add(getRule_DaughterToFemale_81().rule());
		rules.add(getRule_DaughterToFemale_88().rule());
		rules.add(getRule_DaughterToFemale_89().rule());
		rules.add(getRule_DaughterToFemale_113().rule());
		rules.add(getRule_DaughterToFemale_121().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_1().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_4().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_5().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_7().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_8().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_9().rule());
		rules.add(getRule_DaughterOfExistingFamilyToFemale_25().rule());
		rules.add(getRule_SonToMale().rule());
		rules.add(getRule_SonToMale_1().rule());
		rules.add(getRule_SonToMale_4().rule());
		rules.add(getRule_SonToMale_5().rule());
		rules.add(getRule_SonToMale_7().rule());
		rules.add(getRule_SonToMale_16().rule());
		rules.add(getRule_SonToMale_17().rule());
		rules.add(getRule_SonToMale_49().rule());
		rules.add(getRule_SonToMale_64().rule());
		rules.add(getRule_SonToMale_65().rule());
		rules.add(getRule_SonToMale_80().rule());
		rules.add(getRule_SonToMale_81().rule());
		rules.add(getRule_SonToMale_88().rule());
		rules.add(getRule_SonToMale_89().rule());
		rules.add(getRule_SonToMale_113().rule());
		rules.add(getRule_SonToMale_121().rule());
		rules.add(getRule_SonOfExistingFamilyToMale().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_1().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_4().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_5().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_7().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_8().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_9().rule());
		rules.add(getRule_SonOfExistingFamilyToMale_25().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForFamiliesToPersons_Constrained_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForFamiliesToPersons_Constrained_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		rules.add((Rule) spec.getEntities().get(29));
		rules.add((Rule) spec.getEntities().get(30));
		rules.add((Rule) spec.getEntities().get(31));
		rules.add((Rule) spec.getEntities().get(32));
		rules.add((Rule) spec.getEntities().get(33));
		rules.add((Rule) spec.getEntities().get(34));
		rules.add((Rule) spec.getEntities().get(35));
		rules.add((Rule) spec.getEntities().get(36));
		rules.add((Rule) spec.getEntities().get(37));
		rules.add((Rule) spec.getEntities().get(38));
		rules.add((Rule) spec.getEntities().get(39));
		rules.add((Rule) spec.getEntities().get(40));
		rules.add((Rule) spec.getEntities().get(41));
		rules.add((Rule) spec.getEntities().get(42));
		rules.add((Rule) spec.getEntities().get(43));
		rules.add((Rule) spec.getEntities().get(44));
		rules.add((Rule) spec.getEntities().get(45));
		rules.add((Rule) spec.getEntities().get(46));
		rules.add((Rule) spec.getEntities().get(47));
		rules.add((Rule) spec.getEntities().get(48));
		rules.add((Rule) spec.getEntities().get(49));
		rules.add((Rule) spec.getEntities().get(50));
		rules.add((Rule) spec.getEntities().get(51));
		rules.add((Rule) spec.getEntities().get(52));
		rules.add((Rule) spec.getEntities().get(53));
		rules.add((Rule) spec.getEntities().get(54));
		rules.add((Rule) spec.getEntities().get(55));
		rules.add((Rule) spec.getEntities().get(56));
		rules.add((Rule) spec.getEntities().get(57));
		rules.add((Rule) spec.getEntities().get(58));
		rules.add((Rule) spec.getEntities().get(59));
		rules.add((Rule) spec.getEntities().get(60));
		rules.add((Rule) spec.getEntities().get(61));
		rules.add((Rule) spec.getEntities().get(62));
		rules.add((Rule) spec.getEntities().get(63));
		rules.add((Rule) spec.getEntities().get(64));
		rules.add((Rule) spec.getEntities().get(65));
		rules.add((Rule) spec.getEntities().get(66));
		rules.add((Rule) spec.getEntities().get(67));
		rules.add((Rule) spec.getEntities().get(68));
		rules.add((Rule) spec.getEntities().get(69));
		rules.add((Rule) spec.getEntities().get(70));
		rules.add((Rule) spec.getEntities().get(71));
		rules.add((Rule) spec.getEntities().get(72));
		rules.add((Rule) spec.getEntities().get(73));
		rules.add((Rule) spec.getEntities().get(74));
		rules.add((Rule) spec.getEntities().get(75));
		rules.add((Rule) spec.getEntities().get(76));
		rules.add((Rule) spec.getEntities().get(77));
		rules.add((Rule) spec.getEntities().get(78));
		rules.add((Rule) spec.getEntities().get(79));
		rules.add((Rule) spec.getEntities().get(80));
		rules.add((Rule) spec.getEntities().get(81));
		rules.add((Rule) spec.getEntities().get(82));
		rules.add((Rule) spec.getEntities().get(83));
		rules.add((Rule) spec.getEntities().get(84));
		rules.add((Rule) spec.getEntities().get(85));
		rules.add((Rule) spec.getEntities().get(86));
		rules.add((Rule) spec.getEntities().get(87));
		rules.add((Rule) spec.getEntities().get(88));
		rules.add((Rule) spec.getEntities().get(89));
		rules.add((Rule) spec.getEntities().get(90));
		rules.add((Rule) spec.getEntities().get(91));
		rules.add((Rule) spec.getEntities().get(92));
		rules.add((Rule) spec.getEntities().get(93));
		rules.add((Rule) spec.getEntities().get(94));
		rules.add((Rule) spec.getEntities().get(95));
		rules.add((Rule) spec.getEntities().get(96));
		rules.add((Rule) spec.getEntities().get(97));
		rules.add((Rule) spec.getEntities().get(98));
		rules.add((Rule) spec.getEntities().get(99));
		rules.add((Rule) spec.getEntities().get(100));
		return rules;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.1
	public Families2PersonsAccess getRule_Families2Persons() {
		return new Families2PersonsAccess();
	}
	
	public class Families2PersonsAccess extends NeoRuleCoAccess<Families2PersonsData, Families2PersonsCoData, Families2PersonsMask> {
		public final String _families = "families";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Families2PersonsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2PersonsData(d));
		}
			
		@Override
		public Stream<Families2PersonsCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2PersonsCoData(d));
		}
		
		@Override
		public Families2PersonsMask mask() {
			return new Families2PersonsMask();
		}
	}
	
	public class Families2PersonsData extends NeoData {
		public Families2PersonsData(Record data) {
		
		}
	}
	
	public class Families2PersonsCoData extends NeoData {
		public Families2PersonsCoData(Record data) {
		
		}
	}
	
	public class Families2PersonsMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.2
	public Families2Persons_1Access getRule_Families2Persons_1() {
		return new Families2Persons_1Access();
	}
	
	public class Families2Persons_1Access extends NeoRuleCoAccess<Families2Persons_1Data, Families2Persons_1CoData, Families2Persons_1Mask> {
		public final String _families = "families";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Families2Persons_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2Persons_1Data(d));
		}
			
		@Override
		public Stream<Families2Persons_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2Persons_1CoData(d));
		}
		
		@Override
		public Families2Persons_1Mask mask() {
			return new Families2Persons_1Mask();
		}
	}
	
	public class Families2Persons_1Data extends NeoData {
		public Families2Persons_1Data(Record data) {
		
		}
	}
	
	public class Families2Persons_1CoData extends NeoData {
		public Families2Persons_1CoData(Record data) {
		
		}
	}
	
	public class Families2Persons_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.3
	public Families2Persons_3Access getRule_Families2Persons_3() {
		return new Families2Persons_3Access();
	}
	
	public class Families2Persons_3Access extends NeoRuleCoAccess<Families2Persons_3Data, Families2Persons_3CoData, Families2Persons_3Mask> {
		public final String _families = "families";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Families2Persons_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2Persons_3Data(d));
		}
			
		@Override
		public Stream<Families2Persons_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2Persons_3CoData(d));
		}
		
		@Override
		public Families2Persons_3Mask mask() {
			return new Families2Persons_3Mask();
		}
	}
	
	public class Families2Persons_3Data extends NeoData {
		public Families2Persons_3Data(Record data) {
		
		}
	}
	
	public class Families2Persons_3CoData extends NeoData {
		public Families2Persons_3CoData(Record data) {
		
		}
	}
	
	public class Families2Persons_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.4
	public Families2Persons_5Access getRule_Families2Persons_5() {
		return new Families2Persons_5Access();
	}
	
	public class Families2Persons_5Access extends NeoRuleCoAccess<Families2Persons_5Data, Families2Persons_5CoData, Families2Persons_5Mask> {
		public final String _families = "families";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<Families2Persons_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2Persons_5Data(d));
		}
			
		@Override
		public Stream<Families2Persons_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Families2Persons_5CoData(d));
		}
		
		@Override
		public Families2Persons_5Mask mask() {
			return new Families2Persons_5Mask();
		}
	}
	
	public class Families2Persons_5Data extends NeoData {
		public Families2Persons_5Data(Record data) {
		
		}
	}
	
	public class Families2Persons_5CoData extends NeoData {
		public Families2Persons_5CoData(Record data) {
		
		}
	}
	
	public class Families2Persons_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.5
	public MotherToFemaleAccess getRule_MotherToFemale() {
		return new MotherToFemaleAccess();
	}
	
	public class MotherToFemaleAccess extends NeoRuleCoAccess<MotherToFemaleData, MotherToFemaleCoData, MotherToFemaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleData(d));
		}
			
		@Override
		public Stream<MotherToFemaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleCoData(d));
		}
		
		@Override
		public MotherToFemaleMask mask() {
			return new MotherToFemaleMask();
		}
	}
	
	public class MotherToFemaleData extends NeoData {
		public MotherToFemaleData(Record data) {
		
		}
	}
	
	public class MotherToFemaleCoData extends NeoData {
		public MotherToFemaleCoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.6
	public MotherToFemale_1Access getRule_MotherToFemale_1() {
		return new MotherToFemale_1Access();
	}
	
	public class MotherToFemale_1Access extends NeoRuleCoAccess<MotherToFemale_1Data, MotherToFemale_1CoData, MotherToFemale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_1Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_1CoData(d));
		}
		
		@Override
		public MotherToFemale_1Mask mask() {
			return new MotherToFemale_1Mask();
		}
	}
	
	public class MotherToFemale_1Data extends NeoData {
		public MotherToFemale_1Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_1CoData extends NeoData {
		public MotherToFemale_1CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.7
	public MotherToFemale_4Access getRule_MotherToFemale_4() {
		return new MotherToFemale_4Access();
	}
	
	public class MotherToFemale_4Access extends NeoRuleCoAccess<MotherToFemale_4Data, MotherToFemale_4CoData, MotherToFemale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_4Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_4CoData(d));
		}
		
		@Override
		public MotherToFemale_4Mask mask() {
			return new MotherToFemale_4Mask();
		}
	}
	
	public class MotherToFemale_4Data extends NeoData {
		public MotherToFemale_4Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_4CoData extends NeoData {
		public MotherToFemale_4CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.8
	public MotherToFemale_5Access getRule_MotherToFemale_5() {
		return new MotherToFemale_5Access();
	}
	
	public class MotherToFemale_5Access extends NeoRuleCoAccess<MotherToFemale_5Data, MotherToFemale_5CoData, MotherToFemale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_5Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_5CoData(d));
		}
		
		@Override
		public MotherToFemale_5Mask mask() {
			return new MotherToFemale_5Mask();
		}
	}
	
	public class MotherToFemale_5Data extends NeoData {
		public MotherToFemale_5Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_5CoData extends NeoData {
		public MotherToFemale_5CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.9
	public MotherToFemale_7Access getRule_MotherToFemale_7() {
		return new MotherToFemale_7Access();
	}
	
	public class MotherToFemale_7Access extends NeoRuleCoAccess<MotherToFemale_7Data, MotherToFemale_7CoData, MotherToFemale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_7Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_7CoData(d));
		}
		
		@Override
		public MotherToFemale_7Mask mask() {
			return new MotherToFemale_7Mask();
		}
	}
	
	public class MotherToFemale_7Data extends NeoData {
		public MotherToFemale_7Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_7CoData extends NeoData {
		public MotherToFemale_7CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.10
	public MotherToFemale_16Access getRule_MotherToFemale_16() {
		return new MotherToFemale_16Access();
	}
	
	public class MotherToFemale_16Access extends NeoRuleCoAccess<MotherToFemale_16Data, MotherToFemale_16CoData, MotherToFemale_16Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_16Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_16CoData(d));
		}
		
		@Override
		public MotherToFemale_16Mask mask() {
			return new MotherToFemale_16Mask();
		}
	}
	
	public class MotherToFemale_16Data extends NeoData {
		public MotherToFemale_16Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_16CoData extends NeoData {
		public MotherToFemale_16CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.11
	public MotherToFemale_17Access getRule_MotherToFemale_17() {
		return new MotherToFemale_17Access();
	}
	
	public class MotherToFemale_17Access extends NeoRuleCoAccess<MotherToFemale_17Data, MotherToFemale_17CoData, MotherToFemale_17Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_17Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_17CoData(d));
		}
		
		@Override
		public MotherToFemale_17Mask mask() {
			return new MotherToFemale_17Mask();
		}
	}
	
	public class MotherToFemale_17Data extends NeoData {
		public MotherToFemale_17Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_17CoData extends NeoData {
		public MotherToFemale_17CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.12
	public MotherToFemale_49Access getRule_MotherToFemale_49() {
		return new MotherToFemale_49Access();
	}
	
	public class MotherToFemale_49Access extends NeoRuleCoAccess<MotherToFemale_49Data, MotherToFemale_49CoData, MotherToFemale_49Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_49Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_49Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_49CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_49CoData(d));
		}
		
		@Override
		public MotherToFemale_49Mask mask() {
			return new MotherToFemale_49Mask();
		}
	}
	
	public class MotherToFemale_49Data extends NeoData {
		public MotherToFemale_49Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_49CoData extends NeoData {
		public MotherToFemale_49CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_49Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.13
	public MotherToFemale_64Access getRule_MotherToFemale_64() {
		return new MotherToFemale_64Access();
	}
	
	public class MotherToFemale_64Access extends NeoRuleCoAccess<MotherToFemale_64Data, MotherToFemale_64CoData, MotherToFemale_64Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_64Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_64CoData(d));
		}
		
		@Override
		public MotherToFemale_64Mask mask() {
			return new MotherToFemale_64Mask();
		}
	}
	
	public class MotherToFemale_64Data extends NeoData {
		public MotherToFemale_64Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_64CoData extends NeoData {
		public MotherToFemale_64CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.14
	public MotherToFemale_65Access getRule_MotherToFemale_65() {
		return new MotherToFemale_65Access();
	}
	
	public class MotherToFemale_65Access extends NeoRuleCoAccess<MotherToFemale_65Data, MotherToFemale_65CoData, MotherToFemale_65Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_65Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_65CoData(d));
		}
		
		@Override
		public MotherToFemale_65Mask mask() {
			return new MotherToFemale_65Mask();
		}
	}
	
	public class MotherToFemale_65Data extends NeoData {
		public MotherToFemale_65Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_65CoData extends NeoData {
		public MotherToFemale_65CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.15
	public MotherToFemale_80Access getRule_MotherToFemale_80() {
		return new MotherToFemale_80Access();
	}
	
	public class MotherToFemale_80Access extends NeoRuleCoAccess<MotherToFemale_80Data, MotherToFemale_80CoData, MotherToFemale_80Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_80Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_80Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_80CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_80CoData(d));
		}
		
		@Override
		public MotherToFemale_80Mask mask() {
			return new MotherToFemale_80Mask();
		}
	}
	
	public class MotherToFemale_80Data extends NeoData {
		public MotherToFemale_80Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_80CoData extends NeoData {
		public MotherToFemale_80CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_80Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.16
	public MotherToFemale_81Access getRule_MotherToFemale_81() {
		return new MotherToFemale_81Access();
	}
	
	public class MotherToFemale_81Access extends NeoRuleCoAccess<MotherToFemale_81Data, MotherToFemale_81CoData, MotherToFemale_81Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_81Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_81Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_81CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_81CoData(d));
		}
		
		@Override
		public MotherToFemale_81Mask mask() {
			return new MotherToFemale_81Mask();
		}
	}
	
	public class MotherToFemale_81Data extends NeoData {
		public MotherToFemale_81Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_81CoData extends NeoData {
		public MotherToFemale_81CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_81Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.17
	public MotherToFemale_88Access getRule_MotherToFemale_88() {
		return new MotherToFemale_88Access();
	}
	
	public class MotherToFemale_88Access extends NeoRuleCoAccess<MotherToFemale_88Data, MotherToFemale_88CoData, MotherToFemale_88Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_88Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_88Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_88CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_88CoData(d));
		}
		
		@Override
		public MotherToFemale_88Mask mask() {
			return new MotherToFemale_88Mask();
		}
	}
	
	public class MotherToFemale_88Data extends NeoData {
		public MotherToFemale_88Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_88CoData extends NeoData {
		public MotherToFemale_88CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_88Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.18
	public MotherToFemale_89Access getRule_MotherToFemale_89() {
		return new MotherToFemale_89Access();
	}
	
	public class MotherToFemale_89Access extends NeoRuleCoAccess<MotherToFemale_89Data, MotherToFemale_89CoData, MotherToFemale_89Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_89Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_89Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_89CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_89CoData(d));
		}
		
		@Override
		public MotherToFemale_89Mask mask() {
			return new MotherToFemale_89Mask();
		}
	}
	
	public class MotherToFemale_89Data extends NeoData {
		public MotherToFemale_89Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_89CoData extends NeoData {
		public MotherToFemale_89CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_89Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.19
	public MotherToFemale_113Access getRule_MotherToFemale_113() {
		return new MotherToFemale_113Access();
	}
	
	public class MotherToFemale_113Access extends NeoRuleCoAccess<MotherToFemale_113Data, MotherToFemale_113CoData, MotherToFemale_113Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_113Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_113Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_113CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_113CoData(d));
		}
		
		@Override
		public MotherToFemale_113Mask mask() {
			return new MotherToFemale_113Mask();
		}
	}
	
	public class MotherToFemale_113Data extends NeoData {
		public MotherToFemale_113Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_113CoData extends NeoData {
		public MotherToFemale_113CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_113Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.20
	public MotherToFemale_121Access getRule_MotherToFemale_121() {
		return new MotherToFemale_121Access();
	}
	
	public class MotherToFemale_121Access extends NeoRuleCoAccess<MotherToFemale_121Data, MotherToFemale_121CoData, MotherToFemale_121Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemale_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_121Data(d));
		}
			
		@Override
		public Stream<MotherToFemale_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemale_121CoData(d));
		}
		
		@Override
		public MotherToFemale_121Mask mask() {
			return new MotherToFemale_121Mask();
		}
	}
	
	public class MotherToFemale_121Data extends NeoData {
		public MotherToFemale_121Data(Record data) {
		
		}
	}
	
	public class MotherToFemale_121CoData extends NeoData {
		public MotherToFemale_121CoData(Record data) {
		
		}
	}
	
	public class MotherToFemale_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.21
	public MotherOfExistingFamilyToFemaleAccess getRule_MotherOfExistingFamilyToFemale() {
		return new MotherOfExistingFamilyToFemaleAccess();
	}
	
	public class MotherOfExistingFamilyToFemaleAccess extends NeoRuleCoAccess<MotherOfExistingFamilyToFemaleData, MotherOfExistingFamilyToFemaleCoData, MotherOfExistingFamilyToFemaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemaleData(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemaleCoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemaleMask mask() {
			return new MotherOfExistingFamilyToFemaleMask();
		}
	}
	
	public class MotherOfExistingFamilyToFemaleData extends NeoData {
		public MotherOfExistingFamilyToFemaleData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemaleCoData extends NeoData {
		public MotherOfExistingFamilyToFemaleCoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.22
	public MotherOfExistingFamilyToFemale_1Access getRule_MotherOfExistingFamilyToFemale_1() {
		return new MotherOfExistingFamilyToFemale_1Access();
	}
	
	public class MotherOfExistingFamilyToFemale_1Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_1Data, MotherOfExistingFamilyToFemale_1CoData, MotherOfExistingFamilyToFemale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_1Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_1CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_1Mask mask() {
			return new MotherOfExistingFamilyToFemale_1Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_1Data extends NeoData {
		public MotherOfExistingFamilyToFemale_1Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_1CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_1CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.23
	public MotherOfExistingFamilyToFemale_4Access getRule_MotherOfExistingFamilyToFemale_4() {
		return new MotherOfExistingFamilyToFemale_4Access();
	}
	
	public class MotherOfExistingFamilyToFemale_4Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_4Data, MotherOfExistingFamilyToFemale_4CoData, MotherOfExistingFamilyToFemale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_4Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_4CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_4Mask mask() {
			return new MotherOfExistingFamilyToFemale_4Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_4Data extends NeoData {
		public MotherOfExistingFamilyToFemale_4Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_4CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_4CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.24
	public MotherOfExistingFamilyToFemale_5Access getRule_MotherOfExistingFamilyToFemale_5() {
		return new MotherOfExistingFamilyToFemale_5Access();
	}
	
	public class MotherOfExistingFamilyToFemale_5Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_5Data, MotherOfExistingFamilyToFemale_5CoData, MotherOfExistingFamilyToFemale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_5Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_5CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_5Mask mask() {
			return new MotherOfExistingFamilyToFemale_5Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_5Data extends NeoData {
		public MotherOfExistingFamilyToFemale_5Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_5CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_5CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.25
	public MotherOfExistingFamilyToFemale_7Access getRule_MotherOfExistingFamilyToFemale_7() {
		return new MotherOfExistingFamilyToFemale_7Access();
	}
	
	public class MotherOfExistingFamilyToFemale_7Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_7Data, MotherOfExistingFamilyToFemale_7CoData, MotherOfExistingFamilyToFemale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_7Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_7CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_7Mask mask() {
			return new MotherOfExistingFamilyToFemale_7Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_7Data extends NeoData {
		public MotherOfExistingFamilyToFemale_7Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_7CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_7CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.26
	public MotherOfExistingFamilyToFemale_8Access getRule_MotherOfExistingFamilyToFemale_8() {
		return new MotherOfExistingFamilyToFemale_8Access();
	}
	
	public class MotherOfExistingFamilyToFemale_8Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_8Data, MotherOfExistingFamilyToFemale_8CoData, MotherOfExistingFamilyToFemale_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_8Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_8CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_8Mask mask() {
			return new MotherOfExistingFamilyToFemale_8Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_8Data extends NeoData {
		public MotherOfExistingFamilyToFemale_8Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_8CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_8CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.27
	public MotherOfExistingFamilyToFemale_9Access getRule_MotherOfExistingFamilyToFemale_9() {
		return new MotherOfExistingFamilyToFemale_9Access();
	}
	
	public class MotherOfExistingFamilyToFemale_9Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_9Data, MotherOfExistingFamilyToFemale_9CoData, MotherOfExistingFamilyToFemale_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_9Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_9CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_9Mask mask() {
			return new MotherOfExistingFamilyToFemale_9Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_9Data extends NeoData {
		public MotherOfExistingFamilyToFemale_9Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_9CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_9CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.28
	public MotherOfExistingFamilyToFemale_25Access getRule_MotherOfExistingFamilyToFemale_25() {
		return new MotherOfExistingFamilyToFemale_25Access();
	}
	
	public class MotherOfExistingFamilyToFemale_25Access extends NeoRuleCoAccess<MotherOfExistingFamilyToFemale_25Data, MotherOfExistingFamilyToFemale_25CoData, MotherOfExistingFamilyToFemale_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherOfExistingFamilyToFemale_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_25Data(d));
		}
			
		@Override
		public Stream<MotherOfExistingFamilyToFemale_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherOfExistingFamilyToFemale_25CoData(d));
		}
		
		@Override
		public MotherOfExistingFamilyToFemale_25Mask mask() {
			return new MotherOfExistingFamilyToFemale_25Mask();
		}
	}
	
	public class MotherOfExistingFamilyToFemale_25Data extends NeoData {
		public MotherOfExistingFamilyToFemale_25Data(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_25CoData extends NeoData {
		public MotherOfExistingFamilyToFemale_25CoData(Record data) {
		
		}
	}
	
	public class MotherOfExistingFamilyToFemale_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.29
	public FatherToMaleAccess getRule_FatherToMale() {
		return new FatherToMaleAccess();
	}
	
	public class FatherToMaleAccess extends NeoRuleCoAccess<FatherToMaleData, FatherToMaleCoData, FatherToMaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleData(d));
		}
			
		@Override
		public Stream<FatherToMaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleCoData(d));
		}
		
		@Override
		public FatherToMaleMask mask() {
			return new FatherToMaleMask();
		}
	}
	
	public class FatherToMaleData extends NeoData {
		public FatherToMaleData(Record data) {
		
		}
	}
	
	public class FatherToMaleCoData extends NeoData {
		public FatherToMaleCoData(Record data) {
		
		}
	}
	
	public class FatherToMaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.30
	public FatherToMale_1Access getRule_FatherToMale_1() {
		return new FatherToMale_1Access();
	}
	
	public class FatherToMale_1Access extends NeoRuleCoAccess<FatherToMale_1Data, FatherToMale_1CoData, FatherToMale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(30);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_1Data(d));
		}
			
		@Override
		public Stream<FatherToMale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_1CoData(d));
		}
		
		@Override
		public FatherToMale_1Mask mask() {
			return new FatherToMale_1Mask();
		}
	}
	
	public class FatherToMale_1Data extends NeoData {
		public FatherToMale_1Data(Record data) {
		
		}
	}
	
	public class FatherToMale_1CoData extends NeoData {
		public FatherToMale_1CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.31
	public FatherToMale_4Access getRule_FatherToMale_4() {
		return new FatherToMale_4Access();
	}
	
	public class FatherToMale_4Access extends NeoRuleCoAccess<FatherToMale_4Data, FatherToMale_4CoData, FatherToMale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(31);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_4Data(d));
		}
			
		@Override
		public Stream<FatherToMale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_4CoData(d));
		}
		
		@Override
		public FatherToMale_4Mask mask() {
			return new FatherToMale_4Mask();
		}
	}
	
	public class FatherToMale_4Data extends NeoData {
		public FatherToMale_4Data(Record data) {
		
		}
	}
	
	public class FatherToMale_4CoData extends NeoData {
		public FatherToMale_4CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.32
	public FatherToMale_5Access getRule_FatherToMale_5() {
		return new FatherToMale_5Access();
	}
	
	public class FatherToMale_5Access extends NeoRuleCoAccess<FatherToMale_5Data, FatherToMale_5CoData, FatherToMale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(32);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_5Data(d));
		}
			
		@Override
		public Stream<FatherToMale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_5CoData(d));
		}
		
		@Override
		public FatherToMale_5Mask mask() {
			return new FatherToMale_5Mask();
		}
	}
	
	public class FatherToMale_5Data extends NeoData {
		public FatherToMale_5Data(Record data) {
		
		}
	}
	
	public class FatherToMale_5CoData extends NeoData {
		public FatherToMale_5CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.33
	public FatherToMale_7Access getRule_FatherToMale_7() {
		return new FatherToMale_7Access();
	}
	
	public class FatherToMale_7Access extends NeoRuleCoAccess<FatherToMale_7Data, FatherToMale_7CoData, FatherToMale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(33);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_7Data(d));
		}
			
		@Override
		public Stream<FatherToMale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_7CoData(d));
		}
		
		@Override
		public FatherToMale_7Mask mask() {
			return new FatherToMale_7Mask();
		}
	}
	
	public class FatherToMale_7Data extends NeoData {
		public FatherToMale_7Data(Record data) {
		
		}
	}
	
	public class FatherToMale_7CoData extends NeoData {
		public FatherToMale_7CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.34
	public FatherToMale_16Access getRule_FatherToMale_16() {
		return new FatherToMale_16Access();
	}
	
	public class FatherToMale_16Access extends NeoRuleCoAccess<FatherToMale_16Data, FatherToMale_16CoData, FatherToMale_16Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(34);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_16Data(d));
		}
			
		@Override
		public Stream<FatherToMale_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_16CoData(d));
		}
		
		@Override
		public FatherToMale_16Mask mask() {
			return new FatherToMale_16Mask();
		}
	}
	
	public class FatherToMale_16Data extends NeoData {
		public FatherToMale_16Data(Record data) {
		
		}
	}
	
	public class FatherToMale_16CoData extends NeoData {
		public FatherToMale_16CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.35
	public FatherToMale_17Access getRule_FatherToMale_17() {
		return new FatherToMale_17Access();
	}
	
	public class FatherToMale_17Access extends NeoRuleCoAccess<FatherToMale_17Data, FatherToMale_17CoData, FatherToMale_17Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(35);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_17Data(d));
		}
			
		@Override
		public Stream<FatherToMale_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_17CoData(d));
		}
		
		@Override
		public FatherToMale_17Mask mask() {
			return new FatherToMale_17Mask();
		}
	}
	
	public class FatherToMale_17Data extends NeoData {
		public FatherToMale_17Data(Record data) {
		
		}
	}
	
	public class FatherToMale_17CoData extends NeoData {
		public FatherToMale_17CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.36
	public FatherToMale_49Access getRule_FatherToMale_49() {
		return new FatherToMale_49Access();
	}
	
	public class FatherToMale_49Access extends NeoRuleCoAccess<FatherToMale_49Data, FatherToMale_49CoData, FatherToMale_49Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(36);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_49Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_49Data(d));
		}
			
		@Override
		public Stream<FatherToMale_49CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_49CoData(d));
		}
		
		@Override
		public FatherToMale_49Mask mask() {
			return new FatherToMale_49Mask();
		}
	}
	
	public class FatherToMale_49Data extends NeoData {
		public FatherToMale_49Data(Record data) {
		
		}
	}
	
	public class FatherToMale_49CoData extends NeoData {
		public FatherToMale_49CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_49Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.37
	public FatherToMale_64Access getRule_FatherToMale_64() {
		return new FatherToMale_64Access();
	}
	
	public class FatherToMale_64Access extends NeoRuleCoAccess<FatherToMale_64Data, FatherToMale_64CoData, FatherToMale_64Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(37);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_64Data(d));
		}
			
		@Override
		public Stream<FatherToMale_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_64CoData(d));
		}
		
		@Override
		public FatherToMale_64Mask mask() {
			return new FatherToMale_64Mask();
		}
	}
	
	public class FatherToMale_64Data extends NeoData {
		public FatherToMale_64Data(Record data) {
		
		}
	}
	
	public class FatherToMale_64CoData extends NeoData {
		public FatherToMale_64CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.38
	public FatherToMale_65Access getRule_FatherToMale_65() {
		return new FatherToMale_65Access();
	}
	
	public class FatherToMale_65Access extends NeoRuleCoAccess<FatherToMale_65Data, FatherToMale_65CoData, FatherToMale_65Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(38);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_65Data(d));
		}
			
		@Override
		public Stream<FatherToMale_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_65CoData(d));
		}
		
		@Override
		public FatherToMale_65Mask mask() {
			return new FatherToMale_65Mask();
		}
	}
	
	public class FatherToMale_65Data extends NeoData {
		public FatherToMale_65Data(Record data) {
		
		}
	}
	
	public class FatherToMale_65CoData extends NeoData {
		public FatherToMale_65CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.39
	public FatherToMale_80Access getRule_FatherToMale_80() {
		return new FatherToMale_80Access();
	}
	
	public class FatherToMale_80Access extends NeoRuleCoAccess<FatherToMale_80Data, FatherToMale_80CoData, FatherToMale_80Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(39);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_80Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_80Data(d));
		}
			
		@Override
		public Stream<FatherToMale_80CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_80CoData(d));
		}
		
		@Override
		public FatherToMale_80Mask mask() {
			return new FatherToMale_80Mask();
		}
	}
	
	public class FatherToMale_80Data extends NeoData {
		public FatherToMale_80Data(Record data) {
		
		}
	}
	
	public class FatherToMale_80CoData extends NeoData {
		public FatherToMale_80CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_80Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.40
	public FatherToMale_81Access getRule_FatherToMale_81() {
		return new FatherToMale_81Access();
	}
	
	public class FatherToMale_81Access extends NeoRuleCoAccess<FatherToMale_81Data, FatherToMale_81CoData, FatherToMale_81Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(40);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_81Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_81Data(d));
		}
			
		@Override
		public Stream<FatherToMale_81CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_81CoData(d));
		}
		
		@Override
		public FatherToMale_81Mask mask() {
			return new FatherToMale_81Mask();
		}
	}
	
	public class FatherToMale_81Data extends NeoData {
		public FatherToMale_81Data(Record data) {
		
		}
	}
	
	public class FatherToMale_81CoData extends NeoData {
		public FatherToMale_81CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_81Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.41
	public FatherToMale_88Access getRule_FatherToMale_88() {
		return new FatherToMale_88Access();
	}
	
	public class FatherToMale_88Access extends NeoRuleCoAccess<FatherToMale_88Data, FatherToMale_88CoData, FatherToMale_88Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(41);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_88Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_88Data(d));
		}
			
		@Override
		public Stream<FatherToMale_88CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_88CoData(d));
		}
		
		@Override
		public FatherToMale_88Mask mask() {
			return new FatherToMale_88Mask();
		}
	}
	
	public class FatherToMale_88Data extends NeoData {
		public FatherToMale_88Data(Record data) {
		
		}
	}
	
	public class FatherToMale_88CoData extends NeoData {
		public FatherToMale_88CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_88Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.42
	public FatherToMale_89Access getRule_FatherToMale_89() {
		return new FatherToMale_89Access();
	}
	
	public class FatherToMale_89Access extends NeoRuleCoAccess<FatherToMale_89Data, FatherToMale_89CoData, FatherToMale_89Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(42);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_89Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_89Data(d));
		}
			
		@Override
		public Stream<FatherToMale_89CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_89CoData(d));
		}
		
		@Override
		public FatherToMale_89Mask mask() {
			return new FatherToMale_89Mask();
		}
	}
	
	public class FatherToMale_89Data extends NeoData {
		public FatherToMale_89Data(Record data) {
		
		}
	}
	
	public class FatherToMale_89CoData extends NeoData {
		public FatherToMale_89CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_89Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.43
	public FatherToMale_113Access getRule_FatherToMale_113() {
		return new FatherToMale_113Access();
	}
	
	public class FatherToMale_113Access extends NeoRuleCoAccess<FatherToMale_113Data, FatherToMale_113CoData, FatherToMale_113Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(43);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_113Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_113Data(d));
		}
			
		@Override
		public Stream<FatherToMale_113CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_113CoData(d));
		}
		
		@Override
		public FatherToMale_113Mask mask() {
			return new FatherToMale_113Mask();
		}
	}
	
	public class FatherToMale_113Data extends NeoData {
		public FatherToMale_113Data(Record data) {
		
		}
	}
	
	public class FatherToMale_113CoData extends NeoData {
		public FatherToMale_113CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_113Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.44
	public FatherToMale_121Access getRule_FatherToMale_121() {
		return new FatherToMale_121Access();
	}
	
	public class FatherToMale_121Access extends NeoRuleCoAccess<FatherToMale_121Data, FatherToMale_121CoData, FatherToMale_121Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(44);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMale_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_121Data(d));
		}
			
		@Override
		public Stream<FatherToMale_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMale_121CoData(d));
		}
		
		@Override
		public FatherToMale_121Mask mask() {
			return new FatherToMale_121Mask();
		}
	}
	
	public class FatherToMale_121Data extends NeoData {
		public FatherToMale_121Data(Record data) {
		
		}
	}
	
	public class FatherToMale_121CoData extends NeoData {
		public FatherToMale_121CoData(Record data) {
		
		}
	}
	
	public class FatherToMale_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.45
	public FatherOfExistingFamilyToMaleAccess getRule_FatherOfExistingFamilyToMale() {
		return new FatherOfExistingFamilyToMaleAccess();
	}
	
	public class FatherOfExistingFamilyToMaleAccess extends NeoRuleCoAccess<FatherOfExistingFamilyToMaleData, FatherOfExistingFamilyToMaleCoData, FatherOfExistingFamilyToMaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(45);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMaleData(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMaleCoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMaleMask mask() {
			return new FatherOfExistingFamilyToMaleMask();
		}
	}
	
	public class FatherOfExistingFamilyToMaleData extends NeoData {
		public FatherOfExistingFamilyToMaleData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMaleCoData extends NeoData {
		public FatherOfExistingFamilyToMaleCoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.46
	public FatherOfExistingFamilyToMale_1Access getRule_FatherOfExistingFamilyToMale_1() {
		return new FatherOfExistingFamilyToMale_1Access();
	}
	
	public class FatherOfExistingFamilyToMale_1Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_1Data, FatherOfExistingFamilyToMale_1CoData, FatherOfExistingFamilyToMale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(46);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_1Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_1CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_1Mask mask() {
			return new FatherOfExistingFamilyToMale_1Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_1Data extends NeoData {
		public FatherOfExistingFamilyToMale_1Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_1CoData extends NeoData {
		public FatherOfExistingFamilyToMale_1CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.47
	public FatherOfExistingFamilyToMale_4Access getRule_FatherOfExistingFamilyToMale_4() {
		return new FatherOfExistingFamilyToMale_4Access();
	}
	
	public class FatherOfExistingFamilyToMale_4Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_4Data, FatherOfExistingFamilyToMale_4CoData, FatherOfExistingFamilyToMale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(47);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_4Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_4CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_4Mask mask() {
			return new FatherOfExistingFamilyToMale_4Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_4Data extends NeoData {
		public FatherOfExistingFamilyToMale_4Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_4CoData extends NeoData {
		public FatherOfExistingFamilyToMale_4CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.48
	public FatherOfExistingFamilyToMale_5Access getRule_FatherOfExistingFamilyToMale_5() {
		return new FatherOfExistingFamilyToMale_5Access();
	}
	
	public class FatherOfExistingFamilyToMale_5Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_5Data, FatherOfExistingFamilyToMale_5CoData, FatherOfExistingFamilyToMale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(48);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_5Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_5CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_5Mask mask() {
			return new FatherOfExistingFamilyToMale_5Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_5Data extends NeoData {
		public FatherOfExistingFamilyToMale_5Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_5CoData extends NeoData {
		public FatherOfExistingFamilyToMale_5CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.49
	public FatherOfExistingFamilyToMale_7Access getRule_FatherOfExistingFamilyToMale_7() {
		return new FatherOfExistingFamilyToMale_7Access();
	}
	
	public class FatherOfExistingFamilyToMale_7Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_7Data, FatherOfExistingFamilyToMale_7CoData, FatherOfExistingFamilyToMale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(49);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_7Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_7CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_7Mask mask() {
			return new FatherOfExistingFamilyToMale_7Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_7Data extends NeoData {
		public FatherOfExistingFamilyToMale_7Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_7CoData extends NeoData {
		public FatherOfExistingFamilyToMale_7CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.50
	public FatherOfExistingFamilyToMale_8Access getRule_FatherOfExistingFamilyToMale_8() {
		return new FatherOfExistingFamilyToMale_8Access();
	}
	
	public class FatherOfExistingFamilyToMale_8Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_8Data, FatherOfExistingFamilyToMale_8CoData, FatherOfExistingFamilyToMale_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(50);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_8Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_8CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_8Mask mask() {
			return new FatherOfExistingFamilyToMale_8Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_8Data extends NeoData {
		public FatherOfExistingFamilyToMale_8Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_8CoData extends NeoData {
		public FatherOfExistingFamilyToMale_8CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.51
	public FatherOfExistingFamilyToMale_9Access getRule_FatherOfExistingFamilyToMale_9() {
		return new FatherOfExistingFamilyToMale_9Access();
	}
	
	public class FatherOfExistingFamilyToMale_9Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_9Data, FatherOfExistingFamilyToMale_9CoData, FatherOfExistingFamilyToMale_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(51);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_9Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_9CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_9Mask mask() {
			return new FatherOfExistingFamilyToMale_9Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_9Data extends NeoData {
		public FatherOfExistingFamilyToMale_9Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_9CoData extends NeoData {
		public FatherOfExistingFamilyToMale_9CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.52
	public FatherOfExistingFamilyToMale_25Access getRule_FatherOfExistingFamilyToMale_25() {
		return new FatherOfExistingFamilyToMale_25Access();
	}
	
	public class FatherOfExistingFamilyToMale_25Access extends NeoRuleCoAccess<FatherOfExistingFamilyToMale_25Data, FatherOfExistingFamilyToMale_25CoData, FatherOfExistingFamilyToMale_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(52);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherOfExistingFamilyToMale_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_25Data(d));
		}
			
		@Override
		public Stream<FatherOfExistingFamilyToMale_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherOfExistingFamilyToMale_25CoData(d));
		}
		
		@Override
		public FatherOfExistingFamilyToMale_25Mask mask() {
			return new FatherOfExistingFamilyToMale_25Mask();
		}
	}
	
	public class FatherOfExistingFamilyToMale_25Data extends NeoData {
		public FatherOfExistingFamilyToMale_25Data(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_25CoData extends NeoData {
		public FatherOfExistingFamilyToMale_25CoData(Record data) {
		
		}
	}
	
	public class FatherOfExistingFamilyToMale_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.53
	public DaughterToFemaleAccess getRule_DaughterToFemale() {
		return new DaughterToFemaleAccess();
	}
	
	public class DaughterToFemaleAccess extends NeoRuleCoAccess<DaughterToFemaleData, DaughterToFemaleCoData, DaughterToFemaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(53);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleData(d));
		}
			
		@Override
		public Stream<DaughterToFemaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleCoData(d));
		}
		
		@Override
		public DaughterToFemaleMask mask() {
			return new DaughterToFemaleMask();
		}
	}
	
	public class DaughterToFemaleData extends NeoData {
		public DaughterToFemaleData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleCoData extends NeoData {
		public DaughterToFemaleCoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.54
	public DaughterToFemale_1Access getRule_DaughterToFemale_1() {
		return new DaughterToFemale_1Access();
	}
	
	public class DaughterToFemale_1Access extends NeoRuleCoAccess<DaughterToFemale_1Data, DaughterToFemale_1CoData, DaughterToFemale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(54);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_1Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_1CoData(d));
		}
		
		@Override
		public DaughterToFemale_1Mask mask() {
			return new DaughterToFemale_1Mask();
		}
	}
	
	public class DaughterToFemale_1Data extends NeoData {
		public DaughterToFemale_1Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_1CoData extends NeoData {
		public DaughterToFemale_1CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.55
	public DaughterToFemale_4Access getRule_DaughterToFemale_4() {
		return new DaughterToFemale_4Access();
	}
	
	public class DaughterToFemale_4Access extends NeoRuleCoAccess<DaughterToFemale_4Data, DaughterToFemale_4CoData, DaughterToFemale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(55);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_4Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_4CoData(d));
		}
		
		@Override
		public DaughterToFemale_4Mask mask() {
			return new DaughterToFemale_4Mask();
		}
	}
	
	public class DaughterToFemale_4Data extends NeoData {
		public DaughterToFemale_4Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_4CoData extends NeoData {
		public DaughterToFemale_4CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.56
	public DaughterToFemale_5Access getRule_DaughterToFemale_5() {
		return new DaughterToFemale_5Access();
	}
	
	public class DaughterToFemale_5Access extends NeoRuleCoAccess<DaughterToFemale_5Data, DaughterToFemale_5CoData, DaughterToFemale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(56);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_5Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_5CoData(d));
		}
		
		@Override
		public DaughterToFemale_5Mask mask() {
			return new DaughterToFemale_5Mask();
		}
	}
	
	public class DaughterToFemale_5Data extends NeoData {
		public DaughterToFemale_5Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_5CoData extends NeoData {
		public DaughterToFemale_5CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.57
	public DaughterToFemale_7Access getRule_DaughterToFemale_7() {
		return new DaughterToFemale_7Access();
	}
	
	public class DaughterToFemale_7Access extends NeoRuleCoAccess<DaughterToFemale_7Data, DaughterToFemale_7CoData, DaughterToFemale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(57);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_7Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_7CoData(d));
		}
		
		@Override
		public DaughterToFemale_7Mask mask() {
			return new DaughterToFemale_7Mask();
		}
	}
	
	public class DaughterToFemale_7Data extends NeoData {
		public DaughterToFemale_7Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_7CoData extends NeoData {
		public DaughterToFemale_7CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.58
	public DaughterToFemale_16Access getRule_DaughterToFemale_16() {
		return new DaughterToFemale_16Access();
	}
	
	public class DaughterToFemale_16Access extends NeoRuleCoAccess<DaughterToFemale_16Data, DaughterToFemale_16CoData, DaughterToFemale_16Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(58);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_16Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_16CoData(d));
		}
		
		@Override
		public DaughterToFemale_16Mask mask() {
			return new DaughterToFemale_16Mask();
		}
	}
	
	public class DaughterToFemale_16Data extends NeoData {
		public DaughterToFemale_16Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_16CoData extends NeoData {
		public DaughterToFemale_16CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.59
	public DaughterToFemale_17Access getRule_DaughterToFemale_17() {
		return new DaughterToFemale_17Access();
	}
	
	public class DaughterToFemale_17Access extends NeoRuleCoAccess<DaughterToFemale_17Data, DaughterToFemale_17CoData, DaughterToFemale_17Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(59);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_17Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_17CoData(d));
		}
		
		@Override
		public DaughterToFemale_17Mask mask() {
			return new DaughterToFemale_17Mask();
		}
	}
	
	public class DaughterToFemale_17Data extends NeoData {
		public DaughterToFemale_17Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_17CoData extends NeoData {
		public DaughterToFemale_17CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.60
	public DaughterToFemale_49Access getRule_DaughterToFemale_49() {
		return new DaughterToFemale_49Access();
	}
	
	public class DaughterToFemale_49Access extends NeoRuleCoAccess<DaughterToFemale_49Data, DaughterToFemale_49CoData, DaughterToFemale_49Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(60);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_49Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_49Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_49CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_49CoData(d));
		}
		
		@Override
		public DaughterToFemale_49Mask mask() {
			return new DaughterToFemale_49Mask();
		}
	}
	
	public class DaughterToFemale_49Data extends NeoData {
		public DaughterToFemale_49Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_49CoData extends NeoData {
		public DaughterToFemale_49CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_49Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.61
	public DaughterToFemale_64Access getRule_DaughterToFemale_64() {
		return new DaughterToFemale_64Access();
	}
	
	public class DaughterToFemale_64Access extends NeoRuleCoAccess<DaughterToFemale_64Data, DaughterToFemale_64CoData, DaughterToFemale_64Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(61);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_64Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_64CoData(d));
		}
		
		@Override
		public DaughterToFemale_64Mask mask() {
			return new DaughterToFemale_64Mask();
		}
	}
	
	public class DaughterToFemale_64Data extends NeoData {
		public DaughterToFemale_64Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_64CoData extends NeoData {
		public DaughterToFemale_64CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.62
	public DaughterToFemale_65Access getRule_DaughterToFemale_65() {
		return new DaughterToFemale_65Access();
	}
	
	public class DaughterToFemale_65Access extends NeoRuleCoAccess<DaughterToFemale_65Data, DaughterToFemale_65CoData, DaughterToFemale_65Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(62);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_65Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_65CoData(d));
		}
		
		@Override
		public DaughterToFemale_65Mask mask() {
			return new DaughterToFemale_65Mask();
		}
	}
	
	public class DaughterToFemale_65Data extends NeoData {
		public DaughterToFemale_65Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_65CoData extends NeoData {
		public DaughterToFemale_65CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.63
	public DaughterToFemale_80Access getRule_DaughterToFemale_80() {
		return new DaughterToFemale_80Access();
	}
	
	public class DaughterToFemale_80Access extends NeoRuleCoAccess<DaughterToFemale_80Data, DaughterToFemale_80CoData, DaughterToFemale_80Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(63);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_80Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_80Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_80CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_80CoData(d));
		}
		
		@Override
		public DaughterToFemale_80Mask mask() {
			return new DaughterToFemale_80Mask();
		}
	}
	
	public class DaughterToFemale_80Data extends NeoData {
		public DaughterToFemale_80Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_80CoData extends NeoData {
		public DaughterToFemale_80CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_80Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.64
	public DaughterToFemale_81Access getRule_DaughterToFemale_81() {
		return new DaughterToFemale_81Access();
	}
	
	public class DaughterToFemale_81Access extends NeoRuleCoAccess<DaughterToFemale_81Data, DaughterToFemale_81CoData, DaughterToFemale_81Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(64);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_81Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_81Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_81CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_81CoData(d));
		}
		
		@Override
		public DaughterToFemale_81Mask mask() {
			return new DaughterToFemale_81Mask();
		}
	}
	
	public class DaughterToFemale_81Data extends NeoData {
		public DaughterToFemale_81Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_81CoData extends NeoData {
		public DaughterToFemale_81CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_81Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.65
	public DaughterToFemale_88Access getRule_DaughterToFemale_88() {
		return new DaughterToFemale_88Access();
	}
	
	public class DaughterToFemale_88Access extends NeoRuleCoAccess<DaughterToFemale_88Data, DaughterToFemale_88CoData, DaughterToFemale_88Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(65);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_88Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_88Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_88CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_88CoData(d));
		}
		
		@Override
		public DaughterToFemale_88Mask mask() {
			return new DaughterToFemale_88Mask();
		}
	}
	
	public class DaughterToFemale_88Data extends NeoData {
		public DaughterToFemale_88Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_88CoData extends NeoData {
		public DaughterToFemale_88CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_88Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.66
	public DaughterToFemale_89Access getRule_DaughterToFemale_89() {
		return new DaughterToFemale_89Access();
	}
	
	public class DaughterToFemale_89Access extends NeoRuleCoAccess<DaughterToFemale_89Data, DaughterToFemale_89CoData, DaughterToFemale_89Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(66);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_89Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_89Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_89CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_89CoData(d));
		}
		
		@Override
		public DaughterToFemale_89Mask mask() {
			return new DaughterToFemale_89Mask();
		}
	}
	
	public class DaughterToFemale_89Data extends NeoData {
		public DaughterToFemale_89Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_89CoData extends NeoData {
		public DaughterToFemale_89CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_89Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.67
	public DaughterToFemale_113Access getRule_DaughterToFemale_113() {
		return new DaughterToFemale_113Access();
	}
	
	public class DaughterToFemale_113Access extends NeoRuleCoAccess<DaughterToFemale_113Data, DaughterToFemale_113CoData, DaughterToFemale_113Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(67);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_113Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_113Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_113CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_113CoData(d));
		}
		
		@Override
		public DaughterToFemale_113Mask mask() {
			return new DaughterToFemale_113Mask();
		}
	}
	
	public class DaughterToFemale_113Data extends NeoData {
		public DaughterToFemale_113Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_113CoData extends NeoData {
		public DaughterToFemale_113CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_113Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.68
	public DaughterToFemale_121Access getRule_DaughterToFemale_121() {
		return new DaughterToFemale_121Access();
	}
	
	public class DaughterToFemale_121Access extends NeoRuleCoAccess<DaughterToFemale_121Data, DaughterToFemale_121CoData, DaughterToFemale_121Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(68);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemale_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_121Data(d));
		}
			
		@Override
		public Stream<DaughterToFemale_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemale_121CoData(d));
		}
		
		@Override
		public DaughterToFemale_121Mask mask() {
			return new DaughterToFemale_121Mask();
		}
	}
	
	public class DaughterToFemale_121Data extends NeoData {
		public DaughterToFemale_121Data(Record data) {
		
		}
	}
	
	public class DaughterToFemale_121CoData extends NeoData {
		public DaughterToFemale_121CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemale_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.69
	public DaughterOfExistingFamilyToFemaleAccess getRule_DaughterOfExistingFamilyToFemale() {
		return new DaughterOfExistingFamilyToFemaleAccess();
	}
	
	public class DaughterOfExistingFamilyToFemaleAccess extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemaleData, DaughterOfExistingFamilyToFemaleCoData, DaughterOfExistingFamilyToFemaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(69);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemaleData(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemaleCoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemaleMask mask() {
			return new DaughterOfExistingFamilyToFemaleMask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemaleData extends NeoData {
		public DaughterOfExistingFamilyToFemaleData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemaleCoData extends NeoData {
		public DaughterOfExistingFamilyToFemaleCoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.70
	public DaughterOfExistingFamilyToFemale_1Access getRule_DaughterOfExistingFamilyToFemale_1() {
		return new DaughterOfExistingFamilyToFemale_1Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_1Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_1Data, DaughterOfExistingFamilyToFemale_1CoData, DaughterOfExistingFamilyToFemale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(70);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_1Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_1CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_1Mask mask() {
			return new DaughterOfExistingFamilyToFemale_1Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_1Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_1Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_1CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_1CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.71
	public DaughterOfExistingFamilyToFemale_4Access getRule_DaughterOfExistingFamilyToFemale_4() {
		return new DaughterOfExistingFamilyToFemale_4Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_4Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_4Data, DaughterOfExistingFamilyToFemale_4CoData, DaughterOfExistingFamilyToFemale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(71);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_4Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_4CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_4Mask mask() {
			return new DaughterOfExistingFamilyToFemale_4Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_4Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_4Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_4CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_4CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.72
	public DaughterOfExistingFamilyToFemale_5Access getRule_DaughterOfExistingFamilyToFemale_5() {
		return new DaughterOfExistingFamilyToFemale_5Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_5Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_5Data, DaughterOfExistingFamilyToFemale_5CoData, DaughterOfExistingFamilyToFemale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(72);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_5Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_5CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_5Mask mask() {
			return new DaughterOfExistingFamilyToFemale_5Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_5Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_5Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_5CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_5CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.73
	public DaughterOfExistingFamilyToFemale_7Access getRule_DaughterOfExistingFamilyToFemale_7() {
		return new DaughterOfExistingFamilyToFemale_7Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_7Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_7Data, DaughterOfExistingFamilyToFemale_7CoData, DaughterOfExistingFamilyToFemale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(73);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_7Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_7CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_7Mask mask() {
			return new DaughterOfExistingFamilyToFemale_7Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_7Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_7Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_7CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_7CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.74
	public DaughterOfExistingFamilyToFemale_8Access getRule_DaughterOfExistingFamilyToFemale_8() {
		return new DaughterOfExistingFamilyToFemale_8Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_8Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_8Data, DaughterOfExistingFamilyToFemale_8CoData, DaughterOfExistingFamilyToFemale_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(74);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_8Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_8CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_8Mask mask() {
			return new DaughterOfExistingFamilyToFemale_8Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_8Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_8Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_8CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_8CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.75
	public DaughterOfExistingFamilyToFemale_9Access getRule_DaughterOfExistingFamilyToFemale_9() {
		return new DaughterOfExistingFamilyToFemale_9Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_9Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_9Data, DaughterOfExistingFamilyToFemale_9CoData, DaughterOfExistingFamilyToFemale_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(75);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_9Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_9CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_9Mask mask() {
			return new DaughterOfExistingFamilyToFemale_9Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_9Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_9Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_9CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_9CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.76
	public DaughterOfExistingFamilyToFemale_25Access getRule_DaughterOfExistingFamilyToFemale_25() {
		return new DaughterOfExistingFamilyToFemale_25Access();
	}
	
	public class DaughterOfExistingFamilyToFemale_25Access extends NeoRuleCoAccess<DaughterOfExistingFamilyToFemale_25Data, DaughterOfExistingFamilyToFemale_25CoData, DaughterOfExistingFamilyToFemale_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(76);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_25Data(d));
		}
			
		@Override
		public Stream<DaughterOfExistingFamilyToFemale_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterOfExistingFamilyToFemale_25CoData(d));
		}
		
		@Override
		public DaughterOfExistingFamilyToFemale_25Mask mask() {
			return new DaughterOfExistingFamilyToFemale_25Mask();
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_25Data extends NeoData {
		public DaughterOfExistingFamilyToFemale_25Data(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_25CoData extends NeoData {
		public DaughterOfExistingFamilyToFemale_25CoData(Record data) {
		
		}
	}
	
	public class DaughterOfExistingFamilyToFemale_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.77
	public SonToMaleAccess getRule_SonToMale() {
		return new SonToMaleAccess();
	}
	
	public class SonToMaleAccess extends NeoRuleCoAccess<SonToMaleData, SonToMaleCoData, SonToMaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(77);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleData(d));
		}
			
		@Override
		public Stream<SonToMaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleCoData(d));
		}
		
		@Override
		public SonToMaleMask mask() {
			return new SonToMaleMask();
		}
	}
	
	public class SonToMaleData extends NeoData {
		public SonToMaleData(Record data) {
		
		}
	}
	
	public class SonToMaleCoData extends NeoData {
		public SonToMaleCoData(Record data) {
		
		}
	}
	
	public class SonToMaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.78
	public SonToMale_1Access getRule_SonToMale_1() {
		return new SonToMale_1Access();
	}
	
	public class SonToMale_1Access extends NeoRuleCoAccess<SonToMale_1Data, SonToMale_1CoData, SonToMale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(78);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_1Data(d));
		}
			
		@Override
		public Stream<SonToMale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_1CoData(d));
		}
		
		@Override
		public SonToMale_1Mask mask() {
			return new SonToMale_1Mask();
		}
	}
	
	public class SonToMale_1Data extends NeoData {
		public SonToMale_1Data(Record data) {
		
		}
	}
	
	public class SonToMale_1CoData extends NeoData {
		public SonToMale_1CoData(Record data) {
		
		}
	}
	
	public class SonToMale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.79
	public SonToMale_4Access getRule_SonToMale_4() {
		return new SonToMale_4Access();
	}
	
	public class SonToMale_4Access extends NeoRuleCoAccess<SonToMale_4Data, SonToMale_4CoData, SonToMale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(79);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_4Data(d));
		}
			
		@Override
		public Stream<SonToMale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_4CoData(d));
		}
		
		@Override
		public SonToMale_4Mask mask() {
			return new SonToMale_4Mask();
		}
	}
	
	public class SonToMale_4Data extends NeoData {
		public SonToMale_4Data(Record data) {
		
		}
	}
	
	public class SonToMale_4CoData extends NeoData {
		public SonToMale_4CoData(Record data) {
		
		}
	}
	
	public class SonToMale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.80
	public SonToMale_5Access getRule_SonToMale_5() {
		return new SonToMale_5Access();
	}
	
	public class SonToMale_5Access extends NeoRuleCoAccess<SonToMale_5Data, SonToMale_5CoData, SonToMale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(80);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_5Data(d));
		}
			
		@Override
		public Stream<SonToMale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_5CoData(d));
		}
		
		@Override
		public SonToMale_5Mask mask() {
			return new SonToMale_5Mask();
		}
	}
	
	public class SonToMale_5Data extends NeoData {
		public SonToMale_5Data(Record data) {
		
		}
	}
	
	public class SonToMale_5CoData extends NeoData {
		public SonToMale_5CoData(Record data) {
		
		}
	}
	
	public class SonToMale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.81
	public SonToMale_7Access getRule_SonToMale_7() {
		return new SonToMale_7Access();
	}
	
	public class SonToMale_7Access extends NeoRuleCoAccess<SonToMale_7Data, SonToMale_7CoData, SonToMale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(81);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_7Data(d));
		}
			
		@Override
		public Stream<SonToMale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_7CoData(d));
		}
		
		@Override
		public SonToMale_7Mask mask() {
			return new SonToMale_7Mask();
		}
	}
	
	public class SonToMale_7Data extends NeoData {
		public SonToMale_7Data(Record data) {
		
		}
	}
	
	public class SonToMale_7CoData extends NeoData {
		public SonToMale_7CoData(Record data) {
		
		}
	}
	
	public class SonToMale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.82
	public SonToMale_16Access getRule_SonToMale_16() {
		return new SonToMale_16Access();
	}
	
	public class SonToMale_16Access extends NeoRuleCoAccess<SonToMale_16Data, SonToMale_16CoData, SonToMale_16Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(82);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_16Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_16Data(d));
		}
			
		@Override
		public Stream<SonToMale_16CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_16CoData(d));
		}
		
		@Override
		public SonToMale_16Mask mask() {
			return new SonToMale_16Mask();
		}
	}
	
	public class SonToMale_16Data extends NeoData {
		public SonToMale_16Data(Record data) {
		
		}
	}
	
	public class SonToMale_16CoData extends NeoData {
		public SonToMale_16CoData(Record data) {
		
		}
	}
	
	public class SonToMale_16Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.83
	public SonToMale_17Access getRule_SonToMale_17() {
		return new SonToMale_17Access();
	}
	
	public class SonToMale_17Access extends NeoRuleCoAccess<SonToMale_17Data, SonToMale_17CoData, SonToMale_17Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(83);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_17Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_17Data(d));
		}
			
		@Override
		public Stream<SonToMale_17CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_17CoData(d));
		}
		
		@Override
		public SonToMale_17Mask mask() {
			return new SonToMale_17Mask();
		}
	}
	
	public class SonToMale_17Data extends NeoData {
		public SonToMale_17Data(Record data) {
		
		}
	}
	
	public class SonToMale_17CoData extends NeoData {
		public SonToMale_17CoData(Record data) {
		
		}
	}
	
	public class SonToMale_17Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.84
	public SonToMale_49Access getRule_SonToMale_49() {
		return new SonToMale_49Access();
	}
	
	public class SonToMale_49Access extends NeoRuleCoAccess<SonToMale_49Data, SonToMale_49CoData, SonToMale_49Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(84);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_49Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_49Data(d));
		}
			
		@Override
		public Stream<SonToMale_49CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_49CoData(d));
		}
		
		@Override
		public SonToMale_49Mask mask() {
			return new SonToMale_49Mask();
		}
	}
	
	public class SonToMale_49Data extends NeoData {
		public SonToMale_49Data(Record data) {
		
		}
	}
	
	public class SonToMale_49CoData extends NeoData {
		public SonToMale_49CoData(Record data) {
		
		}
	}
	
	public class SonToMale_49Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.85
	public SonToMale_64Access getRule_SonToMale_64() {
		return new SonToMale_64Access();
	}
	
	public class SonToMale_64Access extends NeoRuleCoAccess<SonToMale_64Data, SonToMale_64CoData, SonToMale_64Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(85);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_64Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_64Data(d));
		}
			
		@Override
		public Stream<SonToMale_64CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_64CoData(d));
		}
		
		@Override
		public SonToMale_64Mask mask() {
			return new SonToMale_64Mask();
		}
	}
	
	public class SonToMale_64Data extends NeoData {
		public SonToMale_64Data(Record data) {
		
		}
	}
	
	public class SonToMale_64CoData extends NeoData {
		public SonToMale_64CoData(Record data) {
		
		}
	}
	
	public class SonToMale_64Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.86
	public SonToMale_65Access getRule_SonToMale_65() {
		return new SonToMale_65Access();
	}
	
	public class SonToMale_65Access extends NeoRuleCoAccess<SonToMale_65Data, SonToMale_65CoData, SonToMale_65Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(86);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_65Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_65Data(d));
		}
			
		@Override
		public Stream<SonToMale_65CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_65CoData(d));
		}
		
		@Override
		public SonToMale_65Mask mask() {
			return new SonToMale_65Mask();
		}
	}
	
	public class SonToMale_65Data extends NeoData {
		public SonToMale_65Data(Record data) {
		
		}
	}
	
	public class SonToMale_65CoData extends NeoData {
		public SonToMale_65CoData(Record data) {
		
		}
	}
	
	public class SonToMale_65Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.87
	public SonToMale_80Access getRule_SonToMale_80() {
		return new SonToMale_80Access();
	}
	
	public class SonToMale_80Access extends NeoRuleCoAccess<SonToMale_80Data, SonToMale_80CoData, SonToMale_80Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(87);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_80Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_80Data(d));
		}
			
		@Override
		public Stream<SonToMale_80CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_80CoData(d));
		}
		
		@Override
		public SonToMale_80Mask mask() {
			return new SonToMale_80Mask();
		}
	}
	
	public class SonToMale_80Data extends NeoData {
		public SonToMale_80Data(Record data) {
		
		}
	}
	
	public class SonToMale_80CoData extends NeoData {
		public SonToMale_80CoData(Record data) {
		
		}
	}
	
	public class SonToMale_80Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.88
	public SonToMale_81Access getRule_SonToMale_81() {
		return new SonToMale_81Access();
	}
	
	public class SonToMale_81Access extends NeoRuleCoAccess<SonToMale_81Data, SonToMale_81CoData, SonToMale_81Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(88);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_81Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_81Data(d));
		}
			
		@Override
		public Stream<SonToMale_81CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_81CoData(d));
		}
		
		@Override
		public SonToMale_81Mask mask() {
			return new SonToMale_81Mask();
		}
	}
	
	public class SonToMale_81Data extends NeoData {
		public SonToMale_81Data(Record data) {
		
		}
	}
	
	public class SonToMale_81CoData extends NeoData {
		public SonToMale_81CoData(Record data) {
		
		}
	}
	
	public class SonToMale_81Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.89
	public SonToMale_88Access getRule_SonToMale_88() {
		return new SonToMale_88Access();
	}
	
	public class SonToMale_88Access extends NeoRuleCoAccess<SonToMale_88Data, SonToMale_88CoData, SonToMale_88Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(89);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_88Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_88Data(d));
		}
			
		@Override
		public Stream<SonToMale_88CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_88CoData(d));
		}
		
		@Override
		public SonToMale_88Mask mask() {
			return new SonToMale_88Mask();
		}
	}
	
	public class SonToMale_88Data extends NeoData {
		public SonToMale_88Data(Record data) {
		
		}
	}
	
	public class SonToMale_88CoData extends NeoData {
		public SonToMale_88CoData(Record data) {
		
		}
	}
	
	public class SonToMale_88Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.90
	public SonToMale_89Access getRule_SonToMale_89() {
		return new SonToMale_89Access();
	}
	
	public class SonToMale_89Access extends NeoRuleCoAccess<SonToMale_89Data, SonToMale_89CoData, SonToMale_89Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(90);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_89Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_89Data(d));
		}
			
		@Override
		public Stream<SonToMale_89CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_89CoData(d));
		}
		
		@Override
		public SonToMale_89Mask mask() {
			return new SonToMale_89Mask();
		}
	}
	
	public class SonToMale_89Data extends NeoData {
		public SonToMale_89Data(Record data) {
		
		}
	}
	
	public class SonToMale_89CoData extends NeoData {
		public SonToMale_89CoData(Record data) {
		
		}
	}
	
	public class SonToMale_89Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.91
	public SonToMale_113Access getRule_SonToMale_113() {
		return new SonToMale_113Access();
	}
	
	public class SonToMale_113Access extends NeoRuleCoAccess<SonToMale_113Data, SonToMale_113CoData, SonToMale_113Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(91);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_113Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_113Data(d));
		}
			
		@Override
		public Stream<SonToMale_113CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_113CoData(d));
		}
		
		@Override
		public SonToMale_113Mask mask() {
			return new SonToMale_113Mask();
		}
	}
	
	public class SonToMale_113Data extends NeoData {
		public SonToMale_113Data(Record data) {
		
		}
	}
	
	public class SonToMale_113CoData extends NeoData {
		public SonToMale_113CoData(Record data) {
		
		}
	}
	
	public class SonToMale_113Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.92
	public SonToMale_121Access getRule_SonToMale_121() {
		return new SonToMale_121Access();
	}
	
	public class SonToMale_121Access extends NeoRuleCoAccess<SonToMale_121Data, SonToMale_121CoData, SonToMale_121Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__familyName = "familyName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(92);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMale_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_121Data(d));
		}
			
		@Override
		public Stream<SonToMale_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMale_121CoData(d));
		}
		
		@Override
		public SonToMale_121Mask mask() {
			return new SonToMale_121Mask();
		}
	}
	
	public class SonToMale_121Data extends NeoData {
		public SonToMale_121Data(Record data) {
		
		}
	}
	
	public class SonToMale_121CoData extends NeoData {
		public SonToMale_121CoData(Record data) {
		
		}
	}
	
	public class SonToMale_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.93
	public SonOfExistingFamilyToMaleAccess getRule_SonOfExistingFamilyToMale() {
		return new SonOfExistingFamilyToMaleAccess();
	}
	
	public class SonOfExistingFamilyToMaleAccess extends NeoRuleCoAccess<SonOfExistingFamilyToMaleData, SonOfExistingFamilyToMaleCoData, SonOfExistingFamilyToMaleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(93);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMaleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMaleData(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMaleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMaleCoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMaleMask mask() {
			return new SonOfExistingFamilyToMaleMask();
		}
	}
	
	public class SonOfExistingFamilyToMaleData extends NeoData {
		public SonOfExistingFamilyToMaleData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMaleCoData extends NeoData {
		public SonOfExistingFamilyToMaleCoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMaleMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.94
	public SonOfExistingFamilyToMale_1Access getRule_SonOfExistingFamilyToMale_1() {
		return new SonOfExistingFamilyToMale_1Access();
	}
	
	public class SonOfExistingFamilyToMale_1Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_1Data, SonOfExistingFamilyToMale_1CoData, SonOfExistingFamilyToMale_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(94);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_1Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_1CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_1Mask mask() {
			return new SonOfExistingFamilyToMale_1Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_1Data extends NeoData {
		public SonOfExistingFamilyToMale_1Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_1CoData extends NeoData {
		public SonOfExistingFamilyToMale_1CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.95
	public SonOfExistingFamilyToMale_4Access getRule_SonOfExistingFamilyToMale_4() {
		return new SonOfExistingFamilyToMale_4Access();
	}
	
	public class SonOfExistingFamilyToMale_4Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_4Data, SonOfExistingFamilyToMale_4CoData, SonOfExistingFamilyToMale_4Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(95);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_4Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_4Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_4CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_4CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_4Mask mask() {
			return new SonOfExistingFamilyToMale_4Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_4Data extends NeoData {
		public SonOfExistingFamilyToMale_4Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_4CoData extends NeoData {
		public SonOfExistingFamilyToMale_4CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_4Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.96
	public SonOfExistingFamilyToMale_5Access getRule_SonOfExistingFamilyToMale_5() {
		return new SonOfExistingFamilyToMale_5Access();
	}
	
	public class SonOfExistingFamilyToMale_5Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_5Data, SonOfExistingFamilyToMale_5CoData, SonOfExistingFamilyToMale_5Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(96);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_5Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_5CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_5Mask mask() {
			return new SonOfExistingFamilyToMale_5Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_5Data extends NeoData {
		public SonOfExistingFamilyToMale_5Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_5CoData extends NeoData {
		public SonOfExistingFamilyToMale_5CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.97
	public SonOfExistingFamilyToMale_7Access getRule_SonOfExistingFamilyToMale_7() {
		return new SonOfExistingFamilyToMale_7Access();
	}
	
	public class SonOfExistingFamilyToMale_7Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_7Data, SonOfExistingFamilyToMale_7CoData, SonOfExistingFamilyToMale_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(97);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_7Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_7CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_7Mask mask() {
			return new SonOfExistingFamilyToMale_7Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_7Data extends NeoData {
		public SonOfExistingFamilyToMale_7Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_7CoData extends NeoData {
		public SonOfExistingFamilyToMale_7CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.98
	public SonOfExistingFamilyToMale_8Access getRule_SonOfExistingFamilyToMale_8() {
		return new SonOfExistingFamilyToMale_8Access();
	}
	
	public class SonOfExistingFamilyToMale_8Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_8Data, SonOfExistingFamilyToMale_8CoData, SonOfExistingFamilyToMale_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(98);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_8Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_8CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_8Mask mask() {
			return new SonOfExistingFamilyToMale_8Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_8Data extends NeoData {
		public SonOfExistingFamilyToMale_8Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_8CoData extends NeoData {
		public SonOfExistingFamilyToMale_8CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.99
	public SonOfExistingFamilyToMale_9Access getRule_SonOfExistingFamilyToMale_9() {
		return new SonOfExistingFamilyToMale_9Access();
	}
	
	public class SonOfExistingFamilyToMale_9Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_9Data, SonOfExistingFamilyToMale_9CoData, SonOfExistingFamilyToMale_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(99);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_9Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_9CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_9Mask mask() {
			return new SonOfExistingFamilyToMale_9Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_9Data extends NeoData {
		public SonOfExistingFamilyToMale_9Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_9CoData extends NeoData {
		public SonOfExistingFamilyToMale_9CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/tgg/FamiliesToPersons_Constrained_MI.msl#//@entities.100
	public SonOfExistingFamilyToMale_25Access getRule_SonOfExistingFamilyToMale_25() {
		return new SonOfExistingFamilyToMale_25Access();
	}
	
	public class SonOfExistingFamilyToMale_25Access extends NeoRuleCoAccess<SonOfExistingFamilyToMale_25Data, SonOfExistingFamilyToMale_25CoData, SonOfExistingFamilyToMale_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _families = "families";
		public final String _p = "p";
		public final String _persons = "persons";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(100);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonOfExistingFamilyToMale_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_25Data(d));
		}
			
		@Override
		public Stream<SonOfExistingFamilyToMale_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonOfExistingFamilyToMale_25CoData(d));
		}
		
		@Override
		public SonOfExistingFamilyToMale_25Mask mask() {
			return new SonOfExistingFamilyToMale_25Mask();
		}
	}
	
	public class SonOfExistingFamilyToMale_25Data extends NeoData {
		public SonOfExistingFamilyToMale_25Data(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_25CoData extends NeoData {
		public SonOfExistingFamilyToMale_25CoData(Record data) {
		
		}
	}
	
	public class SonOfExistingFamilyToMale_25Mask extends NeoMask {
	}
}
