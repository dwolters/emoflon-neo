/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_JavaToDoc {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_JavaToDoc(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_JavaToDoc(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_JavaToDoc(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.0
	public void exportMetamodelsForJavaToDoc() throws FlattenerException {
		{
			var api = new org.emoflon.neo.api.javatodoc.metamodels.API_SimpleJava(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
			builder.exportEMSLEntityToNeo4j(api.getMetamodel_SimpleJava());
		}
		{
			var api = new org.emoflon.neo.api.javatodoc.metamodels.API_SimpleDoc(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
			builder.exportEMSLEntityToNeo4j(api.getMetamodel_SimpleDoc());
		}
	}
	
	public Collection<TripleRule> getTripleRulesOfJavaToDoc(){
		var rules = new HashSet<TripleRule>();
		var rs = spec.eResource().getResourceSet();
		{
			var uri = "platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.1";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.3";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		{
			var uri = "platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.5";
			rules.add((TripleRule) rs.getEObject(URI.createURI(uri), true));
		}
		return rules;
	}
	
	public Collection<IConstraint> getConstraintsOfJavaToDoc(){
		var constraints = new HashSet<IConstraint>();
		var rs = spec.eResource().getResourceSet();
		return constraints;
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.1
	public static final String JavaToDoc__ClazzToDocRule = "ClazzToDocRule";
	public static final String JavaToDoc__ClazzToDocRule__p = "p";
	public static final String JavaToDoc__ClazzToDocRule__c = "c";
	public static final String JavaToDoc__ClazzToDocRule__f = "f";
	public static final String JavaToDoc__ClazzToDocRule__doc = "doc";
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.2
	public ClazzNameIsTakenAccess getPattern_ClazzNameIsTaken() {
		return new ClazzNameIsTakenAccess();
	}
	
	public class ClazzNameIsTakenAccess extends NeoPatternAccess<ClazzNameIsTakenData, ClazzNameIsTakenMask> {
		public final String _clazz = "clazz";
		
		public final String _param__clazzName = "clazzName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ClazzNameIsTakenData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ClazzNameIsTakenData(d));
		}
		
		@Override
		public ClazzNameIsTakenMask mask() {
			return new ClazzNameIsTakenMask();
		}
	}
	
	public class ClazzNameIsTakenData extends NeoData {
		public ClazzNameIsTakenData(Record data) {
			
		}
	}
	
	public class ClazzNameIsTakenMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.3
	public static final String JavaToDoc__RootToRootRule = "RootToRootRule";
	public static final String JavaToDoc__RootToRootRule__p = "p";
	public static final String JavaToDoc__RootToRootRule__f = "f";
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.4
	public PackageNameIsTakenAccess getPattern_PackageNameIsTaken() {
		return new PackageNameIsTakenAccess();
	}
	
	public class PackageNameIsTakenAccess extends NeoPatternAccess<PackageNameIsTakenData, PackageNameIsTakenMask> {
		public final String _package = "package";
		
		public final String _param__packageName = "packageName";
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(4);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<PackageNameIsTakenData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PackageNameIsTakenData(d));
		}
		
		@Override
		public PackageNameIsTakenMask mask() {
			return new PackageNameIsTakenMask();
		}
	}
	
	public class PackageNameIsTakenData extends NeoData {
		public PackageNameIsTakenData(Record data) {
			
		}
	}
	
	public class PackageNameIsTakenMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/JavaToDoc/bin/JavaToDoc.msl#//@entities.5
	public static final String JavaToDoc__SubToSubRule = "SubToSubRule";
	public static final String JavaToDoc__SubToSubRule__p = "p";
	public static final String JavaToDoc__SubToSubRule__subP = "subP";
	public static final String JavaToDoc__SubToSubRule__f = "f";
	public static final String JavaToDoc__SubToSubRule__subF = "subF";
	public static final String JavaToDoc__SubToSubRule__doc = "doc";
}
