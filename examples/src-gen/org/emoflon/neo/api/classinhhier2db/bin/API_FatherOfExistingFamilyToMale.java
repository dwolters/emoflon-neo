/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_FatherOfExistingFamilyToMale {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_FatherOfExistingFamilyToMale(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_FatherOfExistingFamilyToMale(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/FatherOfExistingFamilyToMale.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_FatherOfExistingFamilyToMale(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/FatherOfExistingFamilyToMale.msl#//@entities.0
	public static final String FamiliesToPersons_Constrained__FatherOfExistingFamilyToMale = "FatherOfExistingFamilyToMale";
	
	//:~> platform:/resource/ClassInhHier2DB/FamiliesToPersons_Constrained/bin/FatherOfExistingFamilyToMale.msl#//@entities.1
	public ExistingFatherAccess getPattern_ExistingFather() {
		return new ExistingFatherAccess();
	}
	
	public class ExistingFatherAccess extends NeoPatternAccess<ExistingFatherData, ExistingFatherMask> {
		public final String _f = "f";
		public final String _existingFather = "existingFather";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(1);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ExistingFatherData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ExistingFatherData(d));
		}
		
		@Override
		public ExistingFatherMask mask() {
			return new ExistingFatherMask();
		}
	}
	
	public class ExistingFatherData extends NeoData {
		public ExistingFatherData(Record data) {
			
		}
	}
	
	public class ExistingFatherMask extends NeoMask {
	}
}
