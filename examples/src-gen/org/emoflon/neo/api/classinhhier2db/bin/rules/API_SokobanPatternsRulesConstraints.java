/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin.rules;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_SokobanPatternsRulesConstraints {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_SokobanPatternsRulesConstraints(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_SokobanPatternsRulesConstraints(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_SokobanPatternsRulesConstraints(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.0
	public SokobanOnFieldOfBoardAccess getPattern_SokobanOnFieldOfBoard() {
		return new SokobanOnFieldOfBoardAccess();
	}
	
	public class SokobanOnFieldOfBoardAccess extends NeoPatternAccess<SokobanOnFieldOfBoardData, SokobanOnFieldOfBoardMask> {
		public final String _b = "b";
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		public final String _sokoban = "sokoban";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(0);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SokobanOnFieldOfBoardData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SokobanOnFieldOfBoardData(d));
		}
		
		@Override
		public SokobanOnFieldOfBoardMask mask() {
			return new SokobanOnFieldOfBoardMask();
		}
	}
	
	public class SokobanOnFieldOfBoardData extends NeoData {
		public final BNode _b;
		public final B_selectedFigure_0_sokobanRel _b_selectedFigure_0_sokoban;
		public final B_fields_1_f1Rel _b_fields_1_f1;
		public final B_fields_2_f2Rel _b_fields_2_f2;
		public final F1Node _f1;
		public final F1_right_0_f2Rel _f1_right_0_f2;
		public final F2Node _f2;
		public final SokobanNode _sokoban;
		public final Sokoban_field_0_f1Rel _sokoban_field_0_f1;
		
		public SokobanOnFieldOfBoardData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_selectedFigure_0_sokoban = data.get("b_selectedFigure_0_sokoban");
			this._b_selectedFigure_0_sokoban = new B_selectedFigure_0_sokobanRel(_b_selectedFigure_0_sokoban);
			var _b_fields_1_f1 = data.get("b_fields_1_f1");
			this._b_fields_1_f1 = new B_fields_1_f1Rel(_b_fields_1_f1);
			var _b_fields_2_f2 = data.get("b_fields_2_f2");
			this._b_fields_2_f2 = new B_fields_2_f2Rel(_b_fields_2_f2);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f1_right_0_f2 = data.get("f1_right_0_f2");
			this._f1_right_0_f2 = new F1_right_0_f2Rel(_f1_right_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
			var _sokoban = data.get("sokoban");
			this._sokoban = new SokobanNode(_sokoban);
			var _sokoban_field_0_f1 = data.get("sokoban_field_0_f1");
			this._sokoban_field_0_f1 = new Sokoban_field_0_f1Rel(_sokoban_field_0_f1);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_selectedFigure_0_sokobanRel {
		
			public B_selectedFigure_0_sokobanRel(Value _b_selectedFigure_0_sokoban) {
			}
		}
		public class B_fields_1_f1Rel {
			public int _row;
			public int _col;
		
			public B_fields_1_f1Rel(Value _b_fields_1_f1) {
				if(!_b_fields_1_f1.get("row").isNull())
					this._row = _b_fields_1_f1.get("row").asInt();
				if(!_b_fields_1_f1.get("col").isNull())
					this._col = _b_fields_1_f1.get("col").asInt();
			}
		}
		public class B_fields_2_f2Rel {
			public int _row;
			public int _col;
		
			public B_fields_2_f2Rel(Value _b_fields_2_f2) {
				if(!_b_fields_2_f2.get("row").isNull())
					this._row = _b_fields_2_f2.get("row").asInt();
				if(!_b_fields_2_f2.get("col").isNull())
					this._col = _b_fields_2_f2.get("col").asInt();
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F1_right_0_f2Rel {
		
			public F1_right_0_f2Rel(Value _f1_right_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
		public class SokobanNode {
			public String _ename;
			
			public SokobanNode(Value _sokoban) {
				if(!_sokoban.get("ename").isNull())
					this._ename = _sokoban.get("ename").asString();
			}
		}
		
		public class Sokoban_field_0_f1Rel {
		
			public Sokoban_field_0_f1Rel(Value _sokoban_field_0_f1) {
			}
		}
	}
	
	public class SokobanOnFieldOfBoardMask extends NeoMask {
		public SokobanOnFieldOfBoardMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setB_fields_1_f1Row(int value) {
			attributeMask.put("b_fields_1_f1.row", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setB_fields_1_f1Col(int value) {
			attributeMask.put("b_fields_1_f1.col", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setB_fields_2_f2Row(int value) {
			attributeMask.put("b_fields_2_f2.row", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setB_fields_2_f2Col(int value) {
			attributeMask.put("b_fields_2_f2.col", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setSokoban(Long value) {
			nodeMask.put("sokoban", value);
			return this;
		}
		public SokobanOnFieldOfBoardMask setSokobanEname(String value) {
			attributeMask.put("sokoban.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.1
	public BlockOnEndFieldAccess getPattern_BlockOnEndField() {
		return new BlockOnEndFieldAccess();
	}
	
	public class BlockOnEndFieldAccess extends NeoPatternAccess<BlockOnEndFieldData, BlockOnEndFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(1);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockOnEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockOnEndFieldData(d));
		}
		
		@Override
		public BlockOnEndFieldMask mask() {
			return new BlockOnEndFieldMask();
		}
	}
	
	public class BlockOnEndFieldData extends NeoData {
		public final BNode _b;
		public final B_field_0_fRel _b_field_0_f;
		public final FNode _f;
		
		public BlockOnEndFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_field_0_f = data.get("b_field_0_f");
			this._b_field_0_f = new B_field_0_fRel(_b_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_field_0_fRel {
		
			public B_field_0_fRel(Value _b_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class BlockOnEndFieldMask extends NeoMask {
		public BlockOnEndFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public BlockOnEndFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public BlockOnEndFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public BlockOnEndFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public BlockOnEndFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.2
	public BlockOnEndFieldWithRightAccess getPattern_BlockOnEndFieldWithRight() {
		return new BlockOnEndFieldWithRightAccess();
	}
	
	public class BlockOnEndFieldWithRightAccess extends NeoPatternAccess<BlockOnEndFieldWithRightData, BlockOnEndFieldWithRightMask> {
		public final String _b = "b";
		public final String _f = "f";
		public final String _fR = "fR";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockOnEndFieldWithRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockOnEndFieldWithRightData(d));
		}
		
		@Override
		public BlockOnEndFieldWithRightMask mask() {
			return new BlockOnEndFieldWithRightMask();
		}
	}
	
	public class BlockOnEndFieldWithRightData extends NeoData {
		public final BNode _b;
		public final B_field_0_fRel _b_field_0_f;
		public final FNode _f;
		public final F_right_0_fRRel _f_right_0_fR;
		public final FRNode _fR;
		
		public BlockOnEndFieldWithRightData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_field_0_f = data.get("b_field_0_f");
			this._b_field_0_f = new B_field_0_fRel(_b_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_fR = data.get("f_right_0_fR");
			this._f_right_0_fR = new F_right_0_fRRel(_f_right_0_fR);
			var _fR = data.get("fR");
			this._fR = new FRNode(_fR);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_field_0_fRel {
		
			public B_field_0_fRel(Value _b_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_fRRel {
		
			public F_right_0_fRRel(Value _f_right_0_fR) {
			}
		}
		public class FRNode {
			public boolean _endPos;
			public String _ename;
			
			public FRNode(Value _fR) {
				if(!_fR.get("endPos").isNull())
					this._endPos = _fR.get("endPos").asBoolean();
				if(!_fR.get("ename").isNull())
					this._ename = _fR.get("ename").asString();
			}
		}
		
	}
	
	public class BlockOnEndFieldWithRightMask extends NeoMask {
		public BlockOnEndFieldWithRightMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setFR(Long value) {
			nodeMask.put("fR", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setFREndPos(boolean value) {
			attributeMask.put("fR.endPos", value);
			return this;
		}
		public BlockOnEndFieldWithRightMask setFREname(String value) {
			attributeMask.put("fR.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.3
	public BlockOnNoEndFieldAccess getPattern_BlockOnNoEndField() {
		return new BlockOnNoEndFieldAccess();
	}
	
	public class BlockOnNoEndFieldAccess extends NeoPatternAccess<BlockOnNoEndFieldData, BlockOnNoEndFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(3);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockOnNoEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockOnNoEndFieldData(d));
		}
		
		@Override
		public BlockOnNoEndFieldMask mask() {
			return new BlockOnNoEndFieldMask();
		}
	}
	
	public class BlockOnNoEndFieldData extends NeoData {
		public final BNode _b;
		public final B_field_0_fRel _b_field_0_f;
		public final FNode _f;
		
		public BlockOnNoEndFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_field_0_f = data.get("b_field_0_f");
			this._b_field_0_f = new B_field_0_fRel(_b_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_field_0_fRel {
		
			public B_field_0_fRel(Value _b_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class BlockOnNoEndFieldMask extends NeoMask {
		public BlockOnNoEndFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public BlockOnNoEndFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public BlockOnNoEndFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public BlockOnNoEndFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public BlockOnNoEndFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.4
	public IConstraint getConstraint_EnforceBlockOnEndField() {
		var c = (Constraint) spec.getEntities().get(4);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.5
	public IConstraint getConstraint_EnforceBlockOnNoEndField() {
		var c = (Constraint) spec.getEntities().get(5);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.6
	public IConstraint getConstraint_ForbidBlockOnNoEndField() {
		var c = (Constraint) spec.getEntities().get(6);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.7
	public IConstraint getConstraint_GameFinished() {
		var c = (Constraint) spec.getEntities().get(7);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.8
	public OneSokobanAccess getPattern_OneSokoban() {
		return new OneSokobanAccess();
	}
	
	public class OneSokobanAccess extends NeoPatternAccess<OneSokobanData, OneSokobanMask> {
		public final String _sokoban = "sokoban";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneSokobanData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneSokobanData(d));
		}
		
		@Override
		public OneSokobanMask mask() {
			return new OneSokobanMask();
		}
	}
	
	public class OneSokobanData extends NeoData {
		public final SokobanNode _sokoban;
		
		public OneSokobanData(Record data) {
			var _sokoban = data.get("sokoban");
			this._sokoban = new SokobanNode(_sokoban);
		}
		
		
		public class SokobanNode {
			public String _ename;
			
			public SokobanNode(Value _sokoban) {
				if(!_sokoban.get("ename").isNull())
					this._ename = _sokoban.get("ename").asString();
			}
		}
		
	}
	
	public class OneSokobanMask extends NeoMask {
		public OneSokobanMask setSokoban(Long value) {
			nodeMask.put("sokoban", value);
			return this;
		}
		public OneSokobanMask setSokobanEname(String value) {
			attributeMask.put("sokoban.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.9
	public TwoSokobanAccess getPattern_TwoSokoban() {
		return new TwoSokobanAccess();
	}
	
	public class TwoSokobanAccess extends NeoPatternAccess<TwoSokobanData, TwoSokobanMask> {
		public final String _sokoban = "sokoban";
		public final String _sokoban2 = "sokoban2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(9);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoSokobanData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoSokobanData(d));
		}
		
		@Override
		public TwoSokobanMask mask() {
			return new TwoSokobanMask();
		}
	}
	
	public class TwoSokobanData extends NeoData {
		public final SokobanNode _sokoban;
		public final Sokoban2Node _sokoban2;
		
		public TwoSokobanData(Record data) {
			var _sokoban = data.get("sokoban");
			this._sokoban = new SokobanNode(_sokoban);
			var _sokoban2 = data.get("sokoban2");
			this._sokoban2 = new Sokoban2Node(_sokoban2);
		}
		
		
		public class SokobanNode {
			public String _ename;
			
			public SokobanNode(Value _sokoban) {
				if(!_sokoban.get("ename").isNull())
					this._ename = _sokoban.get("ename").asString();
			}
		}
		
		public class Sokoban2Node {
			public String _ename;
			
			public Sokoban2Node(Value _sokoban2) {
				if(!_sokoban2.get("ename").isNull())
					this._ename = _sokoban2.get("ename").asString();
			}
		}
		
	}
	
	public class TwoSokobanMask extends NeoMask {
		public TwoSokobanMask setSokoban(Long value) {
			nodeMask.put("sokoban", value);
			return this;
		}
		public TwoSokobanMask setSokobanEname(String value) {
			attributeMask.put("sokoban.ename", value);
			return this;
		}
		public TwoSokobanMask setSokoban2(Long value) {
			nodeMask.put("sokoban2", value);
			return this;
		}
		public TwoSokobanMask setSokoban2Ename(String value) {
			attributeMask.put("sokoban2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.10
	public OneSokobanSelectedFigureRequiredAccess getPattern_OneSokobanSelectedFigureRequired() {
		return new OneSokobanSelectedFigureRequiredAccess();
	}
	
	public class OneSokobanSelectedFigureRequiredAccess extends NeoPatternAccess<OneSokobanSelectedFigureRequiredData, OneSokobanSelectedFigureRequiredMask> {
		public final String _sokoban = "sokoban";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(10);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneSokobanSelectedFigureRequiredData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneSokobanSelectedFigureRequiredData(d));
		}
		
		@Override
		public OneSokobanSelectedFigureRequiredMask mask() {
			return new OneSokobanSelectedFigureRequiredMask();
		}
	}
	
	public class OneSokobanSelectedFigureRequiredData extends NeoData {
		public final SokobanNode _sokoban;
		
		public OneSokobanSelectedFigureRequiredData(Record data) {
			var _sokoban = data.get("sokoban");
			this._sokoban = new SokobanNode(_sokoban);
		}
		
		
		public class SokobanNode {
			public String _ename;
			
			public SokobanNode(Value _sokoban) {
				if(!_sokoban.get("ename").isNull())
					this._ename = _sokoban.get("ename").asString();
			}
		}
		
	}
	
	public class OneSokobanSelectedFigureRequiredMask extends NeoMask {
		public OneSokobanSelectedFigureRequiredMask setSokoban(Long value) {
			nodeMask.put("sokoban", value);
			return this;
		}
		public OneSokobanSelectedFigureRequiredMask setSokobanEname(String value) {
			attributeMask.put("sokoban.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.11
	public IConstraint getConstraint_NoSokoban() {
		var c = (Constraint) spec.getEntities().get(11);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.12
	public IConstraint getConstraint_OneSokobans() {
		var c = (Constraint) spec.getEntities().get(12);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.13
	public IConstraint getConstraint_TwoSokobans() {
		var c = (Constraint) spec.getEntities().get(13);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.14
	public IConstraint getConstraint_HasOneSokoban() {
		var c = (Constraint) spec.getEntities().get(14);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.15
	public IConstraint getConstraint_SokobanIsSelectedFigure() {
		var c = (Constraint) spec.getEntities().get(15);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.16
	public IConstraint getConstraint_IfSokobanSelectedFigureThenOnField() {
		var c = (Constraint) spec.getEntities().get(16);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.17
	public SelectedFigureRequiredAccess getPattern_SelectedFigureRequired() {
		return new SelectedFigureRequiredAccess();
	}
	
	public class SelectedFigureRequiredAccess extends NeoPatternAccess<SelectedFigureRequiredData, SelectedFigureRequiredMask> {
		public final String _b = "b";
		public final String _sokoban = "sokoban";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(17);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SelectedFigureRequiredData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SelectedFigureRequiredData(d));
		}
		
		@Override
		public SelectedFigureRequiredMask mask() {
			return new SelectedFigureRequiredMask();
		}
	}
	
	public class SelectedFigureRequiredData extends NeoData {
		public final BNode _b;
		public final B_selectedFigure_0_sokobanRel _b_selectedFigure_0_sokoban;
		public final SokobanNode _sokoban;
		
		public SelectedFigureRequiredData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_selectedFigure_0_sokoban = data.get("b_selectedFigure_0_sokoban");
			this._b_selectedFigure_0_sokoban = new B_selectedFigure_0_sokobanRel(_b_selectedFigure_0_sokoban);
			var _sokoban = data.get("sokoban");
			this._sokoban = new SokobanNode(_sokoban);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_selectedFigure_0_sokobanRel {
		
			public B_selectedFigure_0_sokobanRel(Value _b_selectedFigure_0_sokoban) {
			}
		}
		public class SokobanNode {
			public String _ename;
			
			public SokobanNode(Value _sokoban) {
				if(!_sokoban.get("ename").isNull())
					this._ename = _sokoban.get("ename").asString();
			}
		}
		
	}
	
	public class SelectedFigureRequiredMask extends NeoMask {
		public SelectedFigureRequiredMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public SelectedFigureRequiredMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public SelectedFigureRequiredMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public SelectedFigureRequiredMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public SelectedFigureRequiredMask setSokoban(Long value) {
			nodeMask.put("sokoban", value);
			return this;
		}
		public SelectedFigureRequiredMask setSokobanEname(String value) {
			attributeMask.put("sokoban.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.18
	public SokobanOnFieldAccess getPattern_SokobanOnField() {
		return new SokobanOnFieldAccess();
	}
	
	public class SokobanOnFieldAccess extends NeoPatternAccess<SokobanOnFieldData, SokobanOnFieldMask> {
		public final String _sokoban = "sokoban";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(18);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SokobanOnFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SokobanOnFieldData(d));
		}
		
		@Override
		public SokobanOnFieldMask mask() {
			return new SokobanOnFieldMask();
		}
	}
	
	public class SokobanOnFieldData extends NeoData {
		public final SokobanNode _sokoban;
		public final Sokoban_field_0_fRel _sokoban_field_0_f;
		public final FNode _f;
		
		public SokobanOnFieldData(Record data) {
			var _sokoban = data.get("sokoban");
			this._sokoban = new SokobanNode(_sokoban);
			var _sokoban_field_0_f = data.get("sokoban_field_0_f");
			this._sokoban_field_0_f = new Sokoban_field_0_fRel(_sokoban_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class SokobanNode {
			public String _ename;
			
			public SokobanNode(Value _sokoban) {
				if(!_sokoban.get("ename").isNull())
					this._ename = _sokoban.get("ename").asString();
			}
		}
		
		public class Sokoban_field_0_fRel {
		
			public Sokoban_field_0_fRel(Value _sokoban_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SokobanOnFieldMask extends NeoMask {
		public SokobanOnFieldMask setSokoban(Long value) {
			nodeMask.put("sokoban", value);
			return this;
		}
		public SokobanOnFieldMask setSokobanEname(String value) {
			attributeMask.put("sokoban.ename", value);
			return this;
		}
		public SokobanOnFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SokobanOnFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SokobanOnFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.19
	public OneBlockAccess getPattern_OneBlock() {
		return new OneBlockAccess();
	}
	
	public class OneBlockAccess extends NeoPatternAccess<OneBlockData, OneBlockMask> {
		public final String _block = "block";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(19);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBlockData(d));
		}
		
		@Override
		public OneBlockMask mask() {
			return new OneBlockMask();
		}
	}
	
	public class OneBlockData extends NeoData {
		public final BlockNode _block;
		
		public OneBlockData(Record data) {
			var _block = data.get("block");
			this._block = new BlockNode(_block);
		}
		
		
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
	}
	
	public class OneBlockMask extends NeoMask {
		public OneBlockMask setBlock(Long value) {
			nodeMask.put("block", value);
			return this;
		}
		public OneBlockMask setBlockEname(String value) {
			attributeMask.put("block.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.20
	public OneNormalFieldAccess getPattern_OneNormalField() {
		return new OneNormalFieldAccess();
	}
	
	public class OneNormalFieldAccess extends NeoPatternAccess<OneNormalFieldData, OneNormalFieldMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(20);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneNormalFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneNormalFieldData(d));
		}
		
		@Override
		public OneNormalFieldMask mask() {
			return new OneNormalFieldMask();
		}
	}
	
	public class OneNormalFieldData extends NeoData {
		public final FNode _f;
		
		public OneNormalFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneNormalFieldMask extends NeoMask {
		public OneNormalFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneNormalFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneNormalFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.21
	public OneNormalFieldNegAccess getPattern_OneNormalFieldNeg() {
		return new OneNormalFieldNegAccess();
	}
	
	public class OneNormalFieldNegAccess extends NeoPatternAccess<OneNormalFieldNegData, OneNormalFieldNegMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(21);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneNormalFieldNegData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneNormalFieldNegData(d));
		}
		
		@Override
		public OneNormalFieldNegMask mask() {
			return new OneNormalFieldNegMask();
		}
	}
	
	public class OneNormalFieldNegData extends NeoData {
		public final FNode _f;
		
		public OneNormalFieldNegData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneNormalFieldNegMask extends NeoMask {
		public OneNormalFieldNegMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneNormalFieldNegMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneNormalFieldNegMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.22
	public OneNeighborFieldAccess getPattern_OneNeighborField() {
		return new OneNeighborFieldAccess();
	}
	
	public class OneNeighborFieldAccess extends NeoPatternAccess<OneNeighborFieldData, OneNeighborFieldMask> {
		public final String _f = "f";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(22);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneNeighborFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneNeighborFieldData(d));
		}
		
		@Override
		public OneNeighborFieldMask mask() {
			return new OneNeighborFieldMask();
		}
	}
	
	public class OneNeighborFieldData extends NeoData {
		public final FNode _f;
		public final F_right_0_f2Rel _f_right_0_f2;
		public final F2Node _f2;
		
		public OneNeighborFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_f2 = data.get("f_right_0_f2");
			this._f_right_0_f2 = new F_right_0_f2Rel(_f_right_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_f2Rel {
		
			public F_right_0_f2Rel(Value _f_right_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class OneNeighborFieldMask extends NeoMask {
		public OneNeighborFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneNeighborFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneNeighborFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public OneNeighborFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public OneNeighborFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public OneNeighborFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.23
	public OneExtraFieldAccess getRule_OneExtraField() {
		return new OneExtraFieldAccess();
	}
	
	public class OneExtraFieldAccess extends NeoRuleCoAccess<OneExtraFieldData, OneExtraFieldCoData, OneExtraFieldMask> {
		public final String _f = "f";
		public final String _oldF = "oldF";
		public final String _newF = "newF";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<OneExtraFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneExtraFieldData(d));
		}
			
		@Override
		public Stream<OneExtraFieldCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneExtraFieldCoData(d));
		}
		
		@Override
		public OneExtraFieldMask mask() {
			return new OneExtraFieldMask();
		}
	}
	
	public class OneExtraFieldData extends NeoData {
		public final FNode _f;
		public final F_right_0_oldFRel _f_right_0_oldF;
		public final OldFNode _oldF;
		
		public OneExtraFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_oldF = data.get("f_right_0_oldF");
			this._f_right_0_oldF = new F_right_0_oldFRel(_f_right_0_oldF);
			var _oldF = data.get("oldF");
			this._oldF = new OldFNode(_oldF);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_oldFRel {
		
			public F_right_0_oldFRel(Value _f_right_0_oldF) {
			}
		}
		public class OldFNode {
			public boolean _endPos;
			public String _ename;
			
			public OldFNode(Value _oldF) {
				if(!_oldF.get("endPos").isNull())
					this._endPos = _oldF.get("endPos").asBoolean();
				if(!_oldF.get("ename").isNull())
					this._ename = _oldF.get("ename").asString();
			}
		}
		
	}
	
	public class OneExtraFieldCoData extends NeoData {
		public final FNode _f;
		public final F_right_1_newFRel _f_right_1_newF;
		public final NewFNode _newF;
		
		public OneExtraFieldCoData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_1_newF = data.get("f_right_1_newF");
			this._f_right_1_newF = new F_right_1_newFRel(_f_right_1_newF);
			var _newF = data.get("newF");
			this._newF = new NewFNode(_newF);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_1_newFRel {
		
			public F_right_1_newFRel(Value _f_right_1_newF) {
			}
		}
		public class NewFNode {
			public boolean _endPos;
			public String _ename;
			
			public NewFNode(Value _newF) {
				if(!_newF.get("endPos").isNull())
					this._endPos = _newF.get("endPos").asBoolean();
				if(!_newF.get("ename").isNull())
					this._ename = _newF.get("ename").asString();
			}
		}
		
	}
	
	public class OneExtraFieldMask extends NeoMask {
		public OneExtraFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneExtraFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneExtraFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public OneExtraFieldMask setOldF(Long value) {
			nodeMask.put("oldF", value);
			return this;
		}
		public OneExtraFieldMask setOldFEndPos(boolean value) {
			attributeMask.put("oldF.endPos", value);
			return this;
		}
		public OneExtraFieldMask setOldFEname(String value) {
			attributeMask.put("oldF.ename", value);
			return this;
		}
		public OneExtraFieldMask setNewF(Long value) {
			nodeMask.put("newF", value);
			return this;
		}
		public OneExtraFieldMask setNewFEndPos(boolean value) {
			attributeMask.put("newF.endPos", value);
			return this;
		}
		public OneExtraFieldMask setNewFEname(String value) {
			attributeMask.put("newF.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.24
	public OneEndFieldAccess getPattern_OneEndField() {
		return new OneEndFieldAccess();
	}
	
	public class OneEndFieldAccess extends NeoPatternAccess<OneEndFieldData, OneEndFieldMask> {
		public final String _field = "field";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(24);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneEndFieldData(d));
		}
		
		@Override
		public OneEndFieldMask mask() {
			return new OneEndFieldMask();
		}
	}
	
	public class OneEndFieldData extends NeoData {
		public final FieldNode _field;
		
		public OneEndFieldData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
	}
	
	public class OneEndFieldMask extends NeoMask {
		public OneEndFieldMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public OneEndFieldMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public OneEndFieldMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.25
	public OneBoardWithFieldAccess getPattern_OneBoardWithField() {
		return new OneBoardWithFieldAccess();
	}
	
	public class OneBoardWithFieldAccess extends NeoPatternAccess<OneBoardWithFieldData, OneBoardWithFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(25);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneBoardWithFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBoardWithFieldData(d));
		}
		
		@Override
		public OneBoardWithFieldMask mask() {
			return new OneBoardWithFieldMask();
		}
	}
	
	public class OneBoardWithFieldData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public OneBoardWithFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneBoardWithFieldMask extends NeoMask {
		public OneBoardWithFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public OneBoardWithFieldMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public OneBoardWithFieldMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public OneBoardWithFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public OneBoardWithFieldMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public OneBoardWithFieldMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public OneBoardWithFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneBoardWithFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneBoardWithFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.26
	public OneBoardWithNewFieldAccess getRule_OneBoardWithNewField() {
		return new OneBoardWithNewFieldAccess();
	}
	
	public class OneBoardWithNewFieldAccess extends NeoRuleCoAccess<OneBoardWithNewFieldData, OneBoardWithNewFieldCoData, OneBoardWithNewFieldMask> {
		public final String _b = "b";
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		public final String _f3 = "f3";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<OneBoardWithNewFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBoardWithNewFieldData(d));
		}
			
		@Override
		public Stream<OneBoardWithNewFieldCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBoardWithNewFieldCoData(d));
		}
		
		@Override
		public OneBoardWithNewFieldMask mask() {
			return new OneBoardWithNewFieldMask();
		}
	}
	
	public class OneBoardWithNewFieldData extends NeoData {
		public final BNode _b;
		public final B_fields_0_f1Rel _b_fields_0_f1;
		public final B_fields_1_f2Rel _b_fields_1_f2;
		public final F1Node _f1;
		public final F2Node _f2;
		
		public OneBoardWithNewFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f1 = data.get("b_fields_0_f1");
			this._b_fields_0_f1 = new B_fields_0_f1Rel(_b_fields_0_f1);
			var _b_fields_1_f2 = data.get("b_fields_1_f2");
			this._b_fields_1_f2 = new B_fields_1_f2Rel(_b_fields_1_f2);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_f1Rel {
			public int _row;
			public int _col;
		
			public B_fields_0_f1Rel(Value _b_fields_0_f1) {
				if(!_b_fields_0_f1.get("row").isNull())
					this._row = _b_fields_0_f1.get("row").asInt();
				if(!_b_fields_0_f1.get("col").isNull())
					this._col = _b_fields_0_f1.get("col").asInt();
			}
		}
		public class B_fields_1_f2Rel {
			public int _row;
			public int _col;
		
			public B_fields_1_f2Rel(Value _b_fields_1_f2) {
				if(!_b_fields_1_f2.get("row").isNull())
					this._row = _b_fields_1_f2.get("row").asInt();
				if(!_b_fields_1_f2.get("col").isNull())
					this._col = _b_fields_1_f2.get("col").asInt();
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class OneBoardWithNewFieldCoData extends NeoData {
		public final BNode _b;
		public final B_fields_1_f2Rel _b_fields_1_f2;
		public final B_fields_2_f3Rel _b_fields_2_f3;
		public final F2Node _f2;
		public final F3Node _f3;
		
		public OneBoardWithNewFieldCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_1_f2 = data.get("b_fields_1_f2");
			this._b_fields_1_f2 = new B_fields_1_f2Rel(_b_fields_1_f2);
			var _b_fields_2_f3 = data.get("b_fields_2_f3");
			this._b_fields_2_f3 = new B_fields_2_f3Rel(_b_fields_2_f3);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
			var _f3 = data.get("f3");
			this._f3 = new F3Node(_f3);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_1_f2Rel {
			public int _row;
			public int _col;
		
			public B_fields_1_f2Rel(Value _b_fields_1_f2) {
				if(!_b_fields_1_f2.get("row").isNull())
					this._row = _b_fields_1_f2.get("row").asInt();
				if(!_b_fields_1_f2.get("col").isNull())
					this._col = _b_fields_1_f2.get("col").asInt();
			}
		}
		public class B_fields_2_f3Rel {
			public int _row;
			public int _col;
		
			public B_fields_2_f3Rel(Value _b_fields_2_f3) {
				if(!_b_fields_2_f3.get("row").isNull())
					this._row = _b_fields_2_f3.get("row").asInt();
				if(!_b_fields_2_f3.get("col").isNull())
					this._col = _b_fields_2_f3.get("col").asInt();
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
		public class F3Node {
			public boolean _endPos;
			public String _ename;
			
			public F3Node(Value _f3) {
				if(!_f3.get("endPos").isNull())
					this._endPos = _f3.get("endPos").asBoolean();
				if(!_f3.get("ename").isNull())
					this._ename = _f3.get("ename").asString();
			}
		}
		
	}
	
	public class OneBoardWithNewFieldMask extends NeoMask {
		public OneBoardWithNewFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public OneBoardWithNewFieldMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public OneBoardWithNewFieldMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public OneBoardWithNewFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public OneBoardWithNewFieldMask setB_fields_0_f1Row(int value) {
			attributeMask.put("b_fields_0_f1.row", value);
			return this;
		}
		public OneBoardWithNewFieldMask setB_fields_0_f1Col(int value) {
			attributeMask.put("b_fields_0_f1.col", value);
			return this;
		}
		public OneBoardWithNewFieldMask setB_fields_1_f2Row(int value) {
			attributeMask.put("b_fields_1_f2.row", value);
			return this;
		}
		public OneBoardWithNewFieldMask setB_fields_1_f2Col(int value) {
			attributeMask.put("b_fields_1_f2.col", value);
			return this;
		}
		public OneBoardWithNewFieldMask setB_fields_2_f3Row(int value) {
			attributeMask.put("b_fields_2_f3.row", value);
			return this;
		}
		public OneBoardWithNewFieldMask setB_fields_2_f3Col(int value) {
			attributeMask.put("b_fields_2_f3.col", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF3(Long value) {
			nodeMask.put("f3", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF3EndPos(boolean value) {
			attributeMask.put("f3.endPos", value);
			return this;
		}
		public OneBoardWithNewFieldMask setF3Ename(String value) {
			attributeMask.put("f3.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.27
	public AnOccupiedFieldAccess getPattern_AnOccupiedField() {
		return new AnOccupiedFieldAccess();
	}
	
	public class AnOccupiedFieldAccess extends NeoPatternAccess<AnOccupiedFieldData, AnOccupiedFieldMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(27);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AnOccupiedFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AnOccupiedFieldData(d));
		}
		
		@Override
		public AnOccupiedFieldMask mask() {
			return new AnOccupiedFieldMask();
		}
	}
	
	public class AnOccupiedFieldData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public AnOccupiedFieldData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class AnOccupiedFieldMask extends NeoMask {
		public AnOccupiedFieldMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AnOccupiedFieldMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AnOccupiedFieldMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AnOccupiedFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public AnOccupiedFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.28
	public AnOccupiedSokobanFieldAccess getPattern_AnOccupiedSokobanField() {
		return new AnOccupiedSokobanFieldAccess();
	}
	
	public class AnOccupiedSokobanFieldAccess extends NeoPatternAccess<AnOccupiedSokobanFieldData, AnOccupiedSokobanFieldMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(28);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AnOccupiedSokobanFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AnOccupiedSokobanFieldData(d));
		}
		
		@Override
		public AnOccupiedSokobanFieldMask mask() {
			return new AnOccupiedSokobanFieldMask();
		}
	}
	
	public class AnOccupiedSokobanFieldData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public AnOccupiedSokobanFieldData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class AnOccupiedSokobanFieldMask extends NeoMask {
		public AnOccupiedSokobanFieldMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AnOccupiedSokobanFieldMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AnOccupiedSokobanFieldMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AnOccupiedSokobanFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public AnOccupiedSokobanFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.29
	public AnOccupiedBlockFieldAccess getPattern_AnOccupiedBlockField() {
		return new AnOccupiedBlockFieldAccess();
	}
	
	public class AnOccupiedBlockFieldAccess extends NeoPatternAccess<AnOccupiedBlockFieldData, AnOccupiedBlockFieldMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(29);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AnOccupiedBlockFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AnOccupiedBlockFieldData(d));
		}
		
		@Override
		public AnOccupiedBlockFieldMask mask() {
			return new AnOccupiedBlockFieldMask();
		}
	}
	
	public class AnOccupiedBlockFieldData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public AnOccupiedBlockFieldData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class AnOccupiedBlockFieldMask extends NeoMask {
		public AnOccupiedBlockFieldMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AnOccupiedBlockFieldMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AnOccupiedBlockFieldMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AnOccupiedBlockFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public AnOccupiedBlockFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.30
	public AnOccupiedBoulderFieldAccess getPattern_AnOccupiedBoulderField() {
		return new AnOccupiedBoulderFieldAccess();
	}
	
	public class AnOccupiedBoulderFieldAccess extends NeoPatternAccess<AnOccupiedBoulderFieldData, AnOccupiedBoulderFieldMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(30);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AnOccupiedBoulderFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AnOccupiedBoulderFieldData(d));
		}
		
		@Override
		public AnOccupiedBoulderFieldMask mask() {
			return new AnOccupiedBoulderFieldMask();
		}
	}
	
	public class AnOccupiedBoulderFieldData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public AnOccupiedBoulderFieldData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class AnOccupiedBoulderFieldMask extends NeoMask {
		public AnOccupiedBoulderFieldMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AnOccupiedBoulderFieldMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AnOccupiedBoulderFieldMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AnOccupiedBoulderFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public AnOccupiedBoulderFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.31
	public ByBlockAndBoulderOccupiedFieldsAccess getPattern_ByBlockAndBoulderOccupiedFields() {
		return new ByBlockAndBoulderOccupiedFieldsAccess();
	}
	
	public class ByBlockAndBoulderOccupiedFieldsAccess extends NeoPatternAccess<ByBlockAndBoulderOccupiedFieldsData, ByBlockAndBoulderOccupiedFieldsMask> {
		public final String _field = "field";
		public final String _otherField = "otherField";
		public final String _fig = "fig";
		public final String _otherFig = "otherFig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(31);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ByBlockAndBoulderOccupiedFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ByBlockAndBoulderOccupiedFieldsData(d));
		}
		
		@Override
		public ByBlockAndBoulderOccupiedFieldsMask mask() {
			return new ByBlockAndBoulderOccupiedFieldsMask();
		}
	}
	
	public class ByBlockAndBoulderOccupiedFieldsData extends NeoData {
		public final FieldNode _field;
		public final OtherFieldNode _otherField;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		public final OtherFigNode _otherFig;
		public final OtherFig_field_0_otherFieldRel _otherFig_field_0_otherField;
		
		public ByBlockAndBoulderOccupiedFieldsData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _otherField = data.get("otherField");
			this._otherField = new OtherFieldNode(_otherField);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
			var _otherFig = data.get("otherFig");
			this._otherFig = new OtherFigNode(_otherFig);
			var _otherFig_field_0_otherField = data.get("otherFig_field_0_otherField");
			this._otherFig_field_0_otherField = new OtherFig_field_0_otherFieldRel(_otherFig_field_0_otherField);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class OtherFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public OtherFieldNode(Value _otherField) {
				if(!_otherField.get("endPos").isNull())
					this._endPos = _otherField.get("endPos").asBoolean();
				if(!_otherField.get("ename").isNull())
					this._ename = _otherField.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
		public class OtherFigNode {
			public String _ename;
			
			public OtherFigNode(Value _otherFig) {
				if(!_otherFig.get("ename").isNull())
					this._ename = _otherFig.get("ename").asString();
			}
		}
		
		public class OtherFig_field_0_otherFieldRel {
		
			public OtherFig_field_0_otherFieldRel(Value _otherFig_field_0_otherField) {
			}
		}
	}
	
	public class ByBlockAndBoulderOccupiedFieldsMask extends NeoMask {
		public ByBlockAndBoulderOccupiedFieldsMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setOtherField(Long value) {
			nodeMask.put("otherField", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setOtherFieldEndPos(boolean value) {
			attributeMask.put("otherField.endPos", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setOtherFieldEname(String value) {
			attributeMask.put("otherField.ename", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setOtherFig(Long value) {
			nodeMask.put("otherFig", value);
			return this;
		}
		public ByBlockAndBoulderOccupiedFieldsMask setOtherFigEname(String value) {
			attributeMask.put("otherFig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.32
	public AllFieldsInARowAccess getPattern_AllFieldsInARow() {
		return new AllFieldsInARowAccess();
	}
	
	public class AllFieldsInARowAccess extends NeoPatternAccess<AllFieldsInARowData, AllFieldsInARowMask> {
		public final String _b = "b";
		public final String _field = "field";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(32);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllFieldsInARowData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllFieldsInARowData(d));
		}
		
		@Override
		public AllFieldsInARowMask mask() {
			return new AllFieldsInARowMask();
		}
	}
	
	public class AllFieldsInARowData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fieldRel _b_fields_0_field;
		public final FieldNode _field;
		
		public AllFieldsInARowData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_field = data.get("b_fields_0_field");
			this._b_fields_0_field = new B_fields_0_fieldRel(_b_fields_0_field);
			var _field = data.get("field");
			this._field = new FieldNode(_field);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fieldRel(Value _b_fields_0_field) {
				if(!_b_fields_0_field.get("row").isNull())
					this._row = _b_fields_0_field.get("row").asInt();
				if(!_b_fields_0_field.get("col").isNull())
					this._col = _b_fields_0_field.get("col").asInt();
			}
		}
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
	}
	
	public class AllFieldsInARowMask extends NeoMask {
		public AllFieldsInARowMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AllFieldsInARowMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AllFieldsInARowMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AllFieldsInARowMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AllFieldsInARowMask setB_fields_0_fieldRow(int value) {
			attributeMask.put("b_fields_0_field.row", value);
			return this;
		}
		public AllFieldsInARowMask setB_fields_0_fieldCol(int value) {
			attributeMask.put("b_fields_0_field.col", value);
			return this;
		}
		public AllFieldsInARowMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AllFieldsInARowMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AllFieldsInARowMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.33
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.34
	public AllNotBorderFieldsInARowAccess getPattern_AllNotBorderFieldsInARow() {
		return new AllNotBorderFieldsInARowAccess();
	}
	
	public class AllNotBorderFieldsInARowAccess extends NeoPatternAccess<AllNotBorderFieldsInARowData, AllNotBorderFieldsInARowMask> {
		public final String _b = "b";
		public final String _field = "field";
		public final String _fieldL = "fieldL";
		public final String _fieldR = "fieldR";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(34);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllNotBorderFieldsInARowData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllNotBorderFieldsInARowData(d));
		}
		
		@Override
		public AllNotBorderFieldsInARowMask mask() {
			return new AllNotBorderFieldsInARowMask();
		}
	}
	
	public class AllNotBorderFieldsInARowData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fieldRel _b_fields_0_field;
		public final B_fields_1_fieldLRel _b_fields_1_fieldL;
		public final B_fields_2_fieldRRel _b_fields_2_fieldR;
		public final FieldNode _field;
		public final Field_right_0_fieldRRel _field_right_0_fieldR;
		public final FieldLNode _fieldL;
		public final FieldL_right_0_fieldRel _fieldL_right_0_field;
		public final FieldRNode _fieldR;
		
		public AllNotBorderFieldsInARowData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_field = data.get("b_fields_0_field");
			this._b_fields_0_field = new B_fields_0_fieldRel(_b_fields_0_field);
			var _b_fields_1_fieldL = data.get("b_fields_1_fieldL");
			this._b_fields_1_fieldL = new B_fields_1_fieldLRel(_b_fields_1_fieldL);
			var _b_fields_2_fieldR = data.get("b_fields_2_fieldR");
			this._b_fields_2_fieldR = new B_fields_2_fieldRRel(_b_fields_2_fieldR);
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _field_right_0_fieldR = data.get("field_right_0_fieldR");
			this._field_right_0_fieldR = new Field_right_0_fieldRRel(_field_right_0_fieldR);
			var _fieldL = data.get("fieldL");
			this._fieldL = new FieldLNode(_fieldL);
			var _fieldL_right_0_field = data.get("fieldL_right_0_field");
			this._fieldL_right_0_field = new FieldL_right_0_fieldRel(_fieldL_right_0_field);
			var _fieldR = data.get("fieldR");
			this._fieldR = new FieldRNode(_fieldR);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fieldRel(Value _b_fields_0_field) {
				if(!_b_fields_0_field.get("row").isNull())
					this._row = _b_fields_0_field.get("row").asInt();
				if(!_b_fields_0_field.get("col").isNull())
					this._col = _b_fields_0_field.get("col").asInt();
			}
		}
		public class B_fields_1_fieldLRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fieldLRel(Value _b_fields_1_fieldL) {
				if(!_b_fields_1_fieldL.get("row").isNull())
					this._row = _b_fields_1_fieldL.get("row").asInt();
				if(!_b_fields_1_fieldL.get("col").isNull())
					this._col = _b_fields_1_fieldL.get("col").asInt();
			}
		}
		public class B_fields_2_fieldRRel {
			public int _row;
			public int _col;
		
			public B_fields_2_fieldRRel(Value _b_fields_2_fieldR) {
				if(!_b_fields_2_fieldR.get("row").isNull())
					this._row = _b_fields_2_fieldR.get("row").asInt();
				if(!_b_fields_2_fieldR.get("col").isNull())
					this._col = _b_fields_2_fieldR.get("col").asInt();
			}
		}
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class Field_right_0_fieldRRel {
		
			public Field_right_0_fieldRRel(Value _field_right_0_fieldR) {
			}
		}
		public class FieldLNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldLNode(Value _fieldL) {
				if(!_fieldL.get("endPos").isNull())
					this._endPos = _fieldL.get("endPos").asBoolean();
				if(!_fieldL.get("ename").isNull())
					this._ename = _fieldL.get("ename").asString();
			}
		}
		
		public class FieldL_right_0_fieldRel {
		
			public FieldL_right_0_fieldRel(Value _fieldL_right_0_field) {
			}
		}
		public class FieldRNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldRNode(Value _fieldR) {
				if(!_fieldR.get("endPos").isNull())
					this._endPos = _fieldR.get("endPos").asBoolean();
				if(!_fieldR.get("ename").isNull())
					this._ename = _fieldR.get("ename").asString();
			}
		}
		
	}
	
	public class AllNotBorderFieldsInARowMask extends NeoMask {
		public AllNotBorderFieldsInARowMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setB_fields_0_fieldRow(int value) {
			attributeMask.put("b_fields_0_field.row", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setB_fields_0_fieldCol(int value) {
			attributeMask.put("b_fields_0_field.col", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setB_fields_1_fieldLRow(int value) {
			attributeMask.put("b_fields_1_fieldL.row", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setB_fields_1_fieldLCol(int value) {
			attributeMask.put("b_fields_1_fieldL.col", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setB_fields_2_fieldRRow(int value) {
			attributeMask.put("b_fields_2_fieldR.row", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setB_fields_2_fieldRCol(int value) {
			attributeMask.put("b_fields_2_fieldR.col", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldL(Long value) {
			nodeMask.put("fieldL", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldLEndPos(boolean value) {
			attributeMask.put("fieldL.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldLEname(String value) {
			attributeMask.put("fieldL.ename", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldR(Long value) {
			nodeMask.put("fieldR", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldREndPos(boolean value) {
			attributeMask.put("fieldR.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInARowMask setFieldREname(String value) {
			attributeMask.put("fieldR.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.35
	public AllNotBorderFieldsInARowAndColAccess getPattern_AllNotBorderFieldsInARowAndCol() {
		return new AllNotBorderFieldsInARowAndColAccess();
	}
	
	public class AllNotBorderFieldsInARowAndColAccess extends NeoPatternAccess<AllNotBorderFieldsInARowAndColData, AllNotBorderFieldsInARowAndColMask> {
		public final String _b = "b";
		public final String _field = "field";
		public final String _fieldL = "fieldL";
		public final String _fieldR = "fieldR";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(35);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllNotBorderFieldsInARowAndColData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllNotBorderFieldsInARowAndColData(d));
		}
		
		@Override
		public AllNotBorderFieldsInARowAndColMask mask() {
			return new AllNotBorderFieldsInARowAndColMask();
		}
	}
	
	public class AllNotBorderFieldsInARowAndColData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fieldRel _b_fields_0_field;
		public final B_fields_1_fieldLRel _b_fields_1_fieldL;
		public final B_fields_2_fieldRRel _b_fields_2_fieldR;
		public final FieldNode _field;
		public final Field_right_0_fieldRRel _field_right_0_fieldR;
		public final FieldLNode _fieldL;
		public final FieldL_right_0_fieldRel _fieldL_right_0_field;
		public final FieldRNode _fieldR;
		
		public AllNotBorderFieldsInARowAndColData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_field = data.get("b_fields_0_field");
			this._b_fields_0_field = new B_fields_0_fieldRel(_b_fields_0_field);
			var _b_fields_1_fieldL = data.get("b_fields_1_fieldL");
			this._b_fields_1_fieldL = new B_fields_1_fieldLRel(_b_fields_1_fieldL);
			var _b_fields_2_fieldR = data.get("b_fields_2_fieldR");
			this._b_fields_2_fieldR = new B_fields_2_fieldRRel(_b_fields_2_fieldR);
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _field_right_0_fieldR = data.get("field_right_0_fieldR");
			this._field_right_0_fieldR = new Field_right_0_fieldRRel(_field_right_0_fieldR);
			var _fieldL = data.get("fieldL");
			this._fieldL = new FieldLNode(_fieldL);
			var _fieldL_right_0_field = data.get("fieldL_right_0_field");
			this._fieldL_right_0_field = new FieldL_right_0_fieldRel(_fieldL_right_0_field);
			var _fieldR = data.get("fieldR");
			this._fieldR = new FieldRNode(_fieldR);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fieldRel(Value _b_fields_0_field) {
				if(!_b_fields_0_field.get("row").isNull())
					this._row = _b_fields_0_field.get("row").asInt();
				if(!_b_fields_0_field.get("col").isNull())
					this._col = _b_fields_0_field.get("col").asInt();
			}
		}
		public class B_fields_1_fieldLRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fieldLRel(Value _b_fields_1_fieldL) {
				if(!_b_fields_1_fieldL.get("row").isNull())
					this._row = _b_fields_1_fieldL.get("row").asInt();
				if(!_b_fields_1_fieldL.get("col").isNull())
					this._col = _b_fields_1_fieldL.get("col").asInt();
			}
		}
		public class B_fields_2_fieldRRel {
			public int _row;
			public int _col;
		
			public B_fields_2_fieldRRel(Value _b_fields_2_fieldR) {
				if(!_b_fields_2_fieldR.get("row").isNull())
					this._row = _b_fields_2_fieldR.get("row").asInt();
				if(!_b_fields_2_fieldR.get("col").isNull())
					this._col = _b_fields_2_fieldR.get("col").asInt();
			}
		}
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class Field_right_0_fieldRRel {
		
			public Field_right_0_fieldRRel(Value _field_right_0_fieldR) {
			}
		}
		public class FieldLNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldLNode(Value _fieldL) {
				if(!_fieldL.get("endPos").isNull())
					this._endPos = _fieldL.get("endPos").asBoolean();
				if(!_fieldL.get("ename").isNull())
					this._ename = _fieldL.get("ename").asString();
			}
		}
		
		public class FieldL_right_0_fieldRel {
		
			public FieldL_right_0_fieldRel(Value _fieldL_right_0_field) {
			}
		}
		public class FieldRNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldRNode(Value _fieldR) {
				if(!_fieldR.get("endPos").isNull())
					this._endPos = _fieldR.get("endPos").asBoolean();
				if(!_fieldR.get("ename").isNull())
					this._ename = _fieldR.get("ename").asString();
			}
		}
		
	}
	
	public class AllNotBorderFieldsInARowAndColMask extends NeoMask {
		public AllNotBorderFieldsInARowAndColMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setB_fields_0_fieldRow(int value) {
			attributeMask.put("b_fields_0_field.row", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setB_fields_0_fieldCol(int value) {
			attributeMask.put("b_fields_0_field.col", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setB_fields_1_fieldLRow(int value) {
			attributeMask.put("b_fields_1_fieldL.row", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setB_fields_1_fieldLCol(int value) {
			attributeMask.put("b_fields_1_fieldL.col", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setB_fields_2_fieldRRow(int value) {
			attributeMask.put("b_fields_2_fieldR.row", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setB_fields_2_fieldRCol(int value) {
			attributeMask.put("b_fields_2_fieldR.col", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldL(Long value) {
			nodeMask.put("fieldL", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldLEndPos(boolean value) {
			attributeMask.put("fieldL.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldLEname(String value) {
			attributeMask.put("fieldL.ename", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldR(Long value) {
			nodeMask.put("fieldR", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldREndPos(boolean value) {
			attributeMask.put("fieldR.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInARowAndColMask setFieldREname(String value) {
			attributeMask.put("fieldR.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.36
	public AllNotBorderFieldsInDiffRowsAccess getPattern_AllNotBorderFieldsInDiffRows() {
		return new AllNotBorderFieldsInDiffRowsAccess();
	}
	
	public class AllNotBorderFieldsInDiffRowsAccess extends NeoPatternAccess<AllNotBorderFieldsInDiffRowsData, AllNotBorderFieldsInDiffRowsMask> {
		public final String _b = "b";
		public final String _field = "field";
		public final String _fieldL = "fieldL";
		public final String _fieldR = "fieldR";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(36);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AllNotBorderFieldsInDiffRowsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AllNotBorderFieldsInDiffRowsData(d));
		}
		
		@Override
		public AllNotBorderFieldsInDiffRowsMask mask() {
			return new AllNotBorderFieldsInDiffRowsMask();
		}
	}
	
	public class AllNotBorderFieldsInDiffRowsData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fieldRel _b_fields_0_field;
		public final B_fields_1_fieldLRel _b_fields_1_fieldL;
		public final B_fields_2_fieldRRel _b_fields_2_fieldR;
		public final FieldNode _field;
		public final Field_right_0_fieldRRel _field_right_0_fieldR;
		public final FieldLNode _fieldL;
		public final FieldL_right_0_fieldRel _fieldL_right_0_field;
		public final FieldRNode _fieldR;
		
		public AllNotBorderFieldsInDiffRowsData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_field = data.get("b_fields_0_field");
			this._b_fields_0_field = new B_fields_0_fieldRel(_b_fields_0_field);
			var _b_fields_1_fieldL = data.get("b_fields_1_fieldL");
			this._b_fields_1_fieldL = new B_fields_1_fieldLRel(_b_fields_1_fieldL);
			var _b_fields_2_fieldR = data.get("b_fields_2_fieldR");
			this._b_fields_2_fieldR = new B_fields_2_fieldRRel(_b_fields_2_fieldR);
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _field_right_0_fieldR = data.get("field_right_0_fieldR");
			this._field_right_0_fieldR = new Field_right_0_fieldRRel(_field_right_0_fieldR);
			var _fieldL = data.get("fieldL");
			this._fieldL = new FieldLNode(_fieldL);
			var _fieldL_right_0_field = data.get("fieldL_right_0_field");
			this._fieldL_right_0_field = new FieldL_right_0_fieldRel(_fieldL_right_0_field);
			var _fieldR = data.get("fieldR");
			this._fieldR = new FieldRNode(_fieldR);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fieldRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fieldRel(Value _b_fields_0_field) {
				if(!_b_fields_0_field.get("row").isNull())
					this._row = _b_fields_0_field.get("row").asInt();
				if(!_b_fields_0_field.get("col").isNull())
					this._col = _b_fields_0_field.get("col").asInt();
			}
		}
		public class B_fields_1_fieldLRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fieldLRel(Value _b_fields_1_fieldL) {
				if(!_b_fields_1_fieldL.get("row").isNull())
					this._row = _b_fields_1_fieldL.get("row").asInt();
				if(!_b_fields_1_fieldL.get("col").isNull())
					this._col = _b_fields_1_fieldL.get("col").asInt();
			}
		}
		public class B_fields_2_fieldRRel {
			public int _row;
			public int _col;
		
			public B_fields_2_fieldRRel(Value _b_fields_2_fieldR) {
				if(!_b_fields_2_fieldR.get("row").isNull())
					this._row = _b_fields_2_fieldR.get("row").asInt();
				if(!_b_fields_2_fieldR.get("col").isNull())
					this._col = _b_fields_2_fieldR.get("col").asInt();
			}
		}
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class Field_right_0_fieldRRel {
		
			public Field_right_0_fieldRRel(Value _field_right_0_fieldR) {
			}
		}
		public class FieldLNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldLNode(Value _fieldL) {
				if(!_fieldL.get("endPos").isNull())
					this._endPos = _fieldL.get("endPos").asBoolean();
				if(!_fieldL.get("ename").isNull())
					this._ename = _fieldL.get("ename").asString();
			}
		}
		
		public class FieldL_right_0_fieldRel {
		
			public FieldL_right_0_fieldRel(Value _fieldL_right_0_field) {
			}
		}
		public class FieldRNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldRNode(Value _fieldR) {
				if(!_fieldR.get("endPos").isNull())
					this._endPos = _fieldR.get("endPos").asBoolean();
				if(!_fieldR.get("ename").isNull())
					this._ename = _fieldR.get("ename").asString();
			}
		}
		
	}
	
	public class AllNotBorderFieldsInDiffRowsMask extends NeoMask {
		public AllNotBorderFieldsInDiffRowsMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setB_fields_0_fieldRow(int value) {
			attributeMask.put("b_fields_0_field.row", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setB_fields_0_fieldCol(int value) {
			attributeMask.put("b_fields_0_field.col", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setB_fields_1_fieldLRow(int value) {
			attributeMask.put("b_fields_1_fieldL.row", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setB_fields_1_fieldLCol(int value) {
			attributeMask.put("b_fields_1_fieldL.col", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setB_fields_2_fieldRRow(int value) {
			attributeMask.put("b_fields_2_fieldR.row", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setB_fields_2_fieldRCol(int value) {
			attributeMask.put("b_fields_2_fieldR.col", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldL(Long value) {
			nodeMask.put("fieldL", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldLEndPos(boolean value) {
			attributeMask.put("fieldL.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldLEname(String value) {
			attributeMask.put("fieldL.ename", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldR(Long value) {
			nodeMask.put("fieldR", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldREndPos(boolean value) {
			attributeMask.put("fieldR.endPos", value);
			return this;
		}
		public AllNotBorderFieldsInDiffRowsMask setFieldREname(String value) {
			attributeMask.put("fieldR.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.37
	public All3x3FieldsAccess getPattern_All3x3Fields() {
		return new All3x3FieldsAccess();
	}
	
	public class All3x3FieldsAccess extends NeoPatternAccess<All3x3FieldsData, All3x3FieldsMask> {
		public final String _b = "b";
		public final String _field11 = "field11";
		public final String _field12 = "field12";
		public final String _field13 = "field13";
		public final String _field21 = "field21";
		public final String _field22 = "field22";
		public final String _field23 = "field23";
		public final String _field31 = "field31";
		public final String _field32 = "field32";
		public final String _field33 = "field33";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(37);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<All3x3FieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new All3x3FieldsData(d));
		}
		
		@Override
		public All3x3FieldsMask mask() {
			return new All3x3FieldsMask();
		}
	}
	
	public class All3x3FieldsData extends NeoData {
		public final BNode _b;
		public final B_fields_0_field11Rel _b_fields_0_field11;
		public final B_fields_1_field12Rel _b_fields_1_field12;
		public final B_fields_2_field13Rel _b_fields_2_field13;
		public final B_fields_3_field21Rel _b_fields_3_field21;
		public final B_fields_4_field22Rel _b_fields_4_field22;
		public final B_fields_5_field23Rel _b_fields_5_field23;
		public final B_fields_6_field31Rel _b_fields_6_field31;
		public final B_fields_7_field32Rel _b_fields_7_field32;
		public final B_fields_8_field33Rel _b_fields_8_field33;
		public final Field11Node _field11;
		public final Field11_right_0_field12Rel _field11_right_0_field12;
		public final Field11_bottom_1_field21Rel _field11_bottom_1_field21;
		public final Field12Node _field12;
		public final Field12_right_0_field13Rel _field12_right_0_field13;
		public final Field12_bottom_1_field22Rel _field12_bottom_1_field22;
		public final Field13Node _field13;
		public final Field13_bottom_0_field23Rel _field13_bottom_0_field23;
		public final Field21Node _field21;
		public final Field21_right_0_field22Rel _field21_right_0_field22;
		public final Field21_bottom_1_field31Rel _field21_bottom_1_field31;
		public final Field22Node _field22;
		public final Field22_right_0_field23Rel _field22_right_0_field23;
		public final Field22_bottom_1_field32Rel _field22_bottom_1_field32;
		public final Field23Node _field23;
		public final Field23_bottom_0_field33Rel _field23_bottom_0_field33;
		public final Field31Node _field31;
		public final Field31_right_0_field32Rel _field31_right_0_field32;
		public final Field32Node _field32;
		public final Field32_right_0_field33Rel _field32_right_0_field33;
		public final Field33Node _field33;
		
		public All3x3FieldsData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_field11 = data.get("b_fields_0_field11");
			this._b_fields_0_field11 = new B_fields_0_field11Rel(_b_fields_0_field11);
			var _b_fields_1_field12 = data.get("b_fields_1_field12");
			this._b_fields_1_field12 = new B_fields_1_field12Rel(_b_fields_1_field12);
			var _b_fields_2_field13 = data.get("b_fields_2_field13");
			this._b_fields_2_field13 = new B_fields_2_field13Rel(_b_fields_2_field13);
			var _b_fields_3_field21 = data.get("b_fields_3_field21");
			this._b_fields_3_field21 = new B_fields_3_field21Rel(_b_fields_3_field21);
			var _b_fields_4_field22 = data.get("b_fields_4_field22");
			this._b_fields_4_field22 = new B_fields_4_field22Rel(_b_fields_4_field22);
			var _b_fields_5_field23 = data.get("b_fields_5_field23");
			this._b_fields_5_field23 = new B_fields_5_field23Rel(_b_fields_5_field23);
			var _b_fields_6_field31 = data.get("b_fields_6_field31");
			this._b_fields_6_field31 = new B_fields_6_field31Rel(_b_fields_6_field31);
			var _b_fields_7_field32 = data.get("b_fields_7_field32");
			this._b_fields_7_field32 = new B_fields_7_field32Rel(_b_fields_7_field32);
			var _b_fields_8_field33 = data.get("b_fields_8_field33");
			this._b_fields_8_field33 = new B_fields_8_field33Rel(_b_fields_8_field33);
			var _field11 = data.get("field11");
			this._field11 = new Field11Node(_field11);
			var _field11_right_0_field12 = data.get("field11_right_0_field12");
			this._field11_right_0_field12 = new Field11_right_0_field12Rel(_field11_right_0_field12);
			var _field11_bottom_1_field21 = data.get("field11_bottom_1_field21");
			this._field11_bottom_1_field21 = new Field11_bottom_1_field21Rel(_field11_bottom_1_field21);
			var _field12 = data.get("field12");
			this._field12 = new Field12Node(_field12);
			var _field12_right_0_field13 = data.get("field12_right_0_field13");
			this._field12_right_0_field13 = new Field12_right_0_field13Rel(_field12_right_0_field13);
			var _field12_bottom_1_field22 = data.get("field12_bottom_1_field22");
			this._field12_bottom_1_field22 = new Field12_bottom_1_field22Rel(_field12_bottom_1_field22);
			var _field13 = data.get("field13");
			this._field13 = new Field13Node(_field13);
			var _field13_bottom_0_field23 = data.get("field13_bottom_0_field23");
			this._field13_bottom_0_field23 = new Field13_bottom_0_field23Rel(_field13_bottom_0_field23);
			var _field21 = data.get("field21");
			this._field21 = new Field21Node(_field21);
			var _field21_right_0_field22 = data.get("field21_right_0_field22");
			this._field21_right_0_field22 = new Field21_right_0_field22Rel(_field21_right_0_field22);
			var _field21_bottom_1_field31 = data.get("field21_bottom_1_field31");
			this._field21_bottom_1_field31 = new Field21_bottom_1_field31Rel(_field21_bottom_1_field31);
			var _field22 = data.get("field22");
			this._field22 = new Field22Node(_field22);
			var _field22_right_0_field23 = data.get("field22_right_0_field23");
			this._field22_right_0_field23 = new Field22_right_0_field23Rel(_field22_right_0_field23);
			var _field22_bottom_1_field32 = data.get("field22_bottom_1_field32");
			this._field22_bottom_1_field32 = new Field22_bottom_1_field32Rel(_field22_bottom_1_field32);
			var _field23 = data.get("field23");
			this._field23 = new Field23Node(_field23);
			var _field23_bottom_0_field33 = data.get("field23_bottom_0_field33");
			this._field23_bottom_0_field33 = new Field23_bottom_0_field33Rel(_field23_bottom_0_field33);
			var _field31 = data.get("field31");
			this._field31 = new Field31Node(_field31);
			var _field31_right_0_field32 = data.get("field31_right_0_field32");
			this._field31_right_0_field32 = new Field31_right_0_field32Rel(_field31_right_0_field32);
			var _field32 = data.get("field32");
			this._field32 = new Field32Node(_field32);
			var _field32_right_0_field33 = data.get("field32_right_0_field33");
			this._field32_right_0_field33 = new Field32_right_0_field33Rel(_field32_right_0_field33);
			var _field33 = data.get("field33");
			this._field33 = new Field33Node(_field33);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_field11Rel {
			public int _row;
			public int _col;
		
			public B_fields_0_field11Rel(Value _b_fields_0_field11) {
				if(!_b_fields_0_field11.get("row").isNull())
					this._row = _b_fields_0_field11.get("row").asInt();
				if(!_b_fields_0_field11.get("col").isNull())
					this._col = _b_fields_0_field11.get("col").asInt();
			}
		}
		public class B_fields_1_field12Rel {
			public int _row;
			public int _col;
		
			public B_fields_1_field12Rel(Value _b_fields_1_field12) {
				if(!_b_fields_1_field12.get("row").isNull())
					this._row = _b_fields_1_field12.get("row").asInt();
				if(!_b_fields_1_field12.get("col").isNull())
					this._col = _b_fields_1_field12.get("col").asInt();
			}
		}
		public class B_fields_2_field13Rel {
			public int _row;
			public int _col;
		
			public B_fields_2_field13Rel(Value _b_fields_2_field13) {
				if(!_b_fields_2_field13.get("row").isNull())
					this._row = _b_fields_2_field13.get("row").asInt();
				if(!_b_fields_2_field13.get("col").isNull())
					this._col = _b_fields_2_field13.get("col").asInt();
			}
		}
		public class B_fields_3_field21Rel {
			public int _row;
			public int _col;
		
			public B_fields_3_field21Rel(Value _b_fields_3_field21) {
				if(!_b_fields_3_field21.get("row").isNull())
					this._row = _b_fields_3_field21.get("row").asInt();
				if(!_b_fields_3_field21.get("col").isNull())
					this._col = _b_fields_3_field21.get("col").asInt();
			}
		}
		public class B_fields_4_field22Rel {
			public int _row;
			public int _col;
		
			public B_fields_4_field22Rel(Value _b_fields_4_field22) {
				if(!_b_fields_4_field22.get("row").isNull())
					this._row = _b_fields_4_field22.get("row").asInt();
				if(!_b_fields_4_field22.get("col").isNull())
					this._col = _b_fields_4_field22.get("col").asInt();
			}
		}
		public class B_fields_5_field23Rel {
			public int _row;
			public int _col;
		
			public B_fields_5_field23Rel(Value _b_fields_5_field23) {
				if(!_b_fields_5_field23.get("row").isNull())
					this._row = _b_fields_5_field23.get("row").asInt();
				if(!_b_fields_5_field23.get("col").isNull())
					this._col = _b_fields_5_field23.get("col").asInt();
			}
		}
		public class B_fields_6_field31Rel {
			public int _row;
			public int _col;
		
			public B_fields_6_field31Rel(Value _b_fields_6_field31) {
				if(!_b_fields_6_field31.get("row").isNull())
					this._row = _b_fields_6_field31.get("row").asInt();
				if(!_b_fields_6_field31.get("col").isNull())
					this._col = _b_fields_6_field31.get("col").asInt();
			}
		}
		public class B_fields_7_field32Rel {
			public int _row;
			public int _col;
		
			public B_fields_7_field32Rel(Value _b_fields_7_field32) {
				if(!_b_fields_7_field32.get("row").isNull())
					this._row = _b_fields_7_field32.get("row").asInt();
				if(!_b_fields_7_field32.get("col").isNull())
					this._col = _b_fields_7_field32.get("col").asInt();
			}
		}
		public class B_fields_8_field33Rel {
			public int _row;
			public int _col;
		
			public B_fields_8_field33Rel(Value _b_fields_8_field33) {
				if(!_b_fields_8_field33.get("row").isNull())
					this._row = _b_fields_8_field33.get("row").asInt();
				if(!_b_fields_8_field33.get("col").isNull())
					this._col = _b_fields_8_field33.get("col").asInt();
			}
		}
		public class Field11Node {
			public boolean _endPos;
			public String _ename;
			
			public Field11Node(Value _field11) {
				if(!_field11.get("endPos").isNull())
					this._endPos = _field11.get("endPos").asBoolean();
				if(!_field11.get("ename").isNull())
					this._ename = _field11.get("ename").asString();
			}
		}
		
		public class Field11_right_0_field12Rel {
		
			public Field11_right_0_field12Rel(Value _field11_right_0_field12) {
			}
		}
		public class Field11_bottom_1_field21Rel {
		
			public Field11_bottom_1_field21Rel(Value _field11_bottom_1_field21) {
			}
		}
		public class Field12Node {
			public boolean _endPos;
			public String _ename;
			
			public Field12Node(Value _field12) {
				if(!_field12.get("endPos").isNull())
					this._endPos = _field12.get("endPos").asBoolean();
				if(!_field12.get("ename").isNull())
					this._ename = _field12.get("ename").asString();
			}
		}
		
		public class Field12_right_0_field13Rel {
		
			public Field12_right_0_field13Rel(Value _field12_right_0_field13) {
			}
		}
		public class Field12_bottom_1_field22Rel {
		
			public Field12_bottom_1_field22Rel(Value _field12_bottom_1_field22) {
			}
		}
		public class Field13Node {
			public boolean _endPos;
			public String _ename;
			
			public Field13Node(Value _field13) {
				if(!_field13.get("endPos").isNull())
					this._endPos = _field13.get("endPos").asBoolean();
				if(!_field13.get("ename").isNull())
					this._ename = _field13.get("ename").asString();
			}
		}
		
		public class Field13_bottom_0_field23Rel {
		
			public Field13_bottom_0_field23Rel(Value _field13_bottom_0_field23) {
			}
		}
		public class Field21Node {
			public boolean _endPos;
			public String _ename;
			
			public Field21Node(Value _field21) {
				if(!_field21.get("endPos").isNull())
					this._endPos = _field21.get("endPos").asBoolean();
				if(!_field21.get("ename").isNull())
					this._ename = _field21.get("ename").asString();
			}
		}
		
		public class Field21_right_0_field22Rel {
		
			public Field21_right_0_field22Rel(Value _field21_right_0_field22) {
			}
		}
		public class Field21_bottom_1_field31Rel {
		
			public Field21_bottom_1_field31Rel(Value _field21_bottom_1_field31) {
			}
		}
		public class Field22Node {
			public boolean _endPos;
			public String _ename;
			
			public Field22Node(Value _field22) {
				if(!_field22.get("endPos").isNull())
					this._endPos = _field22.get("endPos").asBoolean();
				if(!_field22.get("ename").isNull())
					this._ename = _field22.get("ename").asString();
			}
		}
		
		public class Field22_right_0_field23Rel {
		
			public Field22_right_0_field23Rel(Value _field22_right_0_field23) {
			}
		}
		public class Field22_bottom_1_field32Rel {
		
			public Field22_bottom_1_field32Rel(Value _field22_bottom_1_field32) {
			}
		}
		public class Field23Node {
			public boolean _endPos;
			public String _ename;
			
			public Field23Node(Value _field23) {
				if(!_field23.get("endPos").isNull())
					this._endPos = _field23.get("endPos").asBoolean();
				if(!_field23.get("ename").isNull())
					this._ename = _field23.get("ename").asString();
			}
		}
		
		public class Field23_bottom_0_field33Rel {
		
			public Field23_bottom_0_field33Rel(Value _field23_bottom_0_field33) {
			}
		}
		public class Field31Node {
			public boolean _endPos;
			public String _ename;
			
			public Field31Node(Value _field31) {
				if(!_field31.get("endPos").isNull())
					this._endPos = _field31.get("endPos").asBoolean();
				if(!_field31.get("ename").isNull())
					this._ename = _field31.get("ename").asString();
			}
		}
		
		public class Field31_right_0_field32Rel {
		
			public Field31_right_0_field32Rel(Value _field31_right_0_field32) {
			}
		}
		public class Field32Node {
			public boolean _endPos;
			public String _ename;
			
			public Field32Node(Value _field32) {
				if(!_field32.get("endPos").isNull())
					this._endPos = _field32.get("endPos").asBoolean();
				if(!_field32.get("ename").isNull())
					this._ename = _field32.get("ename").asString();
			}
		}
		
		public class Field32_right_0_field33Rel {
		
			public Field32_right_0_field33Rel(Value _field32_right_0_field33) {
			}
		}
		public class Field33Node {
			public boolean _endPos;
			public String _ename;
			
			public Field33Node(Value _field33) {
				if(!_field33.get("endPos").isNull())
					this._endPos = _field33.get("endPos").asBoolean();
				if(!_field33.get("ename").isNull())
					this._ename = _field33.get("ename").asString();
			}
		}
		
	}
	
	public class All3x3FieldsMask extends NeoMask {
		public All3x3FieldsMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public All3x3FieldsMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public All3x3FieldsMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public All3x3FieldsMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_0_field11Row(int value) {
			attributeMask.put("b_fields_0_field11.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_0_field11Col(int value) {
			attributeMask.put("b_fields_0_field11.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_1_field12Row(int value) {
			attributeMask.put("b_fields_1_field12.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_1_field12Col(int value) {
			attributeMask.put("b_fields_1_field12.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_2_field13Row(int value) {
			attributeMask.put("b_fields_2_field13.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_2_field13Col(int value) {
			attributeMask.put("b_fields_2_field13.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_3_field21Row(int value) {
			attributeMask.put("b_fields_3_field21.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_3_field21Col(int value) {
			attributeMask.put("b_fields_3_field21.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_4_field22Row(int value) {
			attributeMask.put("b_fields_4_field22.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_4_field22Col(int value) {
			attributeMask.put("b_fields_4_field22.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_5_field23Row(int value) {
			attributeMask.put("b_fields_5_field23.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_5_field23Col(int value) {
			attributeMask.put("b_fields_5_field23.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_6_field31Row(int value) {
			attributeMask.put("b_fields_6_field31.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_6_field31Col(int value) {
			attributeMask.put("b_fields_6_field31.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_7_field32Row(int value) {
			attributeMask.put("b_fields_7_field32.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_7_field32Col(int value) {
			attributeMask.put("b_fields_7_field32.col", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_8_field33Row(int value) {
			attributeMask.put("b_fields_8_field33.row", value);
			return this;
		}
		public All3x3FieldsMask setB_fields_8_field33Col(int value) {
			attributeMask.put("b_fields_8_field33.col", value);
			return this;
		}
		public All3x3FieldsMask setField11(Long value) {
			nodeMask.put("field11", value);
			return this;
		}
		public All3x3FieldsMask setField11EndPos(boolean value) {
			attributeMask.put("field11.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField11Ename(String value) {
			attributeMask.put("field11.ename", value);
			return this;
		}
		public All3x3FieldsMask setField12(Long value) {
			nodeMask.put("field12", value);
			return this;
		}
		public All3x3FieldsMask setField12EndPos(boolean value) {
			attributeMask.put("field12.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField12Ename(String value) {
			attributeMask.put("field12.ename", value);
			return this;
		}
		public All3x3FieldsMask setField13(Long value) {
			nodeMask.put("field13", value);
			return this;
		}
		public All3x3FieldsMask setField13EndPos(boolean value) {
			attributeMask.put("field13.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField13Ename(String value) {
			attributeMask.put("field13.ename", value);
			return this;
		}
		public All3x3FieldsMask setField21(Long value) {
			nodeMask.put("field21", value);
			return this;
		}
		public All3x3FieldsMask setField21EndPos(boolean value) {
			attributeMask.put("field21.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField21Ename(String value) {
			attributeMask.put("field21.ename", value);
			return this;
		}
		public All3x3FieldsMask setField22(Long value) {
			nodeMask.put("field22", value);
			return this;
		}
		public All3x3FieldsMask setField22EndPos(boolean value) {
			attributeMask.put("field22.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField22Ename(String value) {
			attributeMask.put("field22.ename", value);
			return this;
		}
		public All3x3FieldsMask setField23(Long value) {
			nodeMask.put("field23", value);
			return this;
		}
		public All3x3FieldsMask setField23EndPos(boolean value) {
			attributeMask.put("field23.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField23Ename(String value) {
			attributeMask.put("field23.ename", value);
			return this;
		}
		public All3x3FieldsMask setField31(Long value) {
			nodeMask.put("field31", value);
			return this;
		}
		public All3x3FieldsMask setField31EndPos(boolean value) {
			attributeMask.put("field31.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField31Ename(String value) {
			attributeMask.put("field31.ename", value);
			return this;
		}
		public All3x3FieldsMask setField32(Long value) {
			nodeMask.put("field32", value);
			return this;
		}
		public All3x3FieldsMask setField32EndPos(boolean value) {
			attributeMask.put("field32.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField32Ename(String value) {
			attributeMask.put("field32.ename", value);
			return this;
		}
		public All3x3FieldsMask setField33(Long value) {
			nodeMask.put("field33", value);
			return this;
		}
		public All3x3FieldsMask setField33EndPos(boolean value) {
			attributeMask.put("field33.endPos", value);
			return this;
		}
		public All3x3FieldsMask setField33Ename(String value) {
			attributeMask.put("field33.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.38
	public All2x2FieldsAccess getPattern_All2x2Fields() {
		return new All2x2FieldsAccess();
	}
	
	public class All2x2FieldsAccess extends NeoPatternAccess<All2x2FieldsData, All2x2FieldsMask> {
		public final String _b = "b";
		public final String _field11 = "field11";
		public final String _field12 = "field12";
		public final String _field21 = "field21";
		public final String _field22 = "field22";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(38);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<All2x2FieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new All2x2FieldsData(d));
		}
		
		@Override
		public All2x2FieldsMask mask() {
			return new All2x2FieldsMask();
		}
	}
	
	public class All2x2FieldsData extends NeoData {
		public final BNode _b;
		public final B_fields_0_field11Rel _b_fields_0_field11;
		public final B_fields_1_field12Rel _b_fields_1_field12;
		public final B_fields_2_field21Rel _b_fields_2_field21;
		public final B_fields_3_field22Rel _b_fields_3_field22;
		public final Field11Node _field11;
		public final Field11_right_0_field12Rel _field11_right_0_field12;
		public final Field11_bottom_1_field21Rel _field11_bottom_1_field21;
		public final Field12Node _field12;
		public final Field12_bottom_0_field22Rel _field12_bottom_0_field22;
		public final Field21Node _field21;
		public final Field21_right_0_field22Rel _field21_right_0_field22;
		public final Field22Node _field22;
		
		public All2x2FieldsData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_field11 = data.get("b_fields_0_field11");
			this._b_fields_0_field11 = new B_fields_0_field11Rel(_b_fields_0_field11);
			var _b_fields_1_field12 = data.get("b_fields_1_field12");
			this._b_fields_1_field12 = new B_fields_1_field12Rel(_b_fields_1_field12);
			var _b_fields_2_field21 = data.get("b_fields_2_field21");
			this._b_fields_2_field21 = new B_fields_2_field21Rel(_b_fields_2_field21);
			var _b_fields_3_field22 = data.get("b_fields_3_field22");
			this._b_fields_3_field22 = new B_fields_3_field22Rel(_b_fields_3_field22);
			var _field11 = data.get("field11");
			this._field11 = new Field11Node(_field11);
			var _field11_right_0_field12 = data.get("field11_right_0_field12");
			this._field11_right_0_field12 = new Field11_right_0_field12Rel(_field11_right_0_field12);
			var _field11_bottom_1_field21 = data.get("field11_bottom_1_field21");
			this._field11_bottom_1_field21 = new Field11_bottom_1_field21Rel(_field11_bottom_1_field21);
			var _field12 = data.get("field12");
			this._field12 = new Field12Node(_field12);
			var _field12_bottom_0_field22 = data.get("field12_bottom_0_field22");
			this._field12_bottom_0_field22 = new Field12_bottom_0_field22Rel(_field12_bottom_0_field22);
			var _field21 = data.get("field21");
			this._field21 = new Field21Node(_field21);
			var _field21_right_0_field22 = data.get("field21_right_0_field22");
			this._field21_right_0_field22 = new Field21_right_0_field22Rel(_field21_right_0_field22);
			var _field22 = data.get("field22");
			this._field22 = new Field22Node(_field22);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_field11Rel {
			public int _row;
			public int _col;
		
			public B_fields_0_field11Rel(Value _b_fields_0_field11) {
				if(!_b_fields_0_field11.get("row").isNull())
					this._row = _b_fields_0_field11.get("row").asInt();
				if(!_b_fields_0_field11.get("col").isNull())
					this._col = _b_fields_0_field11.get("col").asInt();
			}
		}
		public class B_fields_1_field12Rel {
			public int _row;
			public int _col;
		
			public B_fields_1_field12Rel(Value _b_fields_1_field12) {
				if(!_b_fields_1_field12.get("row").isNull())
					this._row = _b_fields_1_field12.get("row").asInt();
				if(!_b_fields_1_field12.get("col").isNull())
					this._col = _b_fields_1_field12.get("col").asInt();
			}
		}
		public class B_fields_2_field21Rel {
			public int _row;
			public int _col;
		
			public B_fields_2_field21Rel(Value _b_fields_2_field21) {
				if(!_b_fields_2_field21.get("row").isNull())
					this._row = _b_fields_2_field21.get("row").asInt();
				if(!_b_fields_2_field21.get("col").isNull())
					this._col = _b_fields_2_field21.get("col").asInt();
			}
		}
		public class B_fields_3_field22Rel {
			public int _row;
			public int _col;
		
			public B_fields_3_field22Rel(Value _b_fields_3_field22) {
				if(!_b_fields_3_field22.get("row").isNull())
					this._row = _b_fields_3_field22.get("row").asInt();
				if(!_b_fields_3_field22.get("col").isNull())
					this._col = _b_fields_3_field22.get("col").asInt();
			}
		}
		public class Field11Node {
			public boolean _endPos;
			public String _ename;
			
			public Field11Node(Value _field11) {
				if(!_field11.get("endPos").isNull())
					this._endPos = _field11.get("endPos").asBoolean();
				if(!_field11.get("ename").isNull())
					this._ename = _field11.get("ename").asString();
			}
		}
		
		public class Field11_right_0_field12Rel {
		
			public Field11_right_0_field12Rel(Value _field11_right_0_field12) {
			}
		}
		public class Field11_bottom_1_field21Rel {
		
			public Field11_bottom_1_field21Rel(Value _field11_bottom_1_field21) {
			}
		}
		public class Field12Node {
			public boolean _endPos;
			public String _ename;
			
			public Field12Node(Value _field12) {
				if(!_field12.get("endPos").isNull())
					this._endPos = _field12.get("endPos").asBoolean();
				if(!_field12.get("ename").isNull())
					this._ename = _field12.get("ename").asString();
			}
		}
		
		public class Field12_bottom_0_field22Rel {
		
			public Field12_bottom_0_field22Rel(Value _field12_bottom_0_field22) {
			}
		}
		public class Field21Node {
			public boolean _endPos;
			public String _ename;
			
			public Field21Node(Value _field21) {
				if(!_field21.get("endPos").isNull())
					this._endPos = _field21.get("endPos").asBoolean();
				if(!_field21.get("ename").isNull())
					this._ename = _field21.get("ename").asString();
			}
		}
		
		public class Field21_right_0_field22Rel {
		
			public Field21_right_0_field22Rel(Value _field21_right_0_field22) {
			}
		}
		public class Field22Node {
			public boolean _endPos;
			public String _ename;
			
			public Field22Node(Value _field22) {
				if(!_field22.get("endPos").isNull())
					this._endPos = _field22.get("endPos").asBoolean();
				if(!_field22.get("ename").isNull())
					this._ename = _field22.get("ename").asString();
			}
		}
		
	}
	
	public class All2x2FieldsMask extends NeoMask {
		public All2x2FieldsMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public All2x2FieldsMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public All2x2FieldsMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public All2x2FieldsMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_0_field11Row(int value) {
			attributeMask.put("b_fields_0_field11.row", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_0_field11Col(int value) {
			attributeMask.put("b_fields_0_field11.col", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_1_field12Row(int value) {
			attributeMask.put("b_fields_1_field12.row", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_1_field12Col(int value) {
			attributeMask.put("b_fields_1_field12.col", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_2_field21Row(int value) {
			attributeMask.put("b_fields_2_field21.row", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_2_field21Col(int value) {
			attributeMask.put("b_fields_2_field21.col", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_3_field22Row(int value) {
			attributeMask.put("b_fields_3_field22.row", value);
			return this;
		}
		public All2x2FieldsMask setB_fields_3_field22Col(int value) {
			attributeMask.put("b_fields_3_field22.col", value);
			return this;
		}
		public All2x2FieldsMask setField11(Long value) {
			nodeMask.put("field11", value);
			return this;
		}
		public All2x2FieldsMask setField11EndPos(boolean value) {
			attributeMask.put("field11.endPos", value);
			return this;
		}
		public All2x2FieldsMask setField11Ename(String value) {
			attributeMask.put("field11.ename", value);
			return this;
		}
		public All2x2FieldsMask setField12(Long value) {
			nodeMask.put("field12", value);
			return this;
		}
		public All2x2FieldsMask setField12EndPos(boolean value) {
			attributeMask.put("field12.endPos", value);
			return this;
		}
		public All2x2FieldsMask setField12Ename(String value) {
			attributeMask.put("field12.ename", value);
			return this;
		}
		public All2x2FieldsMask setField21(Long value) {
			nodeMask.put("field21", value);
			return this;
		}
		public All2x2FieldsMask setField21EndPos(boolean value) {
			attributeMask.put("field21.endPos", value);
			return this;
		}
		public All2x2FieldsMask setField21Ename(String value) {
			attributeMask.put("field21.ename", value);
			return this;
		}
		public All2x2FieldsMask setField22(Long value) {
			nodeMask.put("field22", value);
			return this;
		}
		public All2x2FieldsMask setField22EndPos(boolean value) {
			attributeMask.put("field22.endPos", value);
			return this;
		}
		public All2x2FieldsMask setField22Ename(String value) {
			attributeMask.put("field22.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.39
	public BoulderOnEndFieldAccess getPattern_BoulderOnEndField() {
		return new BoulderOnEndFieldAccess();
	}
	
	public class BoulderOnEndFieldAccess extends NeoPatternAccess<BoulderOnEndFieldData, BoulderOnEndFieldMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(39);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BoulderOnEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoulderOnEndFieldData(d));
		}
		
		@Override
		public BoulderOnEndFieldMask mask() {
			return new BoulderOnEndFieldMask();
		}
	}
	
	public class BoulderOnEndFieldData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public BoulderOnEndFieldData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class BoulderOnEndFieldMask extends NeoMask {
		public BoulderOnEndFieldMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public BoulderOnEndFieldMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public BoulderOnEndFieldMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public BoulderOnEndFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public BoulderOnEndFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.40
	public BlockAccess getPattern_Block() {
		return new BlockAccess();
	}
	
	public class BlockAccess extends NeoPatternAccess<BlockData, BlockMask> {
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(40);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockData(d));
		}
		
		@Override
		public BlockMask mask() {
			return new BlockMask();
		}
	}
	
	public class BlockData extends NeoData {
		public final FigNode _fig;
		
		public BlockData(Record data) {
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
		}
		
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
	}
	
	public class BlockMask extends NeoMask {
		public BlockMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public BlockMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.41
	public BlockNotOnEndFieldInCornerAccess getPattern_BlockNotOnEndFieldInCorner() {
		return new BlockNotOnEndFieldInCornerAccess();
	}
	
	public class BlockNotOnEndFieldInCornerAccess extends NeoPatternAccess<BlockNotOnEndFieldInCornerData, BlockNotOnEndFieldInCornerMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(41);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockNotOnEndFieldInCornerData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockNotOnEndFieldInCornerData(d));
		}
		
		@Override
		public BlockNotOnEndFieldInCornerMask mask() {
			return new BlockNotOnEndFieldInCornerMask();
		}
	}
	
	public class BlockNotOnEndFieldInCornerData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public BlockNotOnEndFieldInCornerData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class BlockNotOnEndFieldInCornerMask extends NeoMask {
		public BlockNotOnEndFieldInCornerMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public BlockNotOnEndFieldInCornerMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public BlockNotOnEndFieldInCornerMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public BlockNotOnEndFieldInCornerMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public BlockNotOnEndFieldInCornerMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.42
	public BlockOnFieldCondAccess getPattern_BlockOnFieldCond() {
		return new BlockOnFieldCondAccess();
	}
	
	public class BlockOnFieldCondAccess extends NeoPatternAccess<BlockOnFieldCondData, BlockOnFieldCondMask> {
		public final String _field = "field";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(42);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockOnFieldCondData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockOnFieldCondData(d));
		}
		
		@Override
		public BlockOnFieldCondMask mask() {
			return new BlockOnFieldCondMask();
		}
	}
	
	public class BlockOnFieldCondData extends NeoData {
		public final FieldNode _field;
		public final FigNode _fig;
		public final Fig_field_0_fieldRel _fig_field_0_field;
		
		public BlockOnFieldCondData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_field = data.get("fig_field_0_field");
			this._fig_field_0_field = new Fig_field_0_fieldRel(_fig_field_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_fieldRel {
		
			public Fig_field_0_fieldRel(Value _fig_field_0_field) {
			}
		}
	}
	
	public class BlockOnFieldCondMask extends NeoMask {
		public BlockOnFieldCondMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public BlockOnFieldCondMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public BlockOnFieldCondMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public BlockOnFieldCondMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public BlockOnFieldCondMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.43
	public IConstraint getConstraint_ForbidLeftSide() {
		var c = (Constraint) spec.getEntities().get(43);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.44
	public IConstraint getConstraint_ForbidTopSide() {
		var c = (Constraint) spec.getEntities().get(44);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.45
	public IConstraint getConstraint_ForbidRightSide() {
		var c = (Constraint) spec.getEntities().get(45);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.46
	public IConstraint getConstraint_ForbidBottomSide() {
		var c = (Constraint) spec.getEntities().get(46);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.47
	public IConstraint getConstraint_EnforceHasLeft() {
		var c = (Constraint) spec.getEntities().get(47);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.48
	public IConstraint getConstraint_ForbidHasTop() {
		var c = (Constraint) spec.getEntities().get(48);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.49
	public IConstraint getConstraint_RelevantConstr() {
		var c = (Constraint) spec.getEntities().get(49);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.50
	public IConstraint getConstraint_TopLeftCorner() {
		var c = (Constraint) spec.getEntities().get(50);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.51
	public IConstraint getConstraint_TopRightCorner() {
		var c = (Constraint) spec.getEntities().get(51);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.52
	public IConstraint getConstraint_BottomLeftCorner() {
		var c = (Constraint) spec.getEntities().get(52);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.53
	public IConstraint getConstraint_BottomRightCorner() {
		var c = (Constraint) spec.getEntities().get(53);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.54
	public IConstraint getConstraint_NoCorner() {
		var c = (Constraint) spec.getEntities().get(54);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.55
	public IConstraint getConstraint_ExtremeConstraint() {
		var c = (Constraint) spec.getEntities().get(55);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.56
	public HasLeftAccess getPattern_HasLeft() {
		return new HasLeftAccess();
	}
	
	public class HasLeftAccess extends NeoPatternAccess<HasLeftData, HasLeftMask> {
		public final String _field = "field";
		public final String _leftField = "leftField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(56);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<HasLeftData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new HasLeftData(d));
		}
		
		@Override
		public HasLeftMask mask() {
			return new HasLeftMask();
		}
	}
	
	public class HasLeftData extends NeoData {
		public final FieldNode _field;
		public final LeftFieldNode _leftField;
		public final LeftField_right_0_fieldRel _leftField_right_0_field;
		
		public HasLeftData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _leftField = data.get("leftField");
			this._leftField = new LeftFieldNode(_leftField);
			var _leftField_right_0_field = data.get("leftField_right_0_field");
			this._leftField_right_0_field = new LeftField_right_0_fieldRel(_leftField_right_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class LeftFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public LeftFieldNode(Value _leftField) {
				if(!_leftField.get("endPos").isNull())
					this._endPos = _leftField.get("endPos").asBoolean();
				if(!_leftField.get("ename").isNull())
					this._ename = _leftField.get("ename").asString();
			}
		}
		
		public class LeftField_right_0_fieldRel {
		
			public LeftField_right_0_fieldRel(Value _leftField_right_0_field) {
			}
		}
	}
	
	public class HasLeftMask extends NeoMask {
		public HasLeftMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public HasLeftMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public HasLeftMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public HasLeftMask setLeftField(Long value) {
			nodeMask.put("leftField", value);
			return this;
		}
		public HasLeftMask setLeftFieldEndPos(boolean value) {
			attributeMask.put("leftField.endPos", value);
			return this;
		}
		public HasLeftMask setLeftFieldEname(String value) {
			attributeMask.put("leftField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.57
	public HasTopAccess getPattern_HasTop() {
		return new HasTopAccess();
	}
	
	public class HasTopAccess extends NeoPatternAccess<HasTopData, HasTopMask> {
		public final String _field = "field";
		public final String _topField = "topField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(57);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<HasTopData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new HasTopData(d));
		}
		
		@Override
		public HasTopMask mask() {
			return new HasTopMask();
		}
	}
	
	public class HasTopData extends NeoData {
		public final FieldNode _field;
		public final TopFieldNode _topField;
		public final TopField_bottom_0_fieldRel _topField_bottom_0_field;
		
		public HasTopData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _topField = data.get("topField");
			this._topField = new TopFieldNode(_topField);
			var _topField_bottom_0_field = data.get("topField_bottom_0_field");
			this._topField_bottom_0_field = new TopField_bottom_0_fieldRel(_topField_bottom_0_field);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class TopFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public TopFieldNode(Value _topField) {
				if(!_topField.get("endPos").isNull())
					this._endPos = _topField.get("endPos").asBoolean();
				if(!_topField.get("ename").isNull())
					this._ename = _topField.get("ename").asString();
			}
		}
		
		public class TopField_bottom_0_fieldRel {
		
			public TopField_bottom_0_fieldRel(Value _topField_bottom_0_field) {
			}
		}
	}
	
	public class HasTopMask extends NeoMask {
		public HasTopMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public HasTopMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public HasTopMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public HasTopMask setTopField(Long value) {
			nodeMask.put("topField", value);
			return this;
		}
		public HasTopMask setTopFieldEndPos(boolean value) {
			attributeMask.put("topField.endPos", value);
			return this;
		}
		public HasTopMask setTopFieldEname(String value) {
			attributeMask.put("topField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.58
	public HasRightAccess getPattern_HasRight() {
		return new HasRightAccess();
	}
	
	public class HasRightAccess extends NeoPatternAccess<HasRightData, HasRightMask> {
		public final String _field = "field";
		public final String _rightField = "rightField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(58);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<HasRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new HasRightData(d));
		}
		
		@Override
		public HasRightMask mask() {
			return new HasRightMask();
		}
	}
	
	public class HasRightData extends NeoData {
		public final FieldNode _field;
		public final Field_right_0_rightFieldRel _field_right_0_rightField;
		public final RightFieldNode _rightField;
		
		public HasRightData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _field_right_0_rightField = data.get("field_right_0_rightField");
			this._field_right_0_rightField = new Field_right_0_rightFieldRel(_field_right_0_rightField);
			var _rightField = data.get("rightField");
			this._rightField = new RightFieldNode(_rightField);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class Field_right_0_rightFieldRel {
		
			public Field_right_0_rightFieldRel(Value _field_right_0_rightField) {
			}
		}
		public class RightFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public RightFieldNode(Value _rightField) {
				if(!_rightField.get("endPos").isNull())
					this._endPos = _rightField.get("endPos").asBoolean();
				if(!_rightField.get("ename").isNull())
					this._ename = _rightField.get("ename").asString();
			}
		}
		
	}
	
	public class HasRightMask extends NeoMask {
		public HasRightMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public HasRightMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public HasRightMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public HasRightMask setRightField(Long value) {
			nodeMask.put("rightField", value);
			return this;
		}
		public HasRightMask setRightFieldEndPos(boolean value) {
			attributeMask.put("rightField.endPos", value);
			return this;
		}
		public HasRightMask setRightFieldEname(String value) {
			attributeMask.put("rightField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.59
	public HasBottomAccess getPattern_HasBottom() {
		return new HasBottomAccess();
	}
	
	public class HasBottomAccess extends NeoPatternAccess<HasBottomData, HasBottomMask> {
		public final String _field = "field";
		public final String _bottomField = "bottomField";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(59);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<HasBottomData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new HasBottomData(d));
		}
		
		@Override
		public HasBottomMask mask() {
			return new HasBottomMask();
		}
	}
	
	public class HasBottomData extends NeoData {
		public final FieldNode _field;
		public final Field_bottom_0_bottomFieldRel _field_bottom_0_bottomField;
		public final BottomFieldNode _bottomField;
		
		public HasBottomData(Record data) {
			var _field = data.get("field");
			this._field = new FieldNode(_field);
			var _field_bottom_0_bottomField = data.get("field_bottom_0_bottomField");
			this._field_bottom_0_bottomField = new Field_bottom_0_bottomFieldRel(_field_bottom_0_bottomField);
			var _bottomField = data.get("bottomField");
			this._bottomField = new BottomFieldNode(_bottomField);
		}
		
		
		public class FieldNode {
			public boolean _endPos;
			public String _ename;
			
			public FieldNode(Value _field) {
				if(!_field.get("endPos").isNull())
					this._endPos = _field.get("endPos").asBoolean();
				if(!_field.get("ename").isNull())
					this._ename = _field.get("ename").asString();
			}
		}
		
		public class Field_bottom_0_bottomFieldRel {
		
			public Field_bottom_0_bottomFieldRel(Value _field_bottom_0_bottomField) {
			}
		}
		public class BottomFieldNode {
			public boolean _endPos;
			public String _ename;
			
			public BottomFieldNode(Value _bottomField) {
				if(!_bottomField.get("endPos").isNull())
					this._endPos = _bottomField.get("endPos").asBoolean();
				if(!_bottomField.get("ename").isNull())
					this._ename = _bottomField.get("ename").asString();
			}
		}
		
	}
	
	public class HasBottomMask extends NeoMask {
		public HasBottomMask setField(Long value) {
			nodeMask.put("field", value);
			return this;
		}
		public HasBottomMask setFieldEndPos(boolean value) {
			attributeMask.put("field.endPos", value);
			return this;
		}
		public HasBottomMask setFieldEname(String value) {
			attributeMask.put("field.ename", value);
			return this;
		}
		public HasBottomMask setBottomField(Long value) {
			nodeMask.put("bottomField", value);
			return this;
		}
		public HasBottomMask setBottomFieldEndPos(boolean value) {
			attributeMask.put("bottomField.endPos", value);
			return this;
		}
		public HasBottomMask setBottomFieldEname(String value) {
			attributeMask.put("bottomField.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.60
	public OccupiedFieldAccess getPattern_OccupiedField() {
		return new OccupiedFieldAccess();
	}
	
	public class OccupiedFieldAccess extends NeoPatternAccess<OccupiedFieldData, OccupiedFieldMask> {
		public final String _fig = "fig";
		public final String _to = "to";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(60);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OccupiedFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OccupiedFieldData(d));
		}
		
		@Override
		public OccupiedFieldMask mask() {
			return new OccupiedFieldMask();
		}
	}
	
	public class OccupiedFieldData extends NeoData {
		public final FigNode _fig;
		public final Fig_field_0_toRel _fig_field_0_to;
		public final ToNode _to;
		
		public OccupiedFieldData(Record data) {
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_to = data.get("fig_field_0_to");
			this._fig_field_0_to = new Fig_field_0_toRel(_fig_field_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
		}
		
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_toRel {
		
			public Fig_field_0_toRel(Value _fig_field_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
	}
	
	public class OccupiedFieldMask extends NeoMask {
		public OccupiedFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public OccupiedFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public OccupiedFieldMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public OccupiedFieldMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public OccupiedFieldMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.61
	public OccupiedNextAccess getPattern_OccupiedNext() {
		return new OccupiedNextAccess();
	}
	
	public class OccupiedNextAccess extends NeoPatternAccess<OccupiedNextData, OccupiedNextMask> {
		public final String _next = "next";
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(61);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OccupiedNextData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OccupiedNextData(d));
		}
		
		@Override
		public OccupiedNextMask mask() {
			return new OccupiedNextMask();
		}
	}
	
	public class OccupiedNextData extends NeoData {
		public final NextNode _next;
		public final FigNode _fig;
		public final Fig_field_0_nextRel _fig_field_0_next;
		
		public OccupiedNextData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _fig_field_0_next = data.get("fig_field_0_next");
			this._fig_field_0_next = new Fig_field_0_nextRel(_fig_field_0_next);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class Fig_field_0_nextRel {
		
			public Fig_field_0_nextRel(Value _fig_field_0_next) {
			}
		}
	}
	
	public class OccupiedNextMask extends NeoMask {
		public OccupiedNextMask setNext(Long value) {
			nodeMask.put("next", value);
			return this;
		}
		public OccupiedNextMask setNextEndPos(boolean value) {
			attributeMask.put("next.endPos", value);
			return this;
		}
		public OccupiedNextMask setNextEname(String value) {
			attributeMask.put("next.ename", value);
			return this;
		}
		public OccupiedNextMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public OccupiedNextMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.62
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.63
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.64
	public MoveSokobanUpAccess getRule_MoveSokobanUp() {
		return new MoveSokobanUpAccess();
	}
	
	public class MoveSokobanUpAccess extends NeoRuleCoAccess<MoveSokobanUpData, MoveSokobanUpCoData, MoveSokobanUpMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(64);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanUpData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanUpData(d));
		}
			
		@Override
		public Stream<MoveSokobanUpCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanUpCoData(d));
		}
		
		@Override
		public MoveSokobanUpMask mask() {
			return new MoveSokobanUpMask();
		}
	}
	
	public class MoveSokobanUpData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanUpData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanUpCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanUpCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanUpMask extends NeoMask {
		public MoveSokobanUpMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanUpMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanUpMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanUpMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanUpMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanUpMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanUpMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanUpMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanUpMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanUpMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanUpMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanUpMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanUpMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanUpMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanUpMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanUpMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.65
	public MoveSokobanUpWithConditionAccess getRule_MoveSokobanUpWithCondition() {
		return new MoveSokobanUpWithConditionAccess();
	}
	
	public class MoveSokobanUpWithConditionAccess extends NeoRuleCoAccess<MoveSokobanUpWithConditionData, MoveSokobanUpWithConditionCoData, MoveSokobanUpWithConditionMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(65);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanUpWithConditionData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanUpWithConditionData(d));
		}
			
		@Override
		public Stream<MoveSokobanUpWithConditionCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanUpWithConditionCoData(d));
		}
		
		@Override
		public MoveSokobanUpWithConditionMask mask() {
			return new MoveSokobanUpWithConditionMask();
		}
	}
	
	public class MoveSokobanUpWithConditionData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanUpWithConditionData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanUpWithConditionCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanUpWithConditionCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanUpWithConditionMask extends NeoMask {
		public MoveSokobanUpWithConditionMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanUpWithConditionMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.66
	public PushBlockUpAccess getRule_PushBlockUp() {
		return new PushBlockUpAccess();
	}
	
	public class PushBlockUpAccess extends NeoRuleCoAccess<PushBlockUpData, PushBlockUpCoData, PushBlockUpMask> {
		public final String _next = "next";
		public final String _b = "b";
		public final String _block = "block";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(66);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PushBlockUpData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockUpData(d));
		}
			
		@Override
		public Stream<PushBlockUpCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockUpCoData(d));
		}
		
		@Override
		public PushBlockUpMask mask() {
			return new PushBlockUpMask();
		}
	}
	
	public class PushBlockUpData extends NeoData {
		public final NextNode _next;
		public final Next_bottom_0_toRel _next_bottom_0_to;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_1_toRel _block_field_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public PushBlockUpData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _next_bottom_0_to = data.get("next_bottom_0_to");
			this._next_bottom_0_to = new Next_bottom_0_toRel(_next_bottom_0_to);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_1_to = data.get("block_field_1_to");
			this._block_field_1_to = new Block_field_1_toRel(_block_field_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class Next_bottom_0_toRel {
		
			public Next_bottom_0_toRel(Value _next_bottom_0_to) {
			}
		}
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_1_toRel {
		
			public Block_field_1_toRel(Value _block_field_1_to) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class PushBlockUpCoData extends NeoData {
		public final NextNode _next;
		public final Next_bottom_0_toRel _next_bottom_0_to;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_0_nextRel _block_field_0_next;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public PushBlockUpCoData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _next_bottom_0_to = data.get("next_bottom_0_to");
			this._next_bottom_0_to = new Next_bottom_0_toRel(_next_bottom_0_to);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_0_next = data.get("block_field_0_next");
			this._block_field_0_next = new Block_field_0_nextRel(_block_field_0_next);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class Next_bottom_0_toRel {
		
			public Next_bottom_0_toRel(Value _next_bottom_0_to) {
			}
		}
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_0_nextRel {
		
			public Block_field_0_nextRel(Value _block_field_0_next) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class PushBlockUpMask extends NeoMask {
		public PushBlockUpMask setNext(Long value) {
			nodeMask.put("next", value);
			return this;
		}
		public PushBlockUpMask setNextEndPos(boolean value) {
			attributeMask.put("next.endPos", value);
			return this;
		}
		public PushBlockUpMask setNextEname(String value) {
			attributeMask.put("next.ename", value);
			return this;
		}
		public PushBlockUpMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public PushBlockUpMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public PushBlockUpMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public PushBlockUpMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public PushBlockUpMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public PushBlockUpMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public PushBlockUpMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public PushBlockUpMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public PushBlockUpMask setBlock(Long value) {
			nodeMask.put("block", value);
			return this;
		}
		public PushBlockUpMask setBlockEname(String value) {
			attributeMask.put("block.ename", value);
			return this;
		}
		public PushBlockUpMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public PushBlockUpMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public PushBlockUpMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public PushBlockUpMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public PushBlockUpMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public PushBlockUpMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public PushBlockUpMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public PushBlockUpMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.67
	public MoveSokobanDownAccess getRule_MoveSokobanDown() {
		return new MoveSokobanDownAccess();
	}
	
	public class MoveSokobanDownAccess extends NeoRuleCoAccess<MoveSokobanDownData, MoveSokobanDownCoData, MoveSokobanDownMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(67);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanDownData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanDownData(d));
		}
			
		@Override
		public Stream<MoveSokobanDownCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanDownCoData(d));
		}
		
		@Override
		public MoveSokobanDownMask mask() {
			return new MoveSokobanDownMask();
		}
	}
	
	public class MoveSokobanDownData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanDownData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanDownCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanDownCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanDownMask extends NeoMask {
		public MoveSokobanDownMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanDownMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanDownMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanDownMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanDownMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanDownMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanDownMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanDownMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanDownMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanDownMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanDownMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanDownMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanDownMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanDownMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanDownMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanDownMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.68
	public MoveSokobanDownWithConditionAccess getRule_MoveSokobanDownWithCondition() {
		return new MoveSokobanDownWithConditionAccess();
	}
	
	public class MoveSokobanDownWithConditionAccess extends NeoRuleCoAccess<MoveSokobanDownWithConditionData, MoveSokobanDownWithConditionCoData, MoveSokobanDownWithConditionMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(68);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanDownWithConditionData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanDownWithConditionData(d));
		}
			
		@Override
		public Stream<MoveSokobanDownWithConditionCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanDownWithConditionCoData(d));
		}
		
		@Override
		public MoveSokobanDownWithConditionMask mask() {
			return new MoveSokobanDownWithConditionMask();
		}
	}
	
	public class MoveSokobanDownWithConditionData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanDownWithConditionData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanDownWithConditionCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanDownWithConditionCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanDownWithConditionMask extends NeoMask {
		public MoveSokobanDownWithConditionMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanDownWithConditionMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.69
	public PushBlockDownAccess getRule_PushBlockDown() {
		return new PushBlockDownAccess();
	}
	
	public class PushBlockDownAccess extends NeoRuleCoAccess<PushBlockDownData, PushBlockDownCoData, PushBlockDownMask> {
		public final String _next = "next";
		public final String _b = "b";
		public final String _block = "block";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(69);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PushBlockDownData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockDownData(d));
		}
			
		@Override
		public Stream<PushBlockDownCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockDownCoData(d));
		}
		
		@Override
		public PushBlockDownMask mask() {
			return new PushBlockDownMask();
		}
	}
	
	public class PushBlockDownData extends NeoData {
		public final NextNode _next;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_1_toRel _block_field_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final To_bottom_0_nextRel _to_bottom_0_next;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public PushBlockDownData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_1_to = data.get("block_field_1_to");
			this._block_field_1_to = new Block_field_1_toRel(_block_field_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_next = data.get("to_bottom_0_next");
			this._to_bottom_0_next = new To_bottom_0_nextRel(_to_bottom_0_next);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_1_toRel {
		
			public Block_field_1_toRel(Value _block_field_1_to) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_nextRel {
		
			public To_bottom_0_nextRel(Value _to_bottom_0_next) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class PushBlockDownCoData extends NeoData {
		public final NextNode _next;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_0_nextRel _block_field_0_next;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final To_bottom_0_nextRel _to_bottom_0_next;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public PushBlockDownCoData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_0_next = data.get("block_field_0_next");
			this._block_field_0_next = new Block_field_0_nextRel(_block_field_0_next);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_next = data.get("to_bottom_0_next");
			this._to_bottom_0_next = new To_bottom_0_nextRel(_to_bottom_0_next);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_0_nextRel {
		
			public Block_field_0_nextRel(Value _block_field_0_next) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_nextRel {
		
			public To_bottom_0_nextRel(Value _to_bottom_0_next) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class PushBlockDownMask extends NeoMask {
		public PushBlockDownMask setNext(Long value) {
			nodeMask.put("next", value);
			return this;
		}
		public PushBlockDownMask setNextEndPos(boolean value) {
			attributeMask.put("next.endPos", value);
			return this;
		}
		public PushBlockDownMask setNextEname(String value) {
			attributeMask.put("next.ename", value);
			return this;
		}
		public PushBlockDownMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public PushBlockDownMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public PushBlockDownMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public PushBlockDownMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public PushBlockDownMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public PushBlockDownMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public PushBlockDownMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public PushBlockDownMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public PushBlockDownMask setBlock(Long value) {
			nodeMask.put("block", value);
			return this;
		}
		public PushBlockDownMask setBlockEname(String value) {
			attributeMask.put("block.ename", value);
			return this;
		}
		public PushBlockDownMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public PushBlockDownMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public PushBlockDownMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public PushBlockDownMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public PushBlockDownMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public PushBlockDownMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public PushBlockDownMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public PushBlockDownMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.70
	public MoveSokobanRightAccess getRule_MoveSokobanRight() {
		return new MoveSokobanRightAccess();
	}
	
	public class MoveSokobanRightAccess extends NeoRuleCoAccess<MoveSokobanRightData, MoveSokobanRightCoData, MoveSokobanRightMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(70);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanRightData(d));
		}
			
		@Override
		public Stream<MoveSokobanRightCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanRightCoData(d));
		}
		
		@Override
		public MoveSokobanRightMask mask() {
			return new MoveSokobanRightMask();
		}
	}
	
	public class MoveSokobanRightData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanRightData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanRightCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanRightCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanRightMask extends NeoMask {
		public MoveSokobanRightMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanRightMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanRightMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanRightMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanRightMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanRightMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanRightMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanRightMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanRightMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanRightMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanRightMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanRightMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanRightMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanRightMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanRightMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanRightMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.71
	public MoveSokobanRightWithConditionAccess getRule_MoveSokobanRightWithCondition() {
		return new MoveSokobanRightWithConditionAccess();
	}
	
	public class MoveSokobanRightWithConditionAccess extends NeoRuleCoAccess<MoveSokobanRightWithConditionData, MoveSokobanRightWithConditionCoData, MoveSokobanRightWithConditionMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(71);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanRightWithConditionData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanRightWithConditionData(d));
		}
			
		@Override
		public Stream<MoveSokobanRightWithConditionCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanRightWithConditionCoData(d));
		}
		
		@Override
		public MoveSokobanRightWithConditionMask mask() {
			return new MoveSokobanRightWithConditionMask();
		}
	}
	
	public class MoveSokobanRightWithConditionData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanRightWithConditionData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanRightWithConditionCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanRightWithConditionCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanRightWithConditionMask extends NeoMask {
		public MoveSokobanRightWithConditionMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanRightWithConditionMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.72
	public PushBlockRightAccess getRule_PushBlockRight() {
		return new PushBlockRightAccess();
	}
	
	public class PushBlockRightAccess extends NeoRuleCoAccess<PushBlockRightData, PushBlockRightCoData, PushBlockRightMask> {
		public final String _next = "next";
		public final String _b = "b";
		public final String _block = "block";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(72);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PushBlockRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockRightData(d));
		}
			
		@Override
		public Stream<PushBlockRightCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockRightCoData(d));
		}
		
		@Override
		public PushBlockRightMask mask() {
			return new PushBlockRightMask();
		}
	}
	
	public class PushBlockRightData extends NeoData {
		public final NextNode _next;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_1_toRel _block_field_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final To_right_0_nextRel _to_right_0_next;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public PushBlockRightData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_1_to = data.get("block_field_1_to");
			this._block_field_1_to = new Block_field_1_toRel(_block_field_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_next = data.get("to_right_0_next");
			this._to_right_0_next = new To_right_0_nextRel(_to_right_0_next);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_1_toRel {
		
			public Block_field_1_toRel(Value _block_field_1_to) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_nextRel {
		
			public To_right_0_nextRel(Value _to_right_0_next) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class PushBlockRightCoData extends NeoData {
		public final NextNode _next;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_0_nextRel _block_field_0_next;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final To_right_0_nextRel _to_right_0_next;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public PushBlockRightCoData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_0_next = data.get("block_field_0_next");
			this._block_field_0_next = new Block_field_0_nextRel(_block_field_0_next);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_next = data.get("to_right_0_next");
			this._to_right_0_next = new To_right_0_nextRel(_to_right_0_next);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_0_nextRel {
		
			public Block_field_0_nextRel(Value _block_field_0_next) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_nextRel {
		
			public To_right_0_nextRel(Value _to_right_0_next) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class PushBlockRightMask extends NeoMask {
		public PushBlockRightMask setNext(Long value) {
			nodeMask.put("next", value);
			return this;
		}
		public PushBlockRightMask setNextEndPos(boolean value) {
			attributeMask.put("next.endPos", value);
			return this;
		}
		public PushBlockRightMask setNextEname(String value) {
			attributeMask.put("next.ename", value);
			return this;
		}
		public PushBlockRightMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public PushBlockRightMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public PushBlockRightMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public PushBlockRightMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public PushBlockRightMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public PushBlockRightMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public PushBlockRightMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public PushBlockRightMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public PushBlockRightMask setBlock(Long value) {
			nodeMask.put("block", value);
			return this;
		}
		public PushBlockRightMask setBlockEname(String value) {
			attributeMask.put("block.ename", value);
			return this;
		}
		public PushBlockRightMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public PushBlockRightMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public PushBlockRightMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public PushBlockRightMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public PushBlockRightMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public PushBlockRightMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public PushBlockRightMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public PushBlockRightMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.73
	public MoveSokobanLeftAccess getRule_MoveSokobanLeft() {
		return new MoveSokobanLeftAccess();
	}
	
	public class MoveSokobanLeftAccess extends NeoRuleCoAccess<MoveSokobanLeftData, MoveSokobanLeftCoData, MoveSokobanLeftMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(73);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanLeftData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanLeftData(d));
		}
			
		@Override
		public Stream<MoveSokobanLeftCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanLeftCoData(d));
		}
		
		@Override
		public MoveSokobanLeftMask mask() {
			return new MoveSokobanLeftMask();
		}
	}
	
	public class MoveSokobanLeftData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_right_0_fromRel _to_right_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanLeftData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_from = data.get("to_right_0_from");
			this._to_right_0_from = new To_right_0_fromRel(_to_right_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_fromRel {
		
			public To_right_0_fromRel(Value _to_right_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanLeftCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_right_0_fromRel _to_right_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanLeftCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_from = data.get("to_right_0_from");
			this._to_right_0_from = new To_right_0_fromRel(_to_right_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_fromRel {
		
			public To_right_0_fromRel(Value _to_right_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanLeftMask extends NeoMask {
		public MoveSokobanLeftMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanLeftMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanLeftMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanLeftMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanLeftMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanLeftMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanLeftMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanLeftMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanLeftMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanLeftMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanLeftMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanLeftMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanLeftMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanLeftMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanLeftMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanLeftMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.74
	public MoveSokobanLeftWithConditionAccess getRule_MoveSokobanLeftWithCondition() {
		return new MoveSokobanLeftWithConditionAccess();
	}
	
	public class MoveSokobanLeftWithConditionAccess extends NeoRuleCoAccess<MoveSokobanLeftWithConditionData, MoveSokobanLeftWithConditionCoData, MoveSokobanLeftWithConditionMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(74);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanLeftWithConditionData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanLeftWithConditionData(d));
		}
			
		@Override
		public Stream<MoveSokobanLeftWithConditionCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanLeftWithConditionCoData(d));
		}
		
		@Override
		public MoveSokobanLeftWithConditionMask mask() {
			return new MoveSokobanLeftWithConditionMask();
		}
	}
	
	public class MoveSokobanLeftWithConditionData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_right_0_fromRel _to_right_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanLeftWithConditionData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_from = data.get("to_right_0_from");
			this._to_right_0_from = new To_right_0_fromRel(_to_right_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_fromRel {
		
			public To_right_0_fromRel(Value _to_right_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanLeftWithConditionCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_right_0_fromRel _to_right_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanLeftWithConditionCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_from = data.get("to_right_0_from");
			this._to_right_0_from = new To_right_0_fromRel(_to_right_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_fromRel {
		
			public To_right_0_fromRel(Value _to_right_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanLeftWithConditionMask extends NeoMask {
		public MoveSokobanLeftWithConditionMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanLeftWithConditionMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.75
	public PushBlockLeftAccess getRule_PushBlockLeft() {
		return new PushBlockLeftAccess();
	}
	
	public class PushBlockLeftAccess extends NeoRuleCoAccess<PushBlockLeftData, PushBlockLeftCoData, PushBlockLeftMask> {
		public final String _next = "next";
		public final String _b = "b";
		public final String _block = "block";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(75);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<PushBlockLeftData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockLeftData(d));
		}
			
		@Override
		public Stream<PushBlockLeftCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PushBlockLeftCoData(d));
		}
		
		@Override
		public PushBlockLeftMask mask() {
			return new PushBlockLeftMask();
		}
	}
	
	public class PushBlockLeftData extends NeoData {
		public final NextNode _next;
		public final Next_right_0_toRel _next_right_0_to;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_1_toRel _block_field_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_right_0_fromRel _to_right_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public PushBlockLeftData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _next_right_0_to = data.get("next_right_0_to");
			this._next_right_0_to = new Next_right_0_toRel(_next_right_0_to);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_1_to = data.get("block_field_1_to");
			this._block_field_1_to = new Block_field_1_toRel(_block_field_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_from = data.get("to_right_0_from");
			this._to_right_0_from = new To_right_0_fromRel(_to_right_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class Next_right_0_toRel {
		
			public Next_right_0_toRel(Value _next_right_0_to) {
			}
		}
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_1_toRel {
		
			public Block_field_1_toRel(Value _block_field_1_to) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_fromRel {
		
			public To_right_0_fromRel(Value _to_right_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class PushBlockLeftCoData extends NeoData {
		public final NextNode _next;
		public final Next_right_0_toRel _next_right_0_to;
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final BlockNode _block;
		public final Block_field_0_nextRel _block_field_0_next;
		public final FromNode _from;
		public final ToNode _to;
		public final To_right_0_fromRel _to_right_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public PushBlockLeftCoData(Record data) {
			var _next = data.get("next");
			this._next = new NextNode(_next);
			var _next_right_0_to = data.get("next_right_0_to");
			this._next_right_0_to = new Next_right_0_toRel(_next_right_0_to);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_0_next = data.get("block_field_0_next");
			this._block_field_0_next = new Block_field_0_nextRel(_block_field_0_next);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_right_0_from = data.get("to_right_0_from");
			this._to_right_0_from = new To_right_0_fromRel(_to_right_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class NextNode {
			public boolean _endPos;
			public String _ename;
			
			public NextNode(Value _next) {
				if(!_next.get("endPos").isNull())
					this._endPos = _next.get("endPos").asBoolean();
				if(!_next.get("ename").isNull())
					this._ename = _next.get("ename").asString();
			}
		}
		
		public class Next_right_0_toRel {
		
			public Next_right_0_toRel(Value _next_right_0_to) {
			}
		}
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_0_nextRel {
		
			public Block_field_0_nextRel(Value _block_field_0_next) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_right_0_fromRel {
		
			public To_right_0_fromRel(Value _to_right_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class PushBlockLeftMask extends NeoMask {
		public PushBlockLeftMask setNext(Long value) {
			nodeMask.put("next", value);
			return this;
		}
		public PushBlockLeftMask setNextEndPos(boolean value) {
			attributeMask.put("next.endPos", value);
			return this;
		}
		public PushBlockLeftMask setNextEname(String value) {
			attributeMask.put("next.ename", value);
			return this;
		}
		public PushBlockLeftMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public PushBlockLeftMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public PushBlockLeftMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public PushBlockLeftMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public PushBlockLeftMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public PushBlockLeftMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public PushBlockLeftMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public PushBlockLeftMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public PushBlockLeftMask setBlock(Long value) {
			nodeMask.put("block", value);
			return this;
		}
		public PushBlockLeftMask setBlockEname(String value) {
			attributeMask.put("block.ename", value);
			return this;
		}
		public PushBlockLeftMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public PushBlockLeftMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public PushBlockLeftMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public PushBlockLeftMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public PushBlockLeftMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public PushBlockLeftMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public PushBlockLeftMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public PushBlockLeftMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.76
	public ForTestOnlyMoveSokobanDownAndNewNodesAccess getRule_ForTestOnlyMoveSokobanDownAndNewNodes() {
		return new ForTestOnlyMoveSokobanDownAndNewNodesAccess();
	}
	
	public class ForTestOnlyMoveSokobanDownAndNewNodesAccess extends NeoRuleCoAccess<ForTestOnlyMoveSokobanDownAndNewNodesData, ForTestOnlyMoveSokobanDownAndNewNodesCoData, ForTestOnlyMoveSokobanDownAndNewNodesMask> {
		public final String _b = "b";
		public final String _next2 = "next2";
		public final String _from = "from";
		public final String _to = "to";
		public final String _f1 = "f1";
		public final String _next3 = "next3";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(76);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ForTestOnlyMoveSokobanDownAndNewNodesData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ForTestOnlyMoveSokobanDownAndNewNodesData(d));
		}
			
		@Override
		public Stream<ForTestOnlyMoveSokobanDownAndNewNodesCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ForTestOnlyMoveSokobanDownAndNewNodesCoData(d));
		}
		
		@Override
		public ForTestOnlyMoveSokobanDownAndNewNodesMask mask() {
			return new ForTestOnlyMoveSokobanDownAndNewNodesMask();
		}
	}
	
	public class ForTestOnlyMoveSokobanDownAndNewNodesData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public ForTestOnlyMoveSokobanDownAndNewNodesData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class ForTestOnlyMoveSokobanDownAndNewNodesCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final Next2Node _next2;
		public final Next2_field_0_f1Rel _next2_field_0_f1;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final F1Node _f1;
		public final F1_right_0_fromRel _f1_right_0_from;
		public final Next3Node _next3;
		public final Next3_field_0_fromRel _next3_field_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public ForTestOnlyMoveSokobanDownAndNewNodesCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _next2 = data.get("next2");
			this._next2 = new Next2Node(_next2);
			var _next2_field_0_f1 = data.get("next2_field_0_f1");
			this._next2_field_0_f1 = new Next2_field_0_f1Rel(_next2_field_0_f1);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f1_right_0_from = data.get("f1_right_0_from");
			this._f1_right_0_from = new F1_right_0_fromRel(_f1_right_0_from);
			var _next3 = data.get("next3");
			this._next3 = new Next3Node(_next3);
			var _next3_field_0_from = data.get("next3_field_0_from");
			this._next3_field_0_from = new Next3_field_0_fromRel(_next3_field_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class Next2Node {
			public String _ename;
			
			public Next2Node(Value _next2) {
				if(!_next2.get("ename").isNull())
					this._ename = _next2.get("ename").asString();
			}
		}
		
		public class Next2_field_0_f1Rel {
		
			public Next2_field_0_f1Rel(Value _next2_field_0_f1) {
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F1_right_0_fromRel {
		
			public F1_right_0_fromRel(Value _f1_right_0_from) {
			}
		}
		public class Next3Node {
			public String _ename;
			
			public Next3Node(Value _next3) {
				if(!_next3.get("ename").isNull())
					this._ename = _next3.get("ename").asString();
			}
		}
		
		public class Next3_field_0_fromRel {
		
			public Next3_field_0_fromRel(Value _next3_field_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class ForTestOnlyMoveSokobanDownAndNewNodesMask extends NeoMask {
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setNext2(Long value) {
			nodeMask.put("next2", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setNext2Ename(String value) {
			attributeMask.put("next2.ename", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setNext3(Long value) {
			nodeMask.put("next3", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setNext3Ename(String value) {
			attributeMask.put("next3.ename", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public ForTestOnlyMoveSokobanDownAndNewNodesMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.77
	public MoveSokobanRightWhenForbidOccupiedFieldAccess getRule_MoveSokobanRightWhenForbidOccupiedField() {
		return new MoveSokobanRightWhenForbidOccupiedFieldAccess();
	}
	
	public class MoveSokobanRightWhenForbidOccupiedFieldAccess extends NeoRuleCoAccess<MoveSokobanRightWhenForbidOccupiedFieldData, MoveSokobanRightWhenForbidOccupiedFieldCoData, MoveSokobanRightWhenForbidOccupiedFieldMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		public final String _boulder = "boulder";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(77);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanRightWhenForbidOccupiedFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanRightWhenForbidOccupiedFieldData(d));
		}
			
		@Override
		public Stream<MoveSokobanRightWhenForbidOccupiedFieldCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanRightWhenForbidOccupiedFieldCoData(d));
		}
		
		@Override
		public MoveSokobanRightWhenForbidOccupiedFieldMask mask() {
			return new MoveSokobanRightWhenForbidOccupiedFieldMask();
		}
	}
	
	public class MoveSokobanRightWhenForbidOccupiedFieldData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanRightWhenForbidOccupiedFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanRightWhenForbidOccupiedFieldCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_right_0_toRel _from_right_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		public final BoulderNode _boulder;
		public final Boulder_field_0_fromRel _boulder_field_0_from;
		
		public MoveSokobanRightWhenForbidOccupiedFieldCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_right_0_to = data.get("from_right_0_to");
			this._from_right_0_to = new From_right_0_toRel(_from_right_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
			var _boulder = data.get("boulder");
			this._boulder = new BoulderNode(_boulder);
			var _boulder_field_0_from = data.get("boulder_field_0_from");
			this._boulder_field_0_from = new Boulder_field_0_fromRel(_boulder_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_right_0_toRel {
		
			public From_right_0_toRel(Value _from_right_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
		public class BoulderNode {
			public String _ename;
			
			public BoulderNode(Value _boulder) {
				if(!_boulder.get("ename").isNull())
					this._ename = _boulder.get("ename").asString();
			}
		}
		
		public class Boulder_field_0_fromRel {
		
			public Boulder_field_0_fromRel(Value _boulder_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanRightWhenForbidOccupiedFieldMask extends NeoMask {
		public MoveSokobanRightWhenForbidOccupiedFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setBoulder(Long value) {
			nodeMask.put("boulder", value);
			return this;
		}
		public MoveSokobanRightWhenForbidOccupiedFieldMask setBoulderEname(String value) {
			attributeMask.put("boulder.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.78
	public ForTestOnlymoveSokobanDownWithConditionAndNewNodesAccess getRule_ForTestOnlymoveSokobanDownWithConditionAndNewNodes() {
		return new ForTestOnlymoveSokobanDownWithConditionAndNewNodesAccess();
	}
	
	public class ForTestOnlymoveSokobanDownWithConditionAndNewNodesAccess extends NeoRuleCoAccess<ForTestOnlymoveSokobanDownWithConditionAndNewNodesData, ForTestOnlymoveSokobanDownWithConditionAndNewNodesCoData, ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(78);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ForTestOnlymoveSokobanDownWithConditionAndNewNodesData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ForTestOnlymoveSokobanDownWithConditionAndNewNodesData(d));
		}
			
		@Override
		public Stream<ForTestOnlymoveSokobanDownWithConditionAndNewNodesCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ForTestOnlymoveSokobanDownWithConditionAndNewNodesCoData(d));
		}
		
		@Override
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask mask() {
			return new ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask();
		}
	}
	
	public class ForTestOnlymoveSokobanDownWithConditionAndNewNodesData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class ForTestOnlymoveSokobanDownWithConditionAndNewNodesCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask extends NeoMask {
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public ForTestOnlymoveSokobanDownWithConditionAndNewNodesMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.79
	public OneFieldAccess getPattern_OneField() {
		return new OneFieldAccess();
	}
	
	public class OneFieldAccess extends NeoPatternAccess<OneFieldData, OneFieldMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(79);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldData(d));
		}
		
		@Override
		public OneFieldMask mask() {
			return new OneFieldMask();
		}
	}
	
	public class OneFieldData extends NeoData {
		public final FNode _f;
		
		public OneFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldMask extends NeoMask {
		public OneFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.80
	public OneFieldNegAccess getPattern_OneFieldNeg() {
		return new OneFieldNegAccess();
	}
	
	public class OneFieldNegAccess extends NeoPatternAccess<OneFieldNegData, OneFieldNegMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(80);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldNegData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldNegData(d));
		}
		
		@Override
		public OneFieldNegMask mask() {
			return new OneFieldNegMask();
		}
	}
	
	public class OneFieldNegData extends NeoData {
		public final FNode _f;
		
		public OneFieldNegData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldNegMask extends NeoMask {
		public OneFieldNegMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldNegMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldNegMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.81
	public OneFieldEnforceTwoAccess getPattern_OneFieldEnforceTwo() {
		return new OneFieldEnforceTwoAccess();
	}
	
	public class OneFieldEnforceTwoAccess extends NeoPatternAccess<OneFieldEnforceTwoData, OneFieldEnforceTwoMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(81);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldEnforceTwoData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldEnforceTwoData(d));
		}
		
		@Override
		public OneFieldEnforceTwoMask mask() {
			return new OneFieldEnforceTwoMask();
		}
	}
	
	public class OneFieldEnforceTwoData extends NeoData {
		public final FNode _f;
		
		public OneFieldEnforceTwoData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldEnforceTwoMask extends NeoMask {
		public OneFieldEnforceTwoMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldEnforceTwoMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldEnforceTwoMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.82
	public OneFieldForbidTwoAccess getPattern_OneFieldForbidTwo() {
		return new OneFieldForbidTwoAccess();
	}
	
	public class OneFieldForbidTwoAccess extends NeoPatternAccess<OneFieldForbidTwoData, OneFieldForbidTwoMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(82);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldForbidTwoData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldForbidTwoData(d));
		}
		
		@Override
		public OneFieldForbidTwoMask mask() {
			return new OneFieldForbidTwoMask();
		}
	}
	
	public class OneFieldForbidTwoData extends NeoData {
		public final FNode _f;
		
		public OneFieldForbidTwoData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldForbidTwoMask extends NeoMask {
		public OneFieldForbidTwoMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldForbidTwoMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldForbidTwoMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.83
	public TwoFieldAccess getPattern_TwoField() {
		return new TwoFieldAccess();
	}
	
	public class TwoFieldAccess extends NeoPatternAccess<TwoFieldData, TwoFieldMask> {
		public final String _f = "f";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(83);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoFieldData(d));
		}
		
		@Override
		public TwoFieldMask mask() {
			return new TwoFieldMask();
		}
	}
	
	public class TwoFieldData extends NeoData {
		public final FNode _f;
		public final F2Node _f2;
		
		public TwoFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class TwoFieldMask extends NeoMask {
		public TwoFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TwoFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public TwoFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public TwoFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public TwoFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public TwoFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.84
	public FourFieldAccess getPattern_FourField() {
		return new FourFieldAccess();
	}
	
	public class FourFieldAccess extends NeoPatternAccess<FourFieldData, FourFieldMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		public final String _f3 = "f3";
		public final String _f4 = "f4";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(84);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FourFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FourFieldData(d));
		}
		
		@Override
		public FourFieldMask mask() {
			return new FourFieldMask();
		}
	}
	
	public class FourFieldData extends NeoData {
		public final F1Node _f1;
		public final F2Node _f2;
		public final F3Node _f3;
		public final F4Node _f4;
		
		public FourFieldData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
			var _f3 = data.get("f3");
			this._f3 = new F3Node(_f3);
			var _f4 = data.get("f4");
			this._f4 = new F4Node(_f4);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
		public class F3Node {
			public boolean _endPos;
			public String _ename;
			
			public F3Node(Value _f3) {
				if(!_f3.get("endPos").isNull())
					this._endPos = _f3.get("endPos").asBoolean();
				if(!_f3.get("ename").isNull())
					this._ename = _f3.get("ename").asString();
			}
		}
		
		public class F4Node {
			public boolean _endPos;
			public String _ename;
			
			public F4Node(Value _f4) {
				if(!_f4.get("endPos").isNull())
					this._endPos = _f4.get("endPos").asBoolean();
				if(!_f4.get("ename").isNull())
					this._ename = _f4.get("ename").asString();
			}
		}
		
	}
	
	public class FourFieldMask extends NeoMask {
		public FourFieldMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public FourFieldMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public FourFieldMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public FourFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public FourFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public FourFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
		public FourFieldMask setF3(Long value) {
			nodeMask.put("f3", value);
			return this;
		}
		public FourFieldMask setF3EndPos(boolean value) {
			attributeMask.put("f3.endPos", value);
			return this;
		}
		public FourFieldMask setF3Ename(String value) {
			attributeMask.put("f3.ename", value);
			return this;
		}
		public FourFieldMask setF4(Long value) {
			nodeMask.put("f4", value);
			return this;
		}
		public FourFieldMask setF4EndPos(boolean value) {
			attributeMask.put("f4.endPos", value);
			return this;
		}
		public FourFieldMask setF4Ename(String value) {
			attributeMask.put("f4.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.85
	public OneTwoFieldAccess getPattern_OneTwoField() {
		return new OneTwoFieldAccess();
	}
	
	public class OneTwoFieldAccess extends NeoPatternAccess<OneTwoFieldData, OneTwoFieldMask> {
		public final String _f = "f";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(85);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneTwoFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneTwoFieldData(d));
		}
		
		@Override
		public OneTwoFieldMask mask() {
			return new OneTwoFieldMask();
		}
	}
	
	public class OneTwoFieldData extends NeoData {
		public final FNode _f;
		public final F_bottom_0_f2Rel _f_bottom_0_f2;
		public final F2Node _f2;
		
		public OneTwoFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_bottom_0_f2 = data.get("f_bottom_0_f2");
			this._f_bottom_0_f2 = new F_bottom_0_f2Rel(_f_bottom_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_bottom_0_f2Rel {
		
			public F_bottom_0_f2Rel(Value _f_bottom_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class OneTwoFieldMask extends NeoMask {
		public OneTwoFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneTwoFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneTwoFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public OneTwoFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public OneTwoFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public OneTwoFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.86
	public OneFieldHasBottomAndRightAccess getPattern_OneFieldHasBottomAndRight() {
		return new OneFieldHasBottomAndRightAccess();
	}
	
	public class OneFieldHasBottomAndRightAccess extends NeoPatternAccess<OneFieldHasBottomAndRightData, OneFieldHasBottomAndRightMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(86);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldHasBottomAndRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldHasBottomAndRightData(d));
		}
		
		@Override
		public OneFieldHasBottomAndRightMask mask() {
			return new OneFieldHasBottomAndRightMask();
		}
	}
	
	public class OneFieldHasBottomAndRightData extends NeoData {
		public final FNode _f;
		
		public OneFieldHasBottomAndRightData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldHasBottomAndRightMask extends NeoMask {
		public OneFieldHasBottomAndRightMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldHasBottomAndRightMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldHasBottomAndRightMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.87
	public OneFieldHasNoBottomOrNoRightAccess getPattern_OneFieldHasNoBottomOrNoRight() {
		return new OneFieldHasNoBottomOrNoRightAccess();
	}
	
	public class OneFieldHasNoBottomOrNoRightAccess extends NeoPatternAccess<OneFieldHasNoBottomOrNoRightData, OneFieldHasNoBottomOrNoRightMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(87);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldHasNoBottomOrNoRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldHasNoBottomOrNoRightData(d));
		}
		
		@Override
		public OneFieldHasNoBottomOrNoRightMask mask() {
			return new OneFieldHasNoBottomOrNoRightMask();
		}
	}
	
	public class OneFieldHasNoBottomOrNoRightData extends NeoData {
		public final FNode _f;
		
		public OneFieldHasNoBottomOrNoRightData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldHasNoBottomOrNoRightMask extends NeoMask {
		public OneFieldHasNoBottomOrNoRightMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldHasNoBottomOrNoRightMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldHasNoBottomOrNoRightMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.88
	public OneFieldHasBottomAndNoRightAccess getPattern_OneFieldHasBottomAndNoRight() {
		return new OneFieldHasBottomAndNoRightAccess();
	}
	
	public class OneFieldHasBottomAndNoRightAccess extends NeoPatternAccess<OneFieldHasBottomAndNoRightData, OneFieldHasBottomAndNoRightMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(88);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldHasBottomAndNoRightData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldHasBottomAndNoRightData(d));
		}
		
		@Override
		public OneFieldHasBottomAndNoRightMask mask() {
			return new OneFieldHasBottomAndNoRightMask();
		}
	}
	
	public class OneFieldHasBottomAndNoRightData extends NeoData {
		public final FNode _f;
		
		public OneFieldHasBottomAndNoRightData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldHasBottomAndNoRightMask extends NeoMask {
		public OneFieldHasBottomAndNoRightMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldHasBottomAndNoRightMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldHasBottomAndNoRightMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.89
	public NeighborRightFieldAccess getPattern_NeighborRightField() {
		return new NeighborRightFieldAccess();
	}
	
	public class NeighborRightFieldAccess extends NeoPatternAccess<NeighborRightFieldData, NeighborRightFieldMask> {
		public final String _f = "f";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(89);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NeighborRightFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NeighborRightFieldData(d));
		}
		
		@Override
		public NeighborRightFieldMask mask() {
			return new NeighborRightFieldMask();
		}
	}
	
	public class NeighborRightFieldData extends NeoData {
		public final FNode _f;
		public final F_right_0_f2Rel _f_right_0_f2;
		public final F2Node _f2;
		
		public NeighborRightFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_f2 = data.get("f_right_0_f2");
			this._f_right_0_f2 = new F_right_0_f2Rel(_f_right_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_f2Rel {
		
			public F_right_0_f2Rel(Value _f_right_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class NeighborRightFieldMask extends NeoMask {
		public NeighborRightFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public NeighborRightFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public NeighborRightFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public NeighborRightFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public NeighborRightFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public NeighborRightFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.90
	public NeighborBottomFieldAccess getPattern_NeighborBottomField() {
		return new NeighborBottomFieldAccess();
	}
	
	public class NeighborBottomFieldAccess extends NeoPatternAccess<NeighborBottomFieldData, NeighborBottomFieldMask> {
		public final String _f = "f";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(90);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NeighborBottomFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NeighborBottomFieldData(d));
		}
		
		@Override
		public NeighborBottomFieldMask mask() {
			return new NeighborBottomFieldMask();
		}
	}
	
	public class NeighborBottomFieldData extends NeoData {
		public final FNode _f;
		public final F_bottom_0_f2Rel _f_bottom_0_f2;
		public final F2Node _f2;
		
		public NeighborBottomFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_bottom_0_f2 = data.get("f_bottom_0_f2");
			this._f_bottom_0_f2 = new F_bottom_0_f2Rel(_f_bottom_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_bottom_0_f2Rel {
		
			public F_bottom_0_f2Rel(Value _f_bottom_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class NeighborBottomFieldMask extends NeoMask {
		public NeighborBottomFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public NeighborBottomFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public NeighborBottomFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public NeighborBottomFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public NeighborBottomFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public NeighborBottomFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.91
	public NeighborRightField2Access getPattern_NeighborRightField2() {
		return new NeighborRightField2Access();
	}
	
	public class NeighborRightField2Access extends NeoPatternAccess<NeighborRightField2Data, NeighborRightField2Mask> {
		public final String _f = "f";
		public final String _f3 = "f3";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(91);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NeighborRightField2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NeighborRightField2Data(d));
		}
		
		@Override
		public NeighborRightField2Mask mask() {
			return new NeighborRightField2Mask();
		}
	}
	
	public class NeighborRightField2Data extends NeoData {
		public final FNode _f;
		public final F_right_0_f3Rel _f_right_0_f3;
		public final F3Node _f3;
		
		public NeighborRightField2Data(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_f3 = data.get("f_right_0_f3");
			this._f_right_0_f3 = new F_right_0_f3Rel(_f_right_0_f3);
			var _f3 = data.get("f3");
			this._f3 = new F3Node(_f3);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_f3Rel {
		
			public F_right_0_f3Rel(Value _f_right_0_f3) {
			}
		}
		public class F3Node {
			public boolean _endPos;
			public String _ename;
			
			public F3Node(Value _f3) {
				if(!_f3.get("endPos").isNull())
					this._endPos = _f3.get("endPos").asBoolean();
				if(!_f3.get("ename").isNull())
					this._ename = _f3.get("ename").asString();
			}
		}
		
	}
	
	public class NeighborRightField2Mask extends NeoMask {
		public NeighborRightField2Mask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public NeighborRightField2Mask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public NeighborRightField2Mask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public NeighborRightField2Mask setF3(Long value) {
			nodeMask.put("f3", value);
			return this;
		}
		public NeighborRightField2Mask setF3EndPos(boolean value) {
			attributeMask.put("f3.endPos", value);
			return this;
		}
		public NeighborRightField2Mask setF3Ename(String value) {
			attributeMask.put("f3.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.92
	public IConstraint getConstraint_HasRightField() {
		var c = (Constraint) spec.getEntities().get(92);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.93
	public IConstraint getConstraint_HasBottomField() {
		var c = (Constraint) spec.getEntities().get(93);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.94
	public IConstraint getConstraint_HasBottomAndRightField() {
		var c = (Constraint) spec.getEntities().get(94);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.95
	public IConstraint getConstraint_HasBottomAndNoRightField() {
		var c = (Constraint) spec.getEntities().get(95);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.96
	public IConstraint getConstraint_TwoConnFields() {
		var c = (Constraint) spec.getEntities().get(96);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.97
	public IConstraint getConstraint_IfTwoThenConn() {
		var c = (Constraint) spec.getEntities().get(97);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.98
	public IConstraint getConstraint_IfBottomThenRight() {
		var c = (Constraint) spec.getEntities().get(98);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.99
	public IConstraint getConstraint_HasRightIfThen() {
		var c = (Constraint) spec.getEntities().get(99);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.100
	public SokOnFieldAccess getPattern_SokOnField() {
		return new SokOnFieldAccess();
	}
	
	public class SokOnFieldAccess extends NeoPatternAccess<SokOnFieldData, SokOnFieldMask> {
		public final String _sok = "sok";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(100);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SokOnFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SokOnFieldData(d));
		}
		
		@Override
		public SokOnFieldMask mask() {
			return new SokOnFieldMask();
		}
	}
	
	public class SokOnFieldData extends NeoData {
		public final SokNode _sok;
		public final Sok_field_0_fRel _sok_field_0_f;
		public final FNode _f;
		
		public SokOnFieldData(Record data) {
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_f = data.get("sok_field_0_f");
			this._sok_field_0_f = new Sok_field_0_fRel(_sok_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fRel {
		
			public Sok_field_0_fRel(Value _sok_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SokOnFieldMask extends NeoMask {
		public SokOnFieldMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public SokOnFieldMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
		public SokOnFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SokOnFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SokOnFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.101
	public BlockOnFieldAccess getPattern_BlockOnField() {
		return new BlockOnFieldAccess();
	}
	
	public class BlockOnFieldAccess extends NeoPatternAccess<BlockOnFieldData, BlockOnFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(101);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BlockOnFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BlockOnFieldData(d));
		}
		
		@Override
		public BlockOnFieldMask mask() {
			return new BlockOnFieldMask();
		}
	}
	
	public class BlockOnFieldData extends NeoData {
		public final BNode _b;
		public final B_field_0_fRel _b_field_0_f;
		public final FNode _f;
		
		public BlockOnFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_field_0_f = data.get("b_field_0_f");
			this._b_field_0_f = new B_field_0_fRel(_b_field_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_field_0_fRel {
		
			public B_field_0_fRel(Value _b_field_0_f) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class BlockOnFieldMask extends NeoMask {
		public BlockOnFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public BlockOnFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public BlockOnFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public BlockOnFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public BlockOnFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.102
	public IConstraint getConstraint_SokOnFieldThenBlockOnField() {
		var c = (Constraint) spec.getEntities().get(102);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.103
	public MoveSokobanDownTestAccess getRule_MoveSokobanDownTest() {
		return new MoveSokobanDownTestAccess();
	}
	
	public class MoveSokobanDownTestAccess extends NeoRuleCoAccess<MoveSokobanDownTestData, MoveSokobanDownTestCoData, MoveSokobanDownTestMask> {
		public final String _b = "b";
		public final String _from = "from";
		public final String _to = "to";
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(103);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveSokobanDownTestData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanDownTestData(d));
		}
			
		@Override
		public Stream<MoveSokobanDownTestCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveSokobanDownTestCoData(d));
		}
		
		@Override
		public MoveSokobanDownTestMask mask() {
			return new MoveSokobanDownTestMask();
		}
	}
	
	public class MoveSokobanDownTestData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_0_fromRel _sok_field_0_from;
		
		public MoveSokobanDownTestData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_from = data.get("sok_field_0_from");
			this._sok_field_0_from = new Sok_field_0_fromRel(_sok_field_0_from);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fromRel {
		
			public Sok_field_0_fromRel(Value _sok_field_0_from) {
			}
		}
	}
	
	public class MoveSokobanDownTestCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fromRel _b_fields_0_from;
		public final B_fields_1_toRel _b_fields_1_to;
		public final FromNode _from;
		public final ToNode _to;
		public final To_bottom_0_fromRel _to_bottom_0_from;
		public final SokNode _sok;
		public final Sok_field_1_toRel _sok_field_1_to;
		
		public MoveSokobanDownTestCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_from = data.get("b_fields_0_from");
			this._b_fields_0_from = new B_fields_0_fromRel(_b_fields_0_from);
			var _b_fields_1_to = data.get("b_fields_1_to");
			this._b_fields_1_to = new B_fields_1_toRel(_b_fields_1_to);
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _to = data.get("to");
			this._to = new ToNode(_to);
			var _to_bottom_0_from = data.get("to_bottom_0_from");
			this._to_bottom_0_from = new To_bottom_0_fromRel(_to_bottom_0_from);
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_1_to = data.get("sok_field_1_to");
			this._sok_field_1_to = new Sok_field_1_toRel(_sok_field_1_to);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fromRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fromRel(Value _b_fields_0_from) {
				if(!_b_fields_0_from.get("row").isNull())
					this._row = _b_fields_0_from.get("row").asInt();
				if(!_b_fields_0_from.get("col").isNull())
					this._col = _b_fields_0_from.get("col").asInt();
			}
		}
		public class B_fields_1_toRel {
			public int _row;
			public int _col;
		
			public B_fields_1_toRel(Value _b_fields_1_to) {
				if(!_b_fields_1_to.get("row").isNull())
					this._row = _b_fields_1_to.get("row").asInt();
				if(!_b_fields_1_to.get("col").isNull())
					this._col = _b_fields_1_to.get("col").asInt();
			}
		}
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
		public class To_bottom_0_fromRel {
		
			public To_bottom_0_fromRel(Value _to_bottom_0_from) {
			}
		}
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_1_toRel {
		
			public Sok_field_1_toRel(Value _sok_field_1_to) {
			}
		}
	}
	
	public class MoveSokobanDownTestMask extends NeoMask {
		public MoveSokobanDownTestMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public MoveSokobanDownTestMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public MoveSokobanDownTestMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public MoveSokobanDownTestMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public MoveSokobanDownTestMask setB_fields_0_fromRow(int value) {
			attributeMask.put("b_fields_0_from.row", value);
			return this;
		}
		public MoveSokobanDownTestMask setB_fields_0_fromCol(int value) {
			attributeMask.put("b_fields_0_from.col", value);
			return this;
		}
		public MoveSokobanDownTestMask setB_fields_1_toRow(int value) {
			attributeMask.put("b_fields_1_to.row", value);
			return this;
		}
		public MoveSokobanDownTestMask setB_fields_1_toCol(int value) {
			attributeMask.put("b_fields_1_to.col", value);
			return this;
		}
		public MoveSokobanDownTestMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public MoveSokobanDownTestMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public MoveSokobanDownTestMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public MoveSokobanDownTestMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public MoveSokobanDownTestMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public MoveSokobanDownTestMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
		public MoveSokobanDownTestMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public MoveSokobanDownTestMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.104
	public ByOwnColourOccupiedFieldAccess getPattern_ByOwnColourOccupiedField() {
		return new ByOwnColourOccupiedFieldAccess();
	}
	
	public class ByOwnColourOccupiedFieldAccess extends NeoPatternAccess<ByOwnColourOccupiedFieldData, ByOwnColourOccupiedFieldMask> {
		public final String _blockingFig = "blockingFig";
		public final String _fig = "fig";
		public final String _to = "to";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(104);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ByOwnColourOccupiedFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ByOwnColourOccupiedFieldData(d));
		}
		
		@Override
		public ByOwnColourOccupiedFieldMask mask() {
			return new ByOwnColourOccupiedFieldMask();
		}
	}
	
	public class ByOwnColourOccupiedFieldData extends NeoData {
		public final BlockingFigNode _blockingFig;
		public final BlockingFig_field_0_toRel _blockingFig_field_0_to;
		public final FigNode _fig;
		public final ToNode _to;
		
		public ByOwnColourOccupiedFieldData(Record data) {
			var _blockingFig = data.get("blockingFig");
			this._blockingFig = new BlockingFigNode(_blockingFig);
			var _blockingFig_field_0_to = data.get("blockingFig_field_0_to");
			this._blockingFig_field_0_to = new BlockingFig_field_0_toRel(_blockingFig_field_0_to);
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
			var _to = data.get("to");
			this._to = new ToNode(_to);
		}
		
		
		public class BlockingFigNode {
			public String _ename;
			
			public BlockingFigNode(Value _blockingFig) {
				if(!_blockingFig.get("ename").isNull())
					this._ename = _blockingFig.get("ename").asString();
			}
		}
		
		public class BlockingFig_field_0_toRel {
		
			public BlockingFig_field_0_toRel(Value _blockingFig_field_0_to) {
			}
		}
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
	}
	
	public class ByOwnColourOccupiedFieldMask extends NeoMask {
		public ByOwnColourOccupiedFieldMask setBlockingFig(Long value) {
			nodeMask.put("blockingFig", value);
			return this;
		}
		public ByOwnColourOccupiedFieldMask setBlockingFigEname(String value) {
			attributeMask.put("blockingFig.ename", value);
			return this;
		}
		public ByOwnColourOccupiedFieldMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public ByOwnColourOccupiedFieldMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
		public ByOwnColourOccupiedFieldMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public ByOwnColourOccupiedFieldMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public ByOwnColourOccupiedFieldMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.105
	public PatternMoveSokobanDownTestAccess getPattern_PatternMoveSokobanDownTest() {
		return new PatternMoveSokobanDownTestAccess();
	}
	
	public class PatternMoveSokobanDownTestAccess extends NeoPatternAccess<PatternMoveSokobanDownTestData, PatternMoveSokobanDownTestMask> {
		public final String _from = "from";
		public final String _to = "to";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(105);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<PatternMoveSokobanDownTestData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PatternMoveSokobanDownTestData(d));
		}
		
		@Override
		public PatternMoveSokobanDownTestMask mask() {
			return new PatternMoveSokobanDownTestMask();
		}
	}
	
	public class PatternMoveSokobanDownTestData extends NeoData {
		public final FromNode _from;
		public final From_bottom_0_toRel _from_bottom_0_to;
		public final ToNode _to;
		
		public PatternMoveSokobanDownTestData(Record data) {
			var _from = data.get("from");
			this._from = new FromNode(_from);
			var _from_bottom_0_to = data.get("from_bottom_0_to");
			this._from_bottom_0_to = new From_bottom_0_toRel(_from_bottom_0_to);
			var _to = data.get("to");
			this._to = new ToNode(_to);
		}
		
		
		public class FromNode {
			public boolean _endPos;
			public String _ename;
			
			public FromNode(Value _from) {
				if(!_from.get("endPos").isNull())
					this._endPos = _from.get("endPos").asBoolean();
				if(!_from.get("ename").isNull())
					this._ename = _from.get("ename").asString();
			}
		}
		
		public class From_bottom_0_toRel {
		
			public From_bottom_0_toRel(Value _from_bottom_0_to) {
			}
		}
		public class ToNode {
			public boolean _endPos;
			public String _ename;
			
			public ToNode(Value _to) {
				if(!_to.get("endPos").isNull())
					this._endPos = _to.get("endPos").asBoolean();
				if(!_to.get("ename").isNull())
					this._ename = _to.get("ename").asString();
			}
		}
		
	}
	
	public class PatternMoveSokobanDownTestMask extends NeoMask {
		public PatternMoveSokobanDownTestMask setFrom(Long value) {
			nodeMask.put("from", value);
			return this;
		}
		public PatternMoveSokobanDownTestMask setFromEndPos(boolean value) {
			attributeMask.put("from.endPos", value);
			return this;
		}
		public PatternMoveSokobanDownTestMask setFromEname(String value) {
			attributeMask.put("from.ename", value);
			return this;
		}
		public PatternMoveSokobanDownTestMask setTo(Long value) {
			nodeMask.put("to", value);
			return this;
		}
		public PatternMoveSokobanDownTestMask setToEndPos(boolean value) {
			attributeMask.put("to.endPos", value);
			return this;
		}
		public PatternMoveSokobanDownTestMask setToEname(String value) {
			attributeMask.put("to.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.106
	public BoulderButNoBlockAccess getPattern_BoulderButNoBlock() {
		return new BoulderButNoBlockAccess();
	}
	
	public class BoulderButNoBlockAccess extends NeoPatternAccess<BoulderButNoBlockData, BoulderButNoBlockMask> {
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(106);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<BoulderButNoBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new BoulderButNoBlockData(d));
		}
		
		@Override
		public BoulderButNoBlockMask mask() {
			return new BoulderButNoBlockMask();
		}
	}
	
	public class BoulderButNoBlockData extends NeoData {
		public final FigNode _fig;
		
		public BoulderButNoBlockData(Record data) {
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
		}
		
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
	}
	
	public class BoulderButNoBlockMask extends NeoMask {
		public BoulderButNoBlockMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public BoulderButNoBlockMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.107
	public IsBlockAccess getPattern_IsBlock() {
		return new IsBlockAccess();
	}
	
	public class IsBlockAccess extends NeoPatternAccess<IsBlockData, IsBlockMask> {
		public final String _fig = "fig";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(107);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<IsBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IsBlockData(d));
		}
		
		@Override
		public IsBlockMask mask() {
			return new IsBlockMask();
		}
	}
	
	public class IsBlockData extends NeoData {
		public final FigNode _fig;
		
		public IsBlockData(Record data) {
			var _fig = data.get("fig");
			this._fig = new FigNode(_fig);
		}
		
		
		public class FigNode {
			public String _ename;
			
			public FigNode(Value _fig) {
				if(!_fig.get("ename").isNull())
					this._ename = _fig.get("ename").asString();
			}
		}
		
	}
	
	public class IsBlockMask extends NeoMask {
		public IsBlockMask setFig(Long value) {
			nodeMask.put("fig", value);
			return this;
		}
		public IsBlockMask setFigEname(String value) {
			attributeMask.put("fig.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.108
	public TwoBoulderButNoTwoBlockAccess getPattern_TwoBoulderButNoTwoBlock() {
		return new TwoBoulderButNoTwoBlockAccess();
	}
	
	public class TwoBoulderButNoTwoBlockAccess extends NeoPatternAccess<TwoBoulderButNoTwoBlockData, TwoBoulderButNoTwoBlockMask> {
		public final String _fig1 = "fig1";
		public final String _fig2 = "fig2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(108);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoBoulderButNoTwoBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoBoulderButNoTwoBlockData(d));
		}
		
		@Override
		public TwoBoulderButNoTwoBlockMask mask() {
			return new TwoBoulderButNoTwoBlockMask();
		}
	}
	
	public class TwoBoulderButNoTwoBlockData extends NeoData {
		public final Fig1Node _fig1;
		public final Fig2Node _fig2;
		
		public TwoBoulderButNoTwoBlockData(Record data) {
			var _fig1 = data.get("fig1");
			this._fig1 = new Fig1Node(_fig1);
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
		}
		
		
		public class Fig1Node {
			public String _ename;
			
			public Fig1Node(Value _fig1) {
				if(!_fig1.get("ename").isNull())
					this._ename = _fig1.get("ename").asString();
			}
		}
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
	}
	
	public class TwoBoulderButNoTwoBlockMask extends NeoMask {
		public TwoBoulderButNoTwoBlockMask setFig1(Long value) {
			nodeMask.put("fig1", value);
			return this;
		}
		public TwoBoulderButNoTwoBlockMask setFig1Ename(String value) {
			attributeMask.put("fig1.ename", value);
			return this;
		}
		public TwoBoulderButNoTwoBlockMask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public TwoBoulderButNoTwoBlockMask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.109
	public IsTwoBlockAccess getPattern_IsTwoBlock() {
		return new IsTwoBlockAccess();
	}
	
	public class IsTwoBlockAccess extends NeoPatternAccess<IsTwoBlockData, IsTwoBlockMask> {
		public final String _fig1 = "fig1";
		public final String _fig2 = "fig2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(109);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<IsTwoBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IsTwoBlockData(d));
		}
		
		@Override
		public IsTwoBlockMask mask() {
			return new IsTwoBlockMask();
		}
	}
	
	public class IsTwoBlockData extends NeoData {
		public final Fig1Node _fig1;
		public final Fig2Node _fig2;
		
		public IsTwoBlockData(Record data) {
			var _fig1 = data.get("fig1");
			this._fig1 = new Fig1Node(_fig1);
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
		}
		
		
		public class Fig1Node {
			public String _ename;
			
			public Fig1Node(Value _fig1) {
				if(!_fig1.get("ename").isNull())
					this._ename = _fig1.get("ename").asString();
			}
		}
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
	}
	
	public class IsTwoBlockMask extends NeoMask {
		public IsTwoBlockMask setFig1(Long value) {
			nodeMask.put("fig1", value);
			return this;
		}
		public IsTwoBlockMask setFig1Ename(String value) {
			attributeMask.put("fig1.ename", value);
			return this;
		}
		public IsTwoBlockMask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public IsTwoBlockMask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.110
	public IConstraint getConstraint_ForbidIsTwoBlock() {
		var c = (Constraint) spec.getEntities().get(110);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.111
	public TwoBoulderButTwoBlockAccess getPattern_TwoBoulderButTwoBlock() {
		return new TwoBoulderButTwoBlockAccess();
	}
	
	public class TwoBoulderButTwoBlockAccess extends NeoPatternAccess<TwoBoulderButTwoBlockData, TwoBoulderButTwoBlockMask> {
		public final String _fig1 = "fig1";
		public final String _fig2 = "fig2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(111);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoBoulderButTwoBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoBoulderButTwoBlockData(d));
		}
		
		@Override
		public TwoBoulderButTwoBlockMask mask() {
			return new TwoBoulderButTwoBlockMask();
		}
	}
	
	public class TwoBoulderButTwoBlockData extends NeoData {
		public final Fig1Node _fig1;
		public final Fig2Node _fig2;
		
		public TwoBoulderButTwoBlockData(Record data) {
			var _fig1 = data.get("fig1");
			this._fig1 = new Fig1Node(_fig1);
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
		}
		
		
		public class Fig1Node {
			public String _ename;
			
			public Fig1Node(Value _fig1) {
				if(!_fig1.get("ename").isNull())
					this._ename = _fig1.get("ename").asString();
			}
		}
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
	}
	
	public class TwoBoulderButTwoBlockMask extends NeoMask {
		public TwoBoulderButTwoBlockMask setFig1(Long value) {
			nodeMask.put("fig1", value);
			return this;
		}
		public TwoBoulderButTwoBlockMask setFig1Ename(String value) {
			attributeMask.put("fig1.ename", value);
			return this;
		}
		public TwoBoulderButTwoBlockMask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public TwoBoulderButTwoBlockMask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.112
	public OneBlock1Access getPattern_OneBlock1() {
		return new OneBlock1Access();
	}
	
	public class OneBlock1Access extends NeoPatternAccess<OneBlock1Data, OneBlock1Mask> {
		public final String _fig1 = "fig1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(112);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneBlock1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBlock1Data(d));
		}
		
		@Override
		public OneBlock1Mask mask() {
			return new OneBlock1Mask();
		}
	}
	
	public class OneBlock1Data extends NeoData {
		public final Fig1Node _fig1;
		
		public OneBlock1Data(Record data) {
			var _fig1 = data.get("fig1");
			this._fig1 = new Fig1Node(_fig1);
		}
		
		
		public class Fig1Node {
			public String _ename;
			
			public Fig1Node(Value _fig1) {
				if(!_fig1.get("ename").isNull())
					this._ename = _fig1.get("ename").asString();
			}
		}
		
	}
	
	public class OneBlock1Mask extends NeoMask {
		public OneBlock1Mask setFig1(Long value) {
			nodeMask.put("fig1", value);
			return this;
		}
		public OneBlock1Mask setFig1Ename(String value) {
			attributeMask.put("fig1.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.113
	public OneOtherBlock1Access getPattern_OneOtherBlock1() {
		return new OneOtherBlock1Access();
	}
	
	public class OneOtherBlock1Access extends NeoPatternAccess<OneOtherBlock1Data, OneOtherBlock1Mask> {
		public final String _fig2 = "fig2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(113);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneOtherBlock1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneOtherBlock1Data(d));
		}
		
		@Override
		public OneOtherBlock1Mask mask() {
			return new OneOtherBlock1Mask();
		}
	}
	
	public class OneOtherBlock1Data extends NeoData {
		public final Fig2Node _fig2;
		
		public OneOtherBlock1Data(Record data) {
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
		}
		
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
	}
	
	public class OneOtherBlock1Mask extends NeoMask {
		public OneOtherBlock1Mask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public OneOtherBlock1Mask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.114
	public OneBlock2Access getPattern_OneBlock2() {
		return new OneBlock2Access();
	}
	
	public class OneBlock2Access extends NeoPatternAccess<OneBlock2Data, OneBlock2Mask> {
		public final String _fig1 = "fig1";
		public final String _fig2 = "fig2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(114);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneBlock2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBlock2Data(d));
		}
		
		@Override
		public OneBlock2Mask mask() {
			return new OneBlock2Mask();
		}
	}
	
	public class OneBlock2Data extends NeoData {
		public final Fig1Node _fig1;
		public final Fig2Node _fig2;
		
		public OneBlock2Data(Record data) {
			var _fig1 = data.get("fig1");
			this._fig1 = new Fig1Node(_fig1);
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
		}
		
		
		public class Fig1Node {
			public String _ename;
			
			public Fig1Node(Value _fig1) {
				if(!_fig1.get("ename").isNull())
					this._ename = _fig1.get("ename").asString();
			}
		}
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
	}
	
	public class OneBlock2Mask extends NeoMask {
		public OneBlock2Mask setFig1(Long value) {
			nodeMask.put("fig1", value);
			return this;
		}
		public OneBlock2Mask setFig1Ename(String value) {
			attributeMask.put("fig1.ename", value);
			return this;
		}
		public OneBlock2Mask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public OneBlock2Mask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.115
	public OneOtherBlock2Access getPattern_OneOtherBlock2() {
		return new OneOtherBlock2Access();
	}
	
	public class OneOtherBlock2Access extends NeoPatternAccess<OneOtherBlock2Data, OneOtherBlock2Mask> {
		public final String _fig2 = "fig2";
		public final String _fig3 = "fig3";
		public final String _fig4 = "fig4";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(115);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneOtherBlock2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneOtherBlock2Data(d));
		}
		
		@Override
		public OneOtherBlock2Mask mask() {
			return new OneOtherBlock2Mask();
		}
	}
	
	public class OneOtherBlock2Data extends NeoData {
		public final Fig2Node _fig2;
		public final Fig3Node _fig3;
		public final Fig4Node _fig4;
		
		public OneOtherBlock2Data(Record data) {
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
			var _fig3 = data.get("fig3");
			this._fig3 = new Fig3Node(_fig3);
			var _fig4 = data.get("fig4");
			this._fig4 = new Fig4Node(_fig4);
		}
		
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
		public class Fig3Node {
			public String _ename;
			
			public Fig3Node(Value _fig3) {
				if(!_fig3.get("ename").isNull())
					this._ename = _fig3.get("ename").asString();
			}
		}
		
		public class Fig4Node {
			public String _ename;
			
			public Fig4Node(Value _fig4) {
				if(!_fig4.get("ename").isNull())
					this._ename = _fig4.get("ename").asString();
			}
		}
		
	}
	
	public class OneOtherBlock2Mask extends NeoMask {
		public OneOtherBlock2Mask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public OneOtherBlock2Mask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
		public OneOtherBlock2Mask setFig3(Long value) {
			nodeMask.put("fig3", value);
			return this;
		}
		public OneOtherBlock2Mask setFig3Ename(String value) {
			attributeMask.put("fig3.ename", value);
			return this;
		}
		public OneOtherBlock2Mask setFig4(Long value) {
			nodeMask.put("fig4", value);
			return this;
		}
		public OneOtherBlock2Mask setFig4Ename(String value) {
			attributeMask.put("fig4.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.116
	public OneOtherBlock2aAccess getPattern_OneOtherBlock2a() {
		return new OneOtherBlock2aAccess();
	}
	
	public class OneOtherBlock2aAccess extends NeoPatternAccess<OneOtherBlock2aData, OneOtherBlock2aMask> {
		public final String _fig2 = "fig2";
		public final String _fig4 = "fig4";
		public final String _fig6 = "fig6";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(116);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneOtherBlock2aData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneOtherBlock2aData(d));
		}
		
		@Override
		public OneOtherBlock2aMask mask() {
			return new OneOtherBlock2aMask();
		}
	}
	
	public class OneOtherBlock2aData extends NeoData {
		public final Fig2Node _fig2;
		public final Fig4Node _fig4;
		public final Fig6Node _fig6;
		
		public OneOtherBlock2aData(Record data) {
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
			var _fig4 = data.get("fig4");
			this._fig4 = new Fig4Node(_fig4);
			var _fig6 = data.get("fig6");
			this._fig6 = new Fig6Node(_fig6);
		}
		
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
		public class Fig4Node {
			public String _ename;
			
			public Fig4Node(Value _fig4) {
				if(!_fig4.get("ename").isNull())
					this._ename = _fig4.get("ename").asString();
			}
		}
		
		public class Fig6Node {
			public String _ename;
			
			public Fig6Node(Value _fig6) {
				if(!_fig6.get("ename").isNull())
					this._ename = _fig6.get("ename").asString();
			}
		}
		
	}
	
	public class OneOtherBlock2aMask extends NeoMask {
		public OneOtherBlock2aMask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public OneOtherBlock2aMask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
		public OneOtherBlock2aMask setFig4(Long value) {
			nodeMask.put("fig4", value);
			return this;
		}
		public OneOtherBlock2aMask setFig4Ename(String value) {
			attributeMask.put("fig4.ename", value);
			return this;
		}
		public OneOtherBlock2aMask setFig6(Long value) {
			nodeMask.put("fig6", value);
			return this;
		}
		public OneOtherBlock2aMask setFig6Ename(String value) {
			attributeMask.put("fig6.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.117
	public IConstraint getConstraint_EnfOneOtherBlock2() {
		var c = (Constraint) spec.getEntities().get(117);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.118
	public IConstraint getConstraint_EnfOneOtherBlock3() {
		var c = (Constraint) spec.getEntities().get(118);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.119
	public IConstraint getConstraint_EnforceCombi() {
		var c = (Constraint) spec.getEntities().get(119);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.120
	public OneBlock2CombiAccess getPattern_OneBlock2Combi() {
		return new OneBlock2CombiAccess();
	}
	
	public class OneBlock2CombiAccess extends NeoPatternAccess<OneBlock2CombiData, OneBlock2CombiMask> {
		public final String _fig1 = "fig1";
		public final String _fig2 = "fig2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(120);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneBlock2CombiData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneBlock2CombiData(d));
		}
		
		@Override
		public OneBlock2CombiMask mask() {
			return new OneBlock2CombiMask();
		}
	}
	
	public class OneBlock2CombiData extends NeoData {
		public final Fig1Node _fig1;
		public final Fig2Node _fig2;
		
		public OneBlock2CombiData(Record data) {
			var _fig1 = data.get("fig1");
			this._fig1 = new Fig1Node(_fig1);
			var _fig2 = data.get("fig2");
			this._fig2 = new Fig2Node(_fig2);
		}
		
		
		public class Fig1Node {
			public String _ename;
			
			public Fig1Node(Value _fig1) {
				if(!_fig1.get("ename").isNull())
					this._ename = _fig1.get("ename").asString();
			}
		}
		
		public class Fig2Node {
			public String _ename;
			
			public Fig2Node(Value _fig2) {
				if(!_fig2.get("ename").isNull())
					this._ename = _fig2.get("ename").asString();
			}
		}
		
	}
	
	public class OneBlock2CombiMask extends NeoMask {
		public OneBlock2CombiMask setFig1(Long value) {
			nodeMask.put("fig1", value);
			return this;
		}
		public OneBlock2CombiMask setFig1Ename(String value) {
			attributeMask.put("fig1.ename", value);
			return this;
		}
		public OneBlock2CombiMask setFig2(Long value) {
			nodeMask.put("fig2", value);
			return this;
		}
		public OneBlock2CombiMask setFig2Ename(String value) {
			attributeMask.put("fig2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.121
	public NeighbouringFieldsAccess getPattern_NeighbouringFields() {
		return new NeighbouringFieldsAccess();
	}
	
	public class NeighbouringFieldsAccess extends NeoPatternAccess<NeighbouringFieldsData, NeighbouringFieldsMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(121);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<NeighbouringFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new NeighbouringFieldsData(d));
		}
		
		@Override
		public NeighbouringFieldsMask mask() {
			return new NeighbouringFieldsMask();
		}
	}
	
	public class NeighbouringFieldsData extends NeoData {
		public final F1Node _f1;
		public final F2Node _f2;
		
		public NeighbouringFieldsData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class NeighbouringFieldsMask extends NeoMask {
		public NeighbouringFieldsMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public NeighbouringFieldsMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public NeighbouringFieldsMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public NeighbouringFieldsMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public NeighbouringFieldsMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public NeighbouringFieldsMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.122
	public EvenMoreNeighbouringFieldsAccess getPattern_EvenMoreNeighbouringFields() {
		return new EvenMoreNeighbouringFieldsAccess();
	}
	
	public class EvenMoreNeighbouringFieldsAccess extends NeoPatternAccess<EvenMoreNeighbouringFieldsData, EvenMoreNeighbouringFieldsMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		public final String _f3 = "f3";
		public final String _f4 = "f4";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(122);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<EvenMoreNeighbouringFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new EvenMoreNeighbouringFieldsData(d));
		}
		
		@Override
		public EvenMoreNeighbouringFieldsMask mask() {
			return new EvenMoreNeighbouringFieldsMask();
		}
	}
	
	public class EvenMoreNeighbouringFieldsData extends NeoData {
		public final F1Node _f1;
		public final F2Node _f2;
		public final F3Node _f3;
		public final F4Node _f4;
		
		public EvenMoreNeighbouringFieldsData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
			var _f3 = data.get("f3");
			this._f3 = new F3Node(_f3);
			var _f4 = data.get("f4");
			this._f4 = new F4Node(_f4);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
		public class F3Node {
			public boolean _endPos;
			public String _ename;
			
			public F3Node(Value _f3) {
				if(!_f3.get("endPos").isNull())
					this._endPos = _f3.get("endPos").asBoolean();
				if(!_f3.get("ename").isNull())
					this._ename = _f3.get("ename").asString();
			}
		}
		
		public class F4Node {
			public boolean _endPos;
			public String _ename;
			
			public F4Node(Value _f4) {
				if(!_f4.get("endPos").isNull())
					this._endPos = _f4.get("endPos").asBoolean();
				if(!_f4.get("ename").isNull())
					this._ename = _f4.get("ename").asString();
			}
		}
		
	}
	
	public class EvenMoreNeighbouringFieldsMask extends NeoMask {
		public EvenMoreNeighbouringFieldsMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF3(Long value) {
			nodeMask.put("f3", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF3EndPos(boolean value) {
			attributeMask.put("f3.endPos", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF3Ename(String value) {
			attributeMask.put("f3.ename", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF4(Long value) {
			nodeMask.put("f4", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF4EndPos(boolean value) {
			attributeMask.put("f4.endPos", value);
			return this;
		}
		public EvenMoreNeighbouringFieldsMask setF4Ename(String value) {
			attributeMask.put("f4.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.123
	public OneFieldWithBlockAccess getPattern_OneFieldWithBlock() {
		return new OneFieldWithBlockAccess();
	}
	
	public class OneFieldWithBlockAccess extends NeoPatternAccess<OneFieldWithBlockData, OneFieldWithBlockMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(123);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldWithBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldWithBlockData(d));
		}
		
		@Override
		public OneFieldWithBlockMask mask() {
			return new OneFieldWithBlockMask();
		}
	}
	
	public class OneFieldWithBlockData extends NeoData {
		public final FNode _f;
		
		public OneFieldWithBlockData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldWithBlockMask extends NeoMask {
		public OneFieldWithBlockMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldWithBlockMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldWithBlockMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.124
	public OneFieldWithNoBlockAccess getPattern_OneFieldWithNoBlock() {
		return new OneFieldWithNoBlockAccess();
	}
	
	public class OneFieldWithNoBlockAccess extends NeoPatternAccess<OneFieldWithNoBlockData, OneFieldWithNoBlockMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(124);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldWithNoBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldWithNoBlockData(d));
		}
		
		@Override
		public OneFieldWithNoBlockMask mask() {
			return new OneFieldWithNoBlockMask();
		}
	}
	
	public class OneFieldWithNoBlockData extends NeoData {
		public final FNode _f;
		
		public OneFieldWithNoBlockData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldWithNoBlockMask extends NeoMask {
		public OneFieldWithNoBlockMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldWithNoBlockMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldWithNoBlockMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.125
	public FieldWithBlockAccess getPattern_FieldWithBlock() {
		return new FieldWithBlockAccess();
	}
	
	public class FieldWithBlockAccess extends NeoPatternAccess<FieldWithBlockData, FieldWithBlockMask> {
		public final String _block = "block";
		public final String _f1 = "f1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(125);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FieldWithBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FieldWithBlockData(d));
		}
		
		@Override
		public FieldWithBlockMask mask() {
			return new FieldWithBlockMask();
		}
	}
	
	public class FieldWithBlockData extends NeoData {
		public final BlockNode _block;
		public final Block_field_0_f1Rel _block_field_0_f1;
		public final F1Node _f1;
		
		public FieldWithBlockData(Record data) {
			var _block = data.get("block");
			this._block = new BlockNode(_block);
			var _block_field_0_f1 = data.get("block_field_0_f1");
			this._block_field_0_f1 = new Block_field_0_f1Rel(_block_field_0_f1);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
		}
		
		
		public class BlockNode {
			public String _ename;
			
			public BlockNode(Value _block) {
				if(!_block.get("ename").isNull())
					this._ename = _block.get("ename").asString();
			}
		}
		
		public class Block_field_0_f1Rel {
		
			public Block_field_0_f1Rel(Value _block_field_0_f1) {
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
	}
	
	public class FieldWithBlockMask extends NeoMask {
		public FieldWithBlockMask setBlock(Long value) {
			nodeMask.put("block", value);
			return this;
		}
		public FieldWithBlockMask setBlockEname(String value) {
			attributeMask.put("block.ename", value);
			return this;
		}
		public FieldWithBlockMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public FieldWithBlockMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public FieldWithBlockMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.126
	public TestAttrExpressionAccess getPattern_TestAttrExpression() {
		return new TestAttrExpressionAccess();
	}
	
	public class TestAttrExpressionAccess extends NeoPatternAccess<TestAttrExpressionData, TestAttrExpressionMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(126);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TestAttrExpressionData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TestAttrExpressionData(d));
		}
		
		@Override
		public TestAttrExpressionMask mask() {
			return new TestAttrExpressionMask();
		}
	}
	
	public class TestAttrExpressionData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public TestAttrExpressionData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class TestAttrExpressionMask extends NeoMask {
		public TestAttrExpressionMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public TestAttrExpressionMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public TestAttrExpressionMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public TestAttrExpressionMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public TestAttrExpressionMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public TestAttrExpressionMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public TestAttrExpressionMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TestAttrExpressionMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public TestAttrExpressionMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.127
	public TestAttrExpression2Access getPattern_TestAttrExpression2() {
		return new TestAttrExpression2Access();
	}
	
	public class TestAttrExpression2Access extends NeoPatternAccess<TestAttrExpression2Data, TestAttrExpression2Mask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(127);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TestAttrExpression2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TestAttrExpression2Data(d));
		}
		
		@Override
		public TestAttrExpression2Mask mask() {
			return new TestAttrExpression2Mask();
		}
	}
	
	public class TestAttrExpression2Data extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public TestAttrExpression2Data(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class TestAttrExpression2Mask extends NeoMask {
		public TestAttrExpression2Mask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public TestAttrExpression2Mask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public TestAttrExpression2Mask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public TestAttrExpression2Mask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public TestAttrExpression2Mask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public TestAttrExpression2Mask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public TestAttrExpression2Mask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TestAttrExpression2Mask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public TestAttrExpression2Mask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.128
	public IConstraint getConstraint_TestConstraintAttrExpression() {
		var c = (Constraint) spec.getEntities().get(128);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.129
	public IConstraint getConstraint_TestConstraintAttrExpression2() {
		var c = (Constraint) spec.getEntities().get(129);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.130
	public IConstraint getConstraint_TestConstraintAttrExpressionNegativ() {
		var c = (Constraint) spec.getEntities().get(130);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.131
	public IConstraint getConstraint_TestConstraintAttrExpressionNegated() {
		var c = (Constraint) spec.getEntities().get(131);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.132
	public IConstraint getConstraint_TestConcatenatedConstraintAttrExpression() {
		var c = (Constraint) spec.getEntities().get(132);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.133
	public SomeFieldAccess getPattern_SomeField() {
		return new SomeFieldAccess();
	}
	
	public class SomeFieldAccess extends NeoPatternAccess<SomeFieldData, SomeFieldMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(133);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SomeFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SomeFieldData(d));
		}
		
		@Override
		public SomeFieldMask mask() {
			return new SomeFieldMask();
		}
	}
	
	public class SomeFieldData extends NeoData {
		public final FNode _f;
		
		public SomeFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class SomeFieldMask extends NeoMask {
		public SomeFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public SomeFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public SomeFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.134
	public TestAttributeAssignmentsInRuleAccess getRule_TestAttributeAssignmentsInRule() {
		return new TestAttributeAssignmentsInRuleAccess();
	}
	
	public class TestAttributeAssignmentsInRuleAccess extends NeoRuleCoAccess<TestAttributeAssignmentsInRuleData, TestAttributeAssignmentsInRuleCoData, TestAttributeAssignmentsInRuleMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(134);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<TestAttributeAssignmentsInRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TestAttributeAssignmentsInRuleData(d));
		}
			
		@Override
		public Stream<TestAttributeAssignmentsInRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TestAttributeAssignmentsInRuleCoData(d));
		}
		
		@Override
		public TestAttributeAssignmentsInRuleMask mask() {
			return new TestAttributeAssignmentsInRuleMask();
		}
	}
	
	public class TestAttributeAssignmentsInRuleData extends NeoData {
		public final FNode _f;
		
		public TestAttributeAssignmentsInRuleData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class TestAttributeAssignmentsInRuleCoData extends NeoData {
		public final FNode _f;
		
		public TestAttributeAssignmentsInRuleCoData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class TestAttributeAssignmentsInRuleMask extends NeoMask {
		public TestAttributeAssignmentsInRuleMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TestAttributeAssignmentsInRuleMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public TestAttributeAssignmentsInRuleMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.135
	public TestAttributeAssignmentsWithElementsValueAssignAccess getRule_TestAttributeAssignmentsWithElementsValueAssign() {
		return new TestAttributeAssignmentsWithElementsValueAssignAccess();
	}
	
	public class TestAttributeAssignmentsWithElementsValueAssignAccess extends NeoRuleCoAccess<TestAttributeAssignmentsWithElementsValueAssignData, TestAttributeAssignmentsWithElementsValueAssignCoData, TestAttributeAssignmentsWithElementsValueAssignMask> {
		public final String _b = "b";
		public final String _f = "f";
		public final String _fEnd = "fEnd";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(135);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<TestAttributeAssignmentsWithElementsValueAssignData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TestAttributeAssignmentsWithElementsValueAssignData(d));
		}
			
		@Override
		public Stream<TestAttributeAssignmentsWithElementsValueAssignCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TestAttributeAssignmentsWithElementsValueAssignCoData(d));
		}
		
		@Override
		public TestAttributeAssignmentsWithElementsValueAssignMask mask() {
			return new TestAttributeAssignmentsWithElementsValueAssignMask();
		}
	}
	
	public class TestAttributeAssignmentsWithElementsValueAssignData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final B_fields_1_fEndRel _b_fields_1_fEnd;
		public final FNode _f;
		public final F_right_0_fEndRel _f_right_0_fEnd;
		public final FEndNode _fEnd;
		
		public TestAttributeAssignmentsWithElementsValueAssignData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _b_fields_1_fEnd = data.get("b_fields_1_fEnd");
			this._b_fields_1_fEnd = new B_fields_1_fEndRel(_b_fields_1_fEnd);
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_fEnd = data.get("f_right_0_fEnd");
			this._f_right_0_fEnd = new F_right_0_fEndRel(_f_right_0_fEnd);
			var _fEnd = data.get("fEnd");
			this._fEnd = new FEndNode(_fEnd);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class B_fields_1_fEndRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fEndRel(Value _b_fields_1_fEnd) {
				if(!_b_fields_1_fEnd.get("row").isNull())
					this._row = _b_fields_1_fEnd.get("row").asInt();
				if(!_b_fields_1_fEnd.get("col").isNull())
					this._col = _b_fields_1_fEnd.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_fEndRel {
		
			public F_right_0_fEndRel(Value _f_right_0_fEnd) {
			}
		}
		public class FEndNode {
			public boolean _endPos;
			public String _ename;
			
			public FEndNode(Value _fEnd) {
				if(!_fEnd.get("endPos").isNull())
					this._endPos = _fEnd.get("endPos").asBoolean();
				if(!_fEnd.get("ename").isNull())
					this._ename = _fEnd.get("ename").asString();
			}
		}
		
	}
	
	public class TestAttributeAssignmentsWithElementsValueAssignCoData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final B_fields_1_fEndRel _b_fields_1_fEnd;
		public final FNode _f;
		public final F_right_0_fEndRel _f_right_0_fEnd;
		public final FEndNode _fEnd;
		
		public TestAttributeAssignmentsWithElementsValueAssignCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _b_fields_1_fEnd = data.get("b_fields_1_fEnd");
			this._b_fields_1_fEnd = new B_fields_1_fEndRel(_b_fields_1_fEnd);
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_fEnd = data.get("f_right_0_fEnd");
			this._f_right_0_fEnd = new F_right_0_fEndRel(_f_right_0_fEnd);
			var _fEnd = data.get("fEnd");
			this._fEnd = new FEndNode(_fEnd);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class B_fields_1_fEndRel {
			public int _row;
			public int _col;
		
			public B_fields_1_fEndRel(Value _b_fields_1_fEnd) {
				if(!_b_fields_1_fEnd.get("row").isNull())
					this._row = _b_fields_1_fEnd.get("row").asInt();
				if(!_b_fields_1_fEnd.get("col").isNull())
					this._col = _b_fields_1_fEnd.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_fEndRel {
		
			public F_right_0_fEndRel(Value _f_right_0_fEnd) {
			}
		}
		public class FEndNode {
			public boolean _endPos;
			public String _ename;
			
			public FEndNode(Value _fEnd) {
				if(!_fEnd.get("endPos").isNull())
					this._endPos = _fEnd.get("endPos").asBoolean();
				if(!_fEnd.get("ename").isNull())
					this._ename = _fEnd.get("ename").asString();
			}
		}
		
	}
	
	public class TestAttributeAssignmentsWithElementsValueAssignMask extends NeoMask {
		public TestAttributeAssignmentsWithElementsValueAssignMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setB_fields_1_fEndRow(int value) {
			attributeMask.put("b_fields_1_fEnd.row", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setB_fields_1_fEndCol(int value) {
			attributeMask.put("b_fields_1_fEnd.col", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setFEnd(Long value) {
			nodeMask.put("fEnd", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setFEndEndPos(boolean value) {
			attributeMask.put("fEnd.endPos", value);
			return this;
		}
		public TestAttributeAssignmentsWithElementsValueAssignMask setFEndEname(String value) {
			attributeMask.put("fEnd.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.136
	public ChangeToEndFieldAccess getRule_ChangeToEndField() {
		return new ChangeToEndFieldAccess();
	}
	
	public class ChangeToEndFieldAccess extends NeoRuleCoAccess<ChangeToEndFieldData, ChangeToEndFieldCoData, ChangeToEndFieldMask> {
		public final String _f = "f";
		public final String _f1 = "f1";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(136);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ChangeToEndFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ChangeToEndFieldData(d));
		}
			
		@Override
		public Stream<ChangeToEndFieldCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ChangeToEndFieldCoData(d));
		}
		
		@Override
		public ChangeToEndFieldMask mask() {
			return new ChangeToEndFieldMask();
		}
	}
	
	public class ChangeToEndFieldData extends NeoData {
		public final FNode _f;
		public final F_right_0_f1Rel _f_right_0_f1;
		public final F1Node _f1;
		
		public ChangeToEndFieldData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_f1 = data.get("f_right_0_f1");
			this._f_right_0_f1 = new F_right_0_f1Rel(_f_right_0_f1);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_f1Rel {
		
			public F_right_0_f1Rel(Value _f_right_0_f1) {
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
	}
	
	public class ChangeToEndFieldCoData extends NeoData {
		public final FNode _f;
		public final F_right_0_f1Rel _f_right_0_f1;
		public final F1Node _f1;
		
		public ChangeToEndFieldCoData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_right_0_f1 = data.get("f_right_0_f1");
			this._f_right_0_f1 = new F_right_0_f1Rel(_f_right_0_f1);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_right_0_f1Rel {
		
			public F_right_0_f1Rel(Value _f_right_0_f1) {
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
	}
	
	public class ChangeToEndFieldMask extends NeoMask {
		public ChangeToEndFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public ChangeToEndFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public ChangeToEndFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public ChangeToEndFieldMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public ChangeToEndFieldMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public ChangeToEndFieldMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.137
	public CreateThirdSokobanAccess getRule_CreateThirdSokoban() {
		return new CreateThirdSokobanAccess();
	}
	
	public class CreateThirdSokobanAccess extends NeoRuleCoAccess<CreateThirdSokobanData, CreateThirdSokobanCoData, CreateThirdSokobanMask> {
		public final String _sok1 = "sok1";
		public final String _sok2 = "sok2";
		public final String _f = "f";
		public final String _sok3 = "sok3";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(137);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateThirdSokobanData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateThirdSokobanData(d));
		}
			
		@Override
		public Stream<CreateThirdSokobanCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateThirdSokobanCoData(d));
		}
		
		@Override
		public CreateThirdSokobanMask mask() {
			return new CreateThirdSokobanMask();
		}
	}
	
	public class CreateThirdSokobanData extends NeoData {
		public final Sok1Node _sok1;
		public final Sok2Node _sok2;
		public final FNode _f;
		
		public CreateThirdSokobanData(Record data) {
			var _sok1 = data.get("sok1");
			this._sok1 = new Sok1Node(_sok1);
			var _sok2 = data.get("sok2");
			this._sok2 = new Sok2Node(_sok2);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class Sok1Node {
			public String _ename;
			
			public Sok1Node(Value _sok1) {
				if(!_sok1.get("ename").isNull())
					this._ename = _sok1.get("ename").asString();
			}
		}
		
		public class Sok2Node {
			public String _ename;
			
			public Sok2Node(Value _sok2) {
				if(!_sok2.get("ename").isNull())
					this._ename = _sok2.get("ename").asString();
			}
		}
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class CreateThirdSokobanCoData extends NeoData {
		public final Sok1Node _sok1;
		public final Sok2Node _sok2;
		public final FNode _f;
		public final Sok3Node _sok3;
		public final Sok3_field_0_fRel _sok3_field_0_f;
		
		public CreateThirdSokobanCoData(Record data) {
			var _sok1 = data.get("sok1");
			this._sok1 = new Sok1Node(_sok1);
			var _sok2 = data.get("sok2");
			this._sok2 = new Sok2Node(_sok2);
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _sok3 = data.get("sok3");
			this._sok3 = new Sok3Node(_sok3);
			var _sok3_field_0_f = data.get("sok3_field_0_f");
			this._sok3_field_0_f = new Sok3_field_0_fRel(_sok3_field_0_f);
		}
		
		
		public class Sok1Node {
			public String _ename;
			
			public Sok1Node(Value _sok1) {
				if(!_sok1.get("ename").isNull())
					this._ename = _sok1.get("ename").asString();
			}
		}
		
		public class Sok2Node {
			public String _ename;
			
			public Sok2Node(Value _sok2) {
				if(!_sok2.get("ename").isNull())
					this._ename = _sok2.get("ename").asString();
			}
		}
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class Sok3Node {
			public String _ename;
			
			public Sok3Node(Value _sok3) {
				if(!_sok3.get("ename").isNull())
					this._ename = _sok3.get("ename").asString();
			}
		}
		
		public class Sok3_field_0_fRel {
		
			public Sok3_field_0_fRel(Value _sok3_field_0_f) {
			}
		}
	}
	
	public class CreateThirdSokobanMask extends NeoMask {
		public CreateThirdSokobanMask setSok1(Long value) {
			nodeMask.put("sok1", value);
			return this;
		}
		public CreateThirdSokobanMask setSok1Ename(String value) {
			attributeMask.put("sok1.ename", value);
			return this;
		}
		public CreateThirdSokobanMask setSok2(Long value) {
			nodeMask.put("sok2", value);
			return this;
		}
		public CreateThirdSokobanMask setSok2Ename(String value) {
			attributeMask.put("sok2.ename", value);
			return this;
		}
		public CreateThirdSokobanMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public CreateThirdSokobanMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public CreateThirdSokobanMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
		public CreateThirdSokobanMask setSok3(Long value) {
			nodeMask.put("sok3", value);
			return this;
		}
		public CreateThirdSokobanMask setSok3Ename(String value) {
			attributeMask.put("sok3.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.138
	public TwoEmptyEndFieldsAccess getPattern_TwoEmptyEndFields() {
		return new TwoEmptyEndFieldsAccess();
	}
	
	public class TwoEmptyEndFieldsAccess extends NeoPatternAccess<TwoEmptyEndFieldsData, TwoEmptyEndFieldsMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(138);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoEmptyEndFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoEmptyEndFieldsData(d));
		}
		
		@Override
		public TwoEmptyEndFieldsMask mask() {
			return new TwoEmptyEndFieldsMask();
		}
	}
	
	public class TwoEmptyEndFieldsData extends NeoData {
		public final F1Node _f1;
		public final F2Node _f2;
		
		public TwoEmptyEndFieldsData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class TwoEmptyEndFieldsMask extends NeoMask {
		public TwoEmptyEndFieldsMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public TwoEmptyEndFieldsMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public TwoEmptyEndFieldsMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public TwoEmptyEndFieldsMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public TwoEmptyEndFieldsMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public TwoEmptyEndFieldsMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.139
	public ConnectedFieldAccess getPattern_ConnectedField() {
		return new ConnectedFieldAccess();
	}
	
	public class ConnectedFieldAccess extends NeoPatternAccess<ConnectedFieldData, ConnectedFieldMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(139);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<ConnectedFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ConnectedFieldData(d));
		}
		
		@Override
		public ConnectedFieldMask mask() {
			return new ConnectedFieldMask();
		}
	}
	
	public class ConnectedFieldData extends NeoData {
		public final F1Node _f1;
		public final F1_bottom_0_f2Rel _f1_bottom_0_f2;
		public final F2Node _f2;
		
		public ConnectedFieldData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f1_bottom_0_f2 = data.get("f1_bottom_0_f2");
			this._f1_bottom_0_f2 = new F1_bottom_0_f2Rel(_f1_bottom_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F1_bottom_0_f2Rel {
		
			public F1_bottom_0_f2Rel(Value _f1_bottom_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class ConnectedFieldMask extends NeoMask {
		public ConnectedFieldMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public ConnectedFieldMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public ConnectedFieldMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public ConnectedFieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public ConnectedFieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public ConnectedFieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.140
	public AttrCondFieldAccess getPattern_AttrCondField() {
		return new AttrCondFieldAccess();
	}
	
	public class AttrCondFieldAccess extends NeoPatternAccess<AttrCondFieldData, AttrCondFieldMask> {
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(140);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AttrCondFieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttrCondFieldData(d));
		}
		
		@Override
		public AttrCondFieldMask mask() {
			return new AttrCondFieldMask();
		}
	}
	
	public class AttrCondFieldData extends NeoData {
		public final BNode _b;
		public final B_fields_0_fRel _b_fields_0_f;
		public final FNode _f;
		
		public AttrCondFieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f = data.get("b_fields_0_f");
			this._b_fields_0_f = new B_fields_0_fRel(_b_fields_0_f);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_fRel {
			public int _row;
			public int _col;
		
			public B_fields_0_fRel(Value _b_fields_0_f) {
				if(!_b_fields_0_f.get("row").isNull())
					this._row = _b_fields_0_f.get("row").asInt();
				if(!_b_fields_0_f.get("col").isNull())
					this._col = _b_fields_0_f.get("col").asInt();
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class AttrCondFieldMask extends NeoMask {
		public AttrCondFieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AttrCondFieldMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AttrCondFieldMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AttrCondFieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AttrCondFieldMask setB_fields_0_fRow(int value) {
			attributeMask.put("b_fields_0_f.row", value);
			return this;
		}
		public AttrCondFieldMask setB_fields_0_fCol(int value) {
			attributeMask.put("b_fields_0_f.col", value);
			return this;
		}
		public AttrCondFieldMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public AttrCondFieldMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public AttrCondFieldMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.141
	public AttrCondField2Access getPattern_AttrCondField2() {
		return new AttrCondField2Access();
	}
	
	public class AttrCondField2Access extends NeoPatternAccess<AttrCondField2Data, AttrCondField2Mask> {
		public final String _b = "b";
		public final String _f1 = "f1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(141);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AttrCondField2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttrCondField2Data(d));
		}
		
		@Override
		public AttrCondField2Mask mask() {
			return new AttrCondField2Mask();
		}
	}
	
	public class AttrCondField2Data extends NeoData {
		public final BNode _b;
		public final B_fields_0_f1Rel _b_fields_0_f1;
		public final F1Node _f1;
		
		public AttrCondField2Data(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f1 = data.get("b_fields_0_f1");
			this._b_fields_0_f1 = new B_fields_0_f1Rel(_b_fields_0_f1);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_f1Rel {
			public int _row;
			public int _col;
		
			public B_fields_0_f1Rel(Value _b_fields_0_f1) {
				if(!_b_fields_0_f1.get("row").isNull())
					this._row = _b_fields_0_f1.get("row").asInt();
				if(!_b_fields_0_f1.get("col").isNull())
					this._col = _b_fields_0_f1.get("col").asInt();
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
	}
	
	public class AttrCondField2Mask extends NeoMask {
		public AttrCondField2Mask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AttrCondField2Mask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AttrCondField2Mask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AttrCondField2Mask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AttrCondField2Mask setB_fields_0_f1Row(int value) {
			attributeMask.put("b_fields_0_f1.row", value);
			return this;
		}
		public AttrCondField2Mask setB_fields_0_f1Col(int value) {
			attributeMask.put("b_fields_0_f1.col", value);
			return this;
		}
		public AttrCondField2Mask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public AttrCondField2Mask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public AttrCondField2Mask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.142
	public IConstraint getConstraint_EnforceAttrField() {
		var c = (Constraint) spec.getEntities().get(142);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.143
	public IConstraint getConstraint_EnforceAttrField2() {
		var c = (Constraint) spec.getEntities().get(143);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.144
	public IConstraint getConstraint_EnforceAttrFieldC() {
		var c = (Constraint) spec.getEntities().get(144);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.145
	public AttrCondFieldZeroAccess getPattern_AttrCondFieldZero() {
		return new AttrCondFieldZeroAccess();
	}
	
	public class AttrCondFieldZeroAccess extends NeoPatternAccess<AttrCondFieldZeroData, AttrCondFieldZeroMask> {
		public final String _b = "b";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(145);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AttrCondFieldZeroData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttrCondFieldZeroData(d));
		}
		
		@Override
		public AttrCondFieldZeroMask mask() {
			return new AttrCondFieldZeroMask();
		}
	}
	
	public class AttrCondFieldZeroData extends NeoData {
		public final BNode _b;
		public final B_fields_0_f2Rel _b_fields_0_f2;
		public final F2Node _f2;
		
		public AttrCondFieldZeroData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f2 = data.get("b_fields_0_f2");
			this._b_fields_0_f2 = new B_fields_0_f2Rel(_b_fields_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_f2Rel {
			public int _row;
			public int _col;
		
			public B_fields_0_f2Rel(Value _b_fields_0_f2) {
				if(!_b_fields_0_f2.get("row").isNull())
					this._row = _b_fields_0_f2.get("row").asInt();
				if(!_b_fields_0_f2.get("col").isNull())
					this._col = _b_fields_0_f2.get("col").asInt();
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class AttrCondFieldZeroMask extends NeoMask {
		public AttrCondFieldZeroMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AttrCondFieldZeroMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AttrCondFieldZeroMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AttrCondFieldZeroMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AttrCondFieldZeroMask setB_fields_0_f2Row(int value) {
			attributeMask.put("b_fields_0_f2.row", value);
			return this;
		}
		public AttrCondFieldZeroMask setB_fields_0_f2Col(int value) {
			attributeMask.put("b_fields_0_f2.col", value);
			return this;
		}
		public AttrCondFieldZeroMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public AttrCondFieldZeroMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public AttrCondFieldZeroMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.146
	public AttrCondFieldZero2Access getPattern_AttrCondFieldZero2() {
		return new AttrCondFieldZero2Access();
	}
	
	public class AttrCondFieldZero2Access extends NeoPatternAccess<AttrCondFieldZero2Data, AttrCondFieldZero2Mask> {
		public final String _b = "b";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(146);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<AttrCondFieldZero2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new AttrCondFieldZero2Data(d));
		}
		
		@Override
		public AttrCondFieldZero2Mask mask() {
			return new AttrCondFieldZero2Mask();
		}
	}
	
	public class AttrCondFieldZero2Data extends NeoData {
		public final BNode _b;
		public final B_fields_0_f2Rel _b_fields_0_f2;
		public final F2Node _f2;
		
		public AttrCondFieldZero2Data(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_fields_0_f2 = data.get("b_fields_0_f2");
			this._b_fields_0_f2 = new B_fields_0_f2Rel(_b_fields_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_fields_0_f2Rel {
			public int _row;
			public int _col;
		
			public B_fields_0_f2Rel(Value _b_fields_0_f2) {
				if(!_b_fields_0_f2.get("row").isNull())
					this._row = _b_fields_0_f2.get("row").asInt();
				if(!_b_fields_0_f2.get("col").isNull())
					this._col = _b_fields_0_f2.get("col").asInt();
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class AttrCondFieldZero2Mask extends NeoMask {
		public AttrCondFieldZero2Mask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public AttrCondFieldZero2Mask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public AttrCondFieldZero2Mask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public AttrCondFieldZero2Mask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public AttrCondFieldZero2Mask setB_fields_0_f2Row(int value) {
			attributeMask.put("b_fields_0_f2.row", value);
			return this;
		}
		public AttrCondFieldZero2Mask setB_fields_0_f2Col(int value) {
			attributeMask.put("b_fields_0_f2.col", value);
			return this;
		}
		public AttrCondFieldZero2Mask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public AttrCondFieldZero2Mask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public AttrCondFieldZero2Mask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.147
	public MoveBlockUpAccess getRule_MoveBlockUp() {
		return new MoveBlockUpAccess();
	}
	
	public class MoveBlockUpAccess extends NeoRuleCoAccess<MoveBlockUpData, MoveBlockUpCoData, MoveBlockUpMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		public final String _b1 = "b1";
		public final String _b2 = "b2";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(147);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MoveBlockUpData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveBlockUpData(d));
		}
			
		@Override
		public Stream<MoveBlockUpCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MoveBlockUpCoData(d));
		}
		
		@Override
		public MoveBlockUpMask mask() {
			return new MoveBlockUpMask();
		}
	}
	
	public class MoveBlockUpData extends NeoData {
		public final F1Node _f1;
		public final F1_bottom_0_f2Rel _f1_bottom_0_f2;
		public final F2Node _f2;
		public final B1Node _b1;
		public final B1_field_0_f2Rel _b1_field_0_f2;
		
		public MoveBlockUpData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f1_bottom_0_f2 = data.get("f1_bottom_0_f2");
			this._f1_bottom_0_f2 = new F1_bottom_0_f2Rel(_f1_bottom_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
			var _b1 = data.get("b1");
			this._b1 = new B1Node(_b1);
			var _b1_field_0_f2 = data.get("b1_field_0_f2");
			this._b1_field_0_f2 = new B1_field_0_f2Rel(_b1_field_0_f2);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F1_bottom_0_f2Rel {
		
			public F1_bottom_0_f2Rel(Value _f1_bottom_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
		public class B1Node {
			public String _ename;
			
			public B1Node(Value _b1) {
				if(!_b1.get("ename").isNull())
					this._ename = _b1.get("ename").asString();
			}
		}
		
		public class B1_field_0_f2Rel {
		
			public B1_field_0_f2Rel(Value _b1_field_0_f2) {
			}
		}
	}
	
	public class MoveBlockUpCoData extends NeoData {
		public final F1Node _f1;
		public final F1_bottom_0_f2Rel _f1_bottom_0_f2;
		public final F2Node _f2;
		public final B1Node _b1;
		public final B1_field_1_f1Rel _b1_field_1_f1;
		public final B2Node _b2;
		public final B2_field_0_f2Rel _b2_field_0_f2;
		
		public MoveBlockUpCoData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f1_bottom_0_f2 = data.get("f1_bottom_0_f2");
			this._f1_bottom_0_f2 = new F1_bottom_0_f2Rel(_f1_bottom_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
			var _b1 = data.get("b1");
			this._b1 = new B1Node(_b1);
			var _b1_field_1_f1 = data.get("b1_field_1_f1");
			this._b1_field_1_f1 = new B1_field_1_f1Rel(_b1_field_1_f1);
			var _b2 = data.get("b2");
			this._b2 = new B2Node(_b2);
			var _b2_field_0_f2 = data.get("b2_field_0_f2");
			this._b2_field_0_f2 = new B2_field_0_f2Rel(_b2_field_0_f2);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F1_bottom_0_f2Rel {
		
			public F1_bottom_0_f2Rel(Value _f1_bottom_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
		public class B1Node {
			public String _ename;
			
			public B1Node(Value _b1) {
				if(!_b1.get("ename").isNull())
					this._ename = _b1.get("ename").asString();
			}
		}
		
		public class B1_field_1_f1Rel {
		
			public B1_field_1_f1Rel(Value _b1_field_1_f1) {
			}
		}
		public class B2Node {
			public String _ename;
			
			public B2Node(Value _b2) {
				if(!_b2.get("ename").isNull())
					this._ename = _b2.get("ename").asString();
			}
		}
		
		public class B2_field_0_f2Rel {
		
			public B2_field_0_f2Rel(Value _b2_field_0_f2) {
			}
		}
	}
	
	public class MoveBlockUpMask extends NeoMask {
		public MoveBlockUpMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public MoveBlockUpMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public MoveBlockUpMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public MoveBlockUpMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public MoveBlockUpMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public MoveBlockUpMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
		public MoveBlockUpMask setB1(Long value) {
			nodeMask.put("b1", value);
			return this;
		}
		public MoveBlockUpMask setB1Ename(String value) {
			attributeMask.put("b1.ename", value);
			return this;
		}
		public MoveBlockUpMask setB2(Long value) {
			nodeMask.put("b2", value);
			return this;
		}
		public MoveBlockUpMask setB2Ename(String value) {
			attributeMask.put("b2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.148
	public OneFieldOnBoardAccess getPattern_OneFieldOnBoard() {
		return new OneFieldOnBoardAccess();
	}
	
	public class OneFieldOnBoardAccess extends NeoPatternAccess<OneFieldOnBoardData, OneFieldOnBoardMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(148);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneFieldOnBoardData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneFieldOnBoardData(d));
		}
		
		@Override
		public OneFieldOnBoardMask mask() {
			return new OneFieldOnBoardMask();
		}
	}
	
	public class OneFieldOnBoardData extends NeoData {
		public final FNode _f;
		
		public OneFieldOnBoardData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneFieldOnBoardMask extends NeoMask {
		public OneFieldOnBoardMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneFieldOnBoardMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneFieldOnBoardMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.149
	public OneEndFieldOnBoardAccess getPattern_OneEndFieldOnBoard() {
		return new OneEndFieldOnBoardAccess();
	}
	
	public class OneEndFieldOnBoardAccess extends NeoPatternAccess<OneEndFieldOnBoardData, OneEndFieldOnBoardMask> {
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(149);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneEndFieldOnBoardData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneEndFieldOnBoardData(d));
		}
		
		@Override
		public OneEndFieldOnBoardMask mask() {
			return new OneEndFieldOnBoardMask();
		}
	}
	
	public class OneEndFieldOnBoardData extends NeoData {
		public final FNode _f;
		
		public OneEndFieldOnBoardData(Record data) {
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class OneEndFieldOnBoardMask extends NeoMask {
		public OneEndFieldOnBoardMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public OneEndFieldOnBoardMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public OneEndFieldOnBoardMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.150
	public IConstraint getConstraint_IfFieldThenEndField() {
		var c = (Constraint) spec.getEntities().get(150);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.151
	public OneSpecialBoulderAccess getPattern_OneSpecialBoulder() {
		return new OneSpecialBoulderAccess();
	}
	
	public class OneSpecialBoulderAccess extends NeoPatternAccess<OneSpecialBoulderData, OneSpecialBoulderMask> {
		public final String _b = "b";
		public final String _b1 = "b1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(151);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneSpecialBoulderData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneSpecialBoulderData(d));
		}
		
		@Override
		public OneSpecialBoulderMask mask() {
			return new OneSpecialBoulderMask();
		}
	}
	
	public class OneSpecialBoulderData extends NeoData {
		public final BNode _b;
		public final B1Node _b1;
		
		public OneSpecialBoulderData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b1 = data.get("b1");
			this._b1 = new B1Node(_b1);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B1Node {
			public String _ename;
			
			public B1Node(Value _b1) {
				if(!_b1.get("ename").isNull())
					this._ename = _b1.get("ename").asString();
			}
		}
		
	}
	
	public class OneSpecialBoulderMask extends NeoMask {
		public OneSpecialBoulderMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public OneSpecialBoulderMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public OneSpecialBoulderMask setB1(Long value) {
			nodeMask.put("b1", value);
			return this;
		}
		public OneSpecialBoulderMask setB1Ename(String value) {
			attributeMask.put("b1.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.152
	public OneSpecialBlockAccess getPattern_OneSpecialBlock() {
		return new OneSpecialBlockAccess();
	}
	
	public class OneSpecialBlockAccess extends NeoPatternAccess<OneSpecialBlockData, OneSpecialBlockMask> {
		public final String _b = "b";
		public final String _b2 = "b2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(152);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OneSpecialBlockData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OneSpecialBlockData(d));
		}
		
		@Override
		public OneSpecialBlockMask mask() {
			return new OneSpecialBlockMask();
		}
	}
	
	public class OneSpecialBlockData extends NeoData {
		public final BNode _b;
		public final B2Node _b2;
		
		public OneSpecialBlockData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b2 = data.get("b2");
			this._b2 = new B2Node(_b2);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B2Node {
			public String _ename;
			
			public B2Node(Value _b2) {
				if(!_b2.get("ename").isNull())
					this._ename = _b2.get("ename").asString();
			}
		}
		
	}
	
	public class OneSpecialBlockMask extends NeoMask {
		public OneSpecialBlockMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public OneSpecialBlockMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public OneSpecialBlockMask setB2(Long value) {
			nodeMask.put("b2", value);
			return this;
		}
		public OneSpecialBlockMask setB2Ename(String value) {
			attributeMask.put("b2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.153
	public IConstraint getConstraint_IfBoulderThenBlock() {
		var c = (Constraint) spec.getEntities().get(153);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.154
	public RemoveSokobanAccess getRule_RemoveSokoban() {
		return new RemoveSokobanAccess();
	}
	
	public class RemoveSokobanAccess extends NeoRuleCoAccess<RemoveSokobanData, RemoveSokobanCoData, RemoveSokobanMask> {
		public final String _sok = "sok";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(154);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RemoveSokobanData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RemoveSokobanData(d));
		}
			
		@Override
		public Stream<RemoveSokobanCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RemoveSokobanCoData(d));
		}
		
		@Override
		public RemoveSokobanMask mask() {
			return new RemoveSokobanMask();
		}
	}
	
	public class RemoveSokobanData extends NeoData {
		public final SokNode _sok;
		
		public RemoveSokobanData(Record data) {
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
		}
		
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
	}
	
	public class RemoveSokobanCoData extends NeoData {
		
		public RemoveSokobanCoData(Record data) {
		}
		
		
	}
	
	public class RemoveSokobanMask extends NeoMask {
		public RemoveSokobanMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public RemoveSokobanMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.155
	public RemoveSokobanWithDanglingEdgesAccess getRule_RemoveSokobanWithDanglingEdges() {
		return new RemoveSokobanWithDanglingEdgesAccess();
	}
	
	public class RemoveSokobanWithDanglingEdgesAccess extends NeoRuleCoAccess<RemoveSokobanWithDanglingEdgesData, RemoveSokobanWithDanglingEdgesCoData, RemoveSokobanWithDanglingEdgesMask> {
		public final String _sok = "sok";
		public final String _b = "b";
		public final String _f = "f";
		
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(155);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RemoveSokobanWithDanglingEdgesData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RemoveSokobanWithDanglingEdgesData(d));
		}
			
		@Override
		public Stream<RemoveSokobanWithDanglingEdgesCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RemoveSokobanWithDanglingEdgesCoData(d));
		}
		
		@Override
		public RemoveSokobanWithDanglingEdgesMask mask() {
			return new RemoveSokobanWithDanglingEdgesMask();
		}
	}
	
	public class RemoveSokobanWithDanglingEdgesData extends NeoData {
		public final SokNode _sok;
		public final Sok_field_0_fRel _sok_field_0_f;
		public final BNode _b;
		public final B_selectedFigure_0_sokRel _b_selectedFigure_0_sok;
		public final FNode _f;
		
		public RemoveSokobanWithDanglingEdgesData(Record data) {
			var _sok = data.get("sok");
			this._sok = new SokNode(_sok);
			var _sok_field_0_f = data.get("sok_field_0_f");
			this._sok_field_0_f = new Sok_field_0_fRel(_sok_field_0_f);
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_selectedFigure_0_sok = data.get("b_selectedFigure_0_sok");
			this._b_selectedFigure_0_sok = new B_selectedFigure_0_sokRel(_b_selectedFigure_0_sok);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class SokNode {
			public String _ename;
			
			public SokNode(Value _sok) {
				if(!_sok.get("ename").isNull())
					this._ename = _sok.get("ename").asString();
			}
		}
		
		public class Sok_field_0_fRel {
		
			public Sok_field_0_fRel(Value _sok_field_0_f) {
			}
		}
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_selectedFigure_0_sokRel {
		
			public B_selectedFigure_0_sokRel(Value _b_selectedFigure_0_sok) {
			}
		}
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class RemoveSokobanWithDanglingEdgesCoData extends NeoData {
		public final BNode _b;
		public final FNode _f;
		
		public RemoveSokobanWithDanglingEdgesCoData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _f = data.get("f");
			this._f = new FNode(_f);
		}
		
		
		public class BNode {
			public int _width;
			public int _height;
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("width").isNull())
					this._width = _b.get("width").asInt();
				if(!_b.get("height").isNull())
					this._height = _b.get("height").asInt();
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class FNode {
			public boolean _endPos;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("endPos").isNull())
					this._endPos = _f.get("endPos").asBoolean();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
	}
	
	public class RemoveSokobanWithDanglingEdgesMask extends NeoMask {
		public RemoveSokobanWithDanglingEdgesMask setSok(Long value) {
			nodeMask.put("sok", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setSokEname(String value) {
			attributeMask.put("sok.ename", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setBWidth(int value) {
			attributeMask.put("b.width", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setBHeight(int value) {
			attributeMask.put("b.height", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setFEndPos(boolean value) {
			attributeMask.put("f.endPos", value);
			return this;
		}
		public RemoveSokobanWithDanglingEdgesMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.156
	public Test_twoOccupiedFieldsAccess getPattern_Test_twoOccupiedFields() {
		return new Test_twoOccupiedFieldsAccess();
	}
	
	public class Test_twoOccupiedFieldsAccess extends NeoPatternAccess<Test_twoOccupiedFieldsData, Test_twoOccupiedFieldsMask> {
		public final String _f1 = "f1";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(156);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<Test_twoOccupiedFieldsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new Test_twoOccupiedFieldsData(d));
		}
		
		@Override
		public Test_twoOccupiedFieldsMask mask() {
			return new Test_twoOccupiedFieldsMask();
		}
	}
	
	public class Test_twoOccupiedFieldsData extends NeoData {
		public final F1Node _f1;
		public final F2Node _f2;
		
		public Test_twoOccupiedFieldsData(Record data) {
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class Test_twoOccupiedFieldsMask extends NeoMask {
		public Test_twoOccupiedFieldsMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public Test_twoOccupiedFieldsMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public Test_twoOccupiedFieldsMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
		public Test_twoOccupiedFieldsMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public Test_twoOccupiedFieldsMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public Test_twoOccupiedFieldsMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.157
	public OccF1FieldAccess getPattern_OccF1Field() {
		return new OccF1FieldAccess();
	}
	
	public class OccF1FieldAccess extends NeoPatternAccess<OccF1FieldData, OccF1FieldMask> {
		public final String _b = "b";
		public final String _f1 = "f1";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(157);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OccF1FieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OccF1FieldData(d));
		}
		
		@Override
		public OccF1FieldMask mask() {
			return new OccF1FieldMask();
		}
	}
	
	public class OccF1FieldData extends NeoData {
		public final BNode _b;
		public final B_field_0_f1Rel _b_field_0_f1;
		public final F1Node _f1;
		
		public OccF1FieldData(Record data) {
			var _b = data.get("b");
			this._b = new BNode(_b);
			var _b_field_0_f1 = data.get("b_field_0_f1");
			this._b_field_0_f1 = new B_field_0_f1Rel(_b_field_0_f1);
			var _f1 = data.get("f1");
			this._f1 = new F1Node(_f1);
		}
		
		
		public class BNode {
			public String _ename;
			
			public BNode(Value _b) {
				if(!_b.get("ename").isNull())
					this._ename = _b.get("ename").asString();
			}
		}
		
		public class B_field_0_f1Rel {
		
			public B_field_0_f1Rel(Value _b_field_0_f1) {
			}
		}
		public class F1Node {
			public boolean _endPos;
			public String _ename;
			
			public F1Node(Value _f1) {
				if(!_f1.get("endPos").isNull())
					this._endPos = _f1.get("endPos").asBoolean();
				if(!_f1.get("ename").isNull())
					this._ename = _f1.get("ename").asString();
			}
		}
		
	}
	
	public class OccF1FieldMask extends NeoMask {
		public OccF1FieldMask setB(Long value) {
			nodeMask.put("b", value);
			return this;
		}
		public OccF1FieldMask setBEname(String value) {
			attributeMask.put("b.ename", value);
			return this;
		}
		public OccF1FieldMask setF1(Long value) {
			nodeMask.put("f1", value);
			return this;
		}
		public OccF1FieldMask setF1EndPos(boolean value) {
			attributeMask.put("f1.endPos", value);
			return this;
		}
		public OccF1FieldMask setF1Ename(String value) {
			attributeMask.put("f1.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.158
	public OccF2FieldAccess getPattern_OccF2Field() {
		return new OccF2FieldAccess();
	}
	
	public class OccF2FieldAccess extends NeoPatternAccess<OccF2FieldData, OccF2FieldMask> {
		public final String _s = "s";
		public final String _f2 = "f2";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(158);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<OccF2FieldData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new OccF2FieldData(d));
		}
		
		@Override
		public OccF2FieldMask mask() {
			return new OccF2FieldMask();
		}
	}
	
	public class OccF2FieldData extends NeoData {
		public final SNode _s;
		public final S_field_0_f2Rel _s_field_0_f2;
		public final F2Node _f2;
		
		public OccF2FieldData(Record data) {
			var _s = data.get("s");
			this._s = new SNode(_s);
			var _s_field_0_f2 = data.get("s_field_0_f2");
			this._s_field_0_f2 = new S_field_0_f2Rel(_s_field_0_f2);
			var _f2 = data.get("f2");
			this._f2 = new F2Node(_f2);
		}
		
		
		public class SNode {
			public String _ename;
			
			public SNode(Value _s) {
				if(!_s.get("ename").isNull())
					this._ename = _s.get("ename").asString();
			}
		}
		
		public class S_field_0_f2Rel {
		
			public S_field_0_f2Rel(Value _s_field_0_f2) {
			}
		}
		public class F2Node {
			public boolean _endPos;
			public String _ename;
			
			public F2Node(Value _f2) {
				if(!_f2.get("endPos").isNull())
					this._endPos = _f2.get("endPos").asBoolean();
				if(!_f2.get("ename").isNull())
					this._ename = _f2.get("ename").asString();
			}
		}
		
	}
	
	public class OccF2FieldMask extends NeoMask {
		public OccF2FieldMask setS(Long value) {
			nodeMask.put("s", value);
			return this;
		}
		public OccF2FieldMask setSEname(String value) {
			attributeMask.put("s.ename", value);
			return this;
		}
		public OccF2FieldMask setF2(Long value) {
			nodeMask.put("f2", value);
			return this;
		}
		public OccF2FieldMask setF2EndPos(boolean value) {
			attributeMask.put("f2.endPos", value);
			return this;
		}
		public OccF2FieldMask setF2Ename(String value) {
			attributeMask.put("f2.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.159
	public IConstraint getConstraint_OccF1() {
		var c = (Constraint) spec.getEntities().get(159);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.160
	public IConstraint getConstraint_OccF2() {
		var c = (Constraint) spec.getEntities().get(160);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/SokobanLanguage/bin/rules/SokobanPatternsRulesConstraints.msl#//@entities.161
	public IConstraint getConstraint_OccF1F2() {
		var c = (Constraint) spec.getEntities().get(161);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
}
