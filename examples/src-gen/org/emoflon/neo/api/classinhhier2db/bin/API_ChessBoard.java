/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.classinhhier2db.bin;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.classinhhier2db.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_ChessBoard {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_ChessBoard(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_ChessBoard(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_ChessBoard(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.0
	public Model getModel_FourByFourField(){
		return (Model) spec.getEntities().get(0);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.1
	public Model getModel_CompleteBoard(){
		return (Model) spec.getEntities().get(1);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.2
	public Model getModel_PawnOnField(){
		return (Model) spec.getEntities().get(2);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.3
	public Model getModel_WhitePawn(){
		return (Model) spec.getEntities().get(3);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.4
	public Model getModel_BlackPawn(){
		return (Model) spec.getEntities().get(4);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.5
	public Model getModel_WhitePawnOnField(){
		return (Model) spec.getEntities().get(5);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.6
	public Model getModel_BlackPawnOnField(){
		return (Model) spec.getEntities().get(6);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.7
	public Model getModel_FiguresOnFields(){
		return (Model) spec.getEntities().get(7);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.8
	public Model getModel_StartConfigurationLines(){
		return (Model) spec.getEntities().get(8);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.9
	public Model getModel_WhiteStartConfiguration(){
		return (Model) spec.getEntities().get(9);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.10
	public Model getModel_StartingLine(){
		return (Model) spec.getEntities().get(10);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.11
	public Model getModel_BlackStartConfiguration(){
		return (Model) spec.getEntities().get(11);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.12
	public Model getModel_StartingBoard(){
		return (Model) spec.getEntities().get(12);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.13
	public Model getModel_AllPawnsOnBoardForCaroKannDefense(){
		return (Model) spec.getEntities().get(13);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.14
	public Model getModel_AllPawnsOnBoardForKingsGambit(){
		return (Model) spec.getEntities().get(14);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.15
	public Model getModel_CaroKannDefense(){
		return (Model) spec.getEntities().get(15);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.16
	public Model getModel_KingsGambit(){
		return (Model) spec.getEntities().get(16);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.17
	public Model getModel_PawnOnBoard(){
		return (Model) spec.getEntities().get(17);
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.18
	public PawnOnStartPositionAccess getPattern_PawnOnStartPosition() {
		return new PawnOnStartPositionAccess();
	}
	
	public class PawnOnStartPositionAccess extends NeoPatternAccess<PawnOnStartPositionData, PawnOnStartPositionMask> {
		public final String _fig = "fig";
		public final String _f00 = "f00";
		public final String _f01 = "f01";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(18);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<PawnOnStartPositionData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PawnOnStartPositionData(d));
		}
		
		@Override
		public PawnOnStartPositionMask mask() {
			return new PawnOnStartPositionMask();
		}
	}
	
	public class PawnOnStartPositionData extends NeoData {
		public PawnOnStartPositionData(Record data) {
			
		}
	}
	
	public class PawnOnStartPositionMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.19
	public PawnMadeOneStepAccess getPattern_PawnMadeOneStep() {
		return new PawnMadeOneStepAccess();
	}
	
	public class PawnMadeOneStepAccess extends NeoPatternAccess<PawnMadeOneStepData, PawnMadeOneStepMask> {
		public final String _fig = "fig";
		public final String _f01 = "f01";
		public final String _f = "f";
		public final String _f00 = "f00";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(19);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<PawnMadeOneStepData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PawnMadeOneStepData(d));
		}
		
		@Override
		public PawnMadeOneStepMask mask() {
			return new PawnMadeOneStepMask();
		}
	}
	
	public class PawnMadeOneStepData extends NeoData {
		public PawnMadeOneStepData(Record data) {
			
		}
	}
	
	public class PawnMadeOneStepMask extends NeoMask {
	}
	
	//:~> platform:/resource/ClassInhHier2DB/Chess/bin/ChessBoard.msl#//@entities.20
	public PawnMadeTwoStepsAccess getPattern_PawnMadeTwoSteps() {
		return new PawnMadeTwoStepsAccess();
	}
	
	public class PawnMadeTwoStepsAccess extends NeoPatternAccess<PawnMadeTwoStepsData, PawnMadeTwoStepsMask> {
		public final String _ff = "ff";
		public final String _fig = "fig";
		public final String _f01 = "f01";
		public final String _f = "f";
		public final String _f00 = "f00";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(20);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<PawnMadeTwoStepsData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new PawnMadeTwoStepsData(d));
		}
		
		@Override
		public PawnMadeTwoStepsMask mask() {
			return new PawnMadeTwoStepsMask();
		}
	}
	
	public class PawnMadeTwoStepsData extends NeoData {
		public PawnMadeTwoStepsData(Record data) {
			
		}
	}
	
	public class PawnMadeTwoStepsMask extends NeoMask {
	}
}
