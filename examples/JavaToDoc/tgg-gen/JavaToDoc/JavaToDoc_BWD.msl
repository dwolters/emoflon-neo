import "platform:/resource/JavaToDoc/src/metamodels/SimpleJava.msl"
import "platform:/resource/JavaToDoc/src/metamodels/SimpleDoc.msl"

grammar JavaToDoc_BWD {
	ClazzToDocRule
	RootToRootRule
	SubToSubRule
	createSrcModel
	createTrgModel
}

rule ClazzToDocRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	p:Package {
		-elementOf->srcM
		++-clazzes->c
		-corr->f
		{
			._type_ : "PackageToFolder"
		}
	}
	
	++c:Clazz {
		++-elementOf->srcM
		++-corr->doc
		{
			._type_ := "ClazzToDoc"
		}
		.name := doc::name
	}

	f:Folder {
		-elementOf->trgM
		-docs->doc
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : true
	}
	
	doc:Doc {
		-elementOf->trgM
		~_tr_ : false
		~_tr_ := true
	}
} when ClazzToDocRuleNAC

	constraint ClazzToDocRuleNAC = forbid ClazzToDocRule_clazzNameIsTaken

	pattern ClazzToDocRule_clazzNameIsTaken {
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		clazz : Clazz {
			-elementOf->srcM
			.name : doc::name
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		doc : Doc {
			-elementOf->trgM
		}
	}

rule RootToRootRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	++p:Package {
		++-elementOf->srcM
		++-corr->f
		{
			._type_ := "PackageToFolder"
		}
		.name := f::name
	}

	f:Folder {
		-elementOf->trgM
		~_tr_ : false
		~_tr_ := true
	}
} when RootToRootRuleNAC

	constraint RootToRootRuleNAC = forbid RootToRootRule_packageNameIsTaken

	pattern RootToRootRule_packageNameIsTaken {
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		package : Package {
			-elementOf->srcM
			.name : f::name
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		f : Folder {
			-elementOf->trgM
		}
	}

rule SubToSubRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	p:Package {
		-elementOf->srcM
		++-subPackages->subP
		-corr->f
		{
			._type_ : "PackageToFolder"
		}
	}
	
	++subP:Package {
		++-elementOf->srcM
		++-corr->subF
		{
			._type_ := "PackageToFolder"
		}
		.name := subF::name
	}

	f:Folder {
		-elementOf->trgM
		-subFolders->subF
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : true
	}
	
	subF:Folder {
		-elementOf->trgM
		-docs->doc
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : false
		~_tr_ := true
	}
	
	doc:Doc {
		-elementOf->trgM
		.name : subF::name
		~_tr_ : false
		~_tr_ := true
	}
} when SubToSubRuleNAC

	constraint SubToSubRuleNAC = forbid SubToSubRule_packageNameIsTaken

	pattern SubToSubRule_packageNameIsTaken {
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		package : Package {
			-elementOf->srcM
			.name : subF::name
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		subF : Folder {
			-elementOf->trgM
		}
	}

rule createSrcModel {
	++srcModel:Model {
		++-conformsTo->mmSimpleJava
		.ename := <__srcModelName>
	}
	
	mmSimpleJava:MetaModel {
		.ename : "SimpleJava"
	}

} when createSrcModelNAC

	constraint createSrcModelNAC = forbid createSrcModel_srcModelExists

	pattern createSrcModel_srcModelExists {
		srcModel : Model {
			.ename : <__srcModelName>
		}
		
		
	}

rule createTrgModel {

	trgModel:Model {
		-conformsTo->mmSimpleDoc
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : false
		~_tr_ := true
	}
	
	mmSimpleDoc:MetaModel {
		.ename : "SimpleDoc"
		~_tr_ : true
	}
} 

