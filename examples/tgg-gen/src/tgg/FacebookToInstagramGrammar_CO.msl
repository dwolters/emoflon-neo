import "platform:/resource/FacebookToInstagram/src/Facebook.msl"
import "platform:/resource/FacebookToInstagram/src/Instagram.msl"

grammar FacebookToInstagramGrammar_CO {
	NetworkToNetworkIslandRule
	UserToUserIslandRule
	UserNetworkBridgeRule
	RequestFriendship
	AcceptFriendship
	IgnoreInterNetworkFollowers
	ParentsIgnoreRule
	SpouseIgnoreRule
	SiblingsIgnoreRule
}
	
  rule NetworkToNetworkIslandRule {
	fl:FacebookLanguage.Network {
		.enamespace : <__srcModelName>
		-corr->il
		{
			._type_ : "NetworkToNetwork"
		}
	}

	il:InstagramLanguage.Network {
		.enamespace : <__trgModelName>
		.description : fl::description
	}
	
	attributeConstraints {
	}
} 


  rule UserToUserIslandRule {
	flu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-corr->ilu
		{
			._type_ : "FbUserToInUser"
		}
	}

	ilu:InstagramLanguage.User {
		.enamespace : <__trgModelName>
		.name : flu::name
	}
	
	attributeConstraints {
	}
} 


  rule UserNetworkBridgeRule {
	f:FacebookLanguage.Network {
		.enamespace : <__srcModelName>
		-users->fu
		-corr->i
		{
			._type_ : "NetworkToNetwork"
		}
	}
	
	fu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-corr->iu
		{
			._type_ : "FbUserToInUser"
		}
	}

	i:InstagramLanguage.Network {
		.enamespace : <__trgModelName>
		-users->iu
	}
	
	iu:InstagramLanguage.User {
		.enamespace : <__trgModelName>
	}
	
	attributeConstraints {
	}
} 


  rule RequestFriendship {

	iu:InstagramLanguage.User {
		.enamespace : <__trgModelName>
	}
	
	in:InstagramLanguage.User {
		.enamespace : <__trgModelName>
		-follows->iu
	}
	
	attributeConstraints {
	}
} 


  rule AcceptFriendship {
	fn:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-corr->in
		{
			._type_ : "FbUserToInUser"
		}
	}
	
	fri:Friendship {
		.enamespace : <__srcModelName>
		-friends->fn
		-friends->fu
	}
	
	n:FacebookLanguage.Network {
		.enamespace : <__srcModelName>
		-friendships->fri
		-users->fn
		-users->fu
	}
	
	fu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-corr->iu
		{
			._type_ : "FbUserToInUser"
		}
	}

	in:InstagramLanguage.User {
		.enamespace : <__trgModelName>
		-follows->iu
	}
	
	iu:InstagramLanguage.User {
		.enamespace : <__trgModelName>
		-follows->in
	}
	
	attributeConstraints {
	}
} 


  rule IgnoreInterNetworkFollowers {
	nu:FacebookLanguage.Network {
		.enamespace : <__srcModelName>
		-users->fu
	}
	
	fn:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-corr->in
		{
			._type_ : "FbUserToInUser"
		}
	}
	
	n:FacebookLanguage.Network {
		.enamespace : <__srcModelName>
		-users->fn
	}
	
	fu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-corr->iu
		{
			._type_ : "FbUserToInUser"
		}
	}

	in:InstagramLanguage.User {
		.enamespace : <__trgModelName>
		-follows->iu
	}
	
	iu:InstagramLanguage.User {
		.enamespace : <__trgModelName>
		-follows->in
	}
	
	attributeConstraints {
	}
} 


  rule ParentsIgnoreRule {
	fn:FacebookLanguage.User {
		.enamespace : <__srcModelName>
	}
	
	fu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-parents->fn
	}

	
	attributeConstraints {
	}
} 


  rule SpouseIgnoreRule {
	fu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-spouse->fn
	}
	
	fn:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-spouse->fu
	}

	
	attributeConstraints {
	}
} 


  rule SiblingsIgnoreRule {
	fn:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-siblings->fu
	}
	
	fu:FacebookLanguage.User {
		.enamespace : <__srcModelName>
		-siblings->fn
	}

	
	attributeConstraints {
	}
} 

