import "platform:/resource/ExtType2Doc_ShortCut/src/metamodels/ExtTypeModel.msl"
import "platform:/resource/ExtType2Doc_ShortCut/src/metamodels/ExtDocModel.msl"

tripleGrammar ExtType2Doc_ShortCut {
	source {
		ExtTypeModel
	}
	
	target {
		ExtDocModel
	}
	
	correspondence {
		Project <- Project2DocContainer -> DocContainer
		Package <- Package2Folder -> Folder
		Type <- Type2Doc -> Doc
		Method <- Method2Entry -> Entry
		Parameter <- Param2Entry -> Entry
		Field <- Field2Entry -> Entry
		JavaDoc <- JDoc2Annotation -> Annotation
	}
	
	rules {
		ExtendingType2Doc
		Field2Entry
		Method2Entry
		Package2Folder
		Param2Entry 
		Project2DocCont 
		SubPackage2Folder
		Type2Doc
	}
	
	constraints {
		
	}
}

tripleRule ExtendingType2Doc : ExtType2Doc_ShortCut {
	source { 
	p:Package {
		-types->t
		++-types->nt
	}
	t:Type {
		.interface : false
	}
	
	++nt:Type {
		++-inheritsFrom->t
		.name := <name>
	}
}

target {
	f:Folder {
		-docs->d
		++-docs->nd
	}
	d:Doc {
		
	}
	
	++nd:Doc {
		++-superDocs->d
		.name := <name>
	}
}

correspondence {
	p<-:Package2Folder->f 
	t<-:Type2Doc->d
	
	++nt<-:Type2Doc->nd 
}
}

tripleRule Field2Entry : ExtType2Doc_ShortCut {
	source { 
	t:Type {
		++-fields->f
	}
	
	++f:Field {
		.name := <name>
	}
}

target {
	d:Doc {
		++-entries->e
	}
	
	++e:Entry {
		.name := <name>
		.type:="FIELD"
	}
}

correspondence {
	t<-:Type2Doc->d 
	++f<-:Field2Entry->e 
}
}

tripleRule Method2Entry : ExtType2Doc_ShortCut {
	source { 
	t:Type {
		++-methods->m
	}
	
	++m:Method {
		.name := <name>
	}
}

target {
	d:Doc {
		++-entries->e
	}
	
	++e:Entry {
		.name := <name>
		.type:="METHOD"
	}
}

correspondence {
	t<-:Type2Doc->d 
	++m<-:Method2Entry->e 
}
}

tripleRule Package2Folder : ExtType2Doc_ShortCut {
	source { 
	pr:Project {
		++-rootPackages->p
	}
	
	++p:Package {
		.name := <name>
	}
}

target {
	dc:DocContainer {
		++-folders->f
	}
	
	++f:Folder {
		.name := <name>
	}
}

correspondence {
	pr<-:Project2DocContainer->dc 
	++p<-:Package2Folder->f 
}
}

tripleRule Param2Entry : ExtType2Doc_ShortCut {
	source { 
	m:Method {
		++-params->p
	}
	
	++p:Parameter
}

target {
	e:Entry
}

correspondence {
	m<-:Method2Entry->e 
	
	++p<-:Param2Entry->e 
}
}

tripleRule Project2DocCont : ExtType2Doc_ShortCut {
	source { 
	++pr:Project
}

target {
	++dc:DocContainer
}

correspondence {
	++pr<-:Project2DocContainer->dc 
}
}

tripleRule SubPackage2Folder : ExtType2Doc_ShortCut {
	source { 
	p:Package {
		++-subPackages->sp
	}
	
	++sp:Package
}

target {
	f:Folder
}

correspondence {
	p<-:Package2Folder->f 
	++sp<-:Package2Folder->f 
}
}

tripleRule Type2Doc : ExtType2Doc_ShortCut {
	source {
	p:Package {
		++-types->t
	}
	
	++t:Type {
		.name := <name>
	}
}

target {
	f:Folder {
		++-docs->d
	}
	
	++d:Doc {
		.name := <name>
	}
}

correspondence {
	p<-:Package2Folder->f 
	++t<-:Type2Doc->d 
}
}

