import "platform:/resource/SokobanLanguage/src/metamodels/SokobanLanguage.msl"

tripleGrammar SokobanImportExport {
	source {
		sokobanExchangeFormat
	}
	
	target {
		SokobanLanguage
	}
	
	correspondence {
		sokobanExchangeFormat.Entry <-EntryToField-> SokobanLanguage.Field
	
		sokobanExchangeFormat.Board <-BoardToBoard-> SokobanLanguage.Board
	}
	
	rules {
		BoardToBoardRule
		BoardEndEntryRule
		BoardNormalEntryRule
		EndRule
		NormalRule
		AllOtherFields
		AllOtherFieldsEnd
		AllOtherFieldsNormal
		FirstRowAllCols
		FirstColAllRows
		FirstColAllRowsEnd
		FirstColAllRowsNormal
	}
}


abstract tripleRule BoardToBoardRule : SokobanImportExport {
	source {
		++ sokBoard: Board {
			++ -firstRow-> row
		}
		++ row: Row {
			++ -firstEntry->ne
		}
		++ ne: Entry
	}

	target {
		++ board: Board {
			++ -fields->nf {
				.row : 0
				.col : 0
			}
		}
		++ nf: Field
	}
	
	correspondence {
		++ sokBoard <-:BoardToBoard-> board
		 
		++ ne <-:EntryToField-> nf
	}
}

tripleRule BoardEndEntryRule:SokobanImportExport -> BoardToBoardRule, EndRule

tripleRule BoardNormalEntryRule:SokobanImportExport -> BoardToBoardRule, NormalRule



abstract tripleRule EndRule:SokobanImportExport {
	source {
		++ ne: End
	}
	
	target {
		++ nf: Field {
			.endPos : true
		}
	}
}

abstract tripleRule NormalRule:SokobanImportExport {
	source {
		++ ne: Normal
	}
	
	target {
		++ nf: Field {
			.endPos : false
		}
	}
}

abstract tripleRule AllOtherFields:SokobanImportExport {
	source {
		ble: Entry {
			++ -Entry.next->ne
		}
		
		++ ne: Entry
	}
	
	target {
		b: Board {
			-fields->ul
			++ -fields->nf
		}
		
		ul: Field {
			-right->ur
			-bottom->bl
		}
		
		ur: Field {
			++ -bottom->nf
		}
		
		bl: Field {
			++ -right->nf
		}
		
		++ nf: Field
	}
	
	correspondence {
		++ ble <-:EntryToField-> bl
		
		++ ne <-:EntryToField-> nf
	}
}

tripleRule AllOtherFieldsEnd:SokobanImportExport -> AllOtherFields, EndRule

tripleRule AllOtherFieldsNormal:SokobanImportExport -> AllOtherFields, NormalRule


abstract tripleRule FirstRowAllCols:SokobanImportExport {
	source {
		e: Entry
		
		++ ne: Entry
	}
	
	target {
		b: Board {
			-fields->f {				
				.row : 0
			}
			++ -fields->nf {
				.row : 0
			}
		}
		
		f: Field {
			++ -bottom->nf
		}
		
		++ nf: Field
	}
	
	correspondence {
		e <-:EntryToField-> f
		
		++ ne <-:EntryToField-> nf
	}
}

tripleRule FirstColAllRows:SokobanImportExport -> FirstRowAllCols {
	source {
		r: Row {
			-firstEntry-> $e 
			++ -Row.next-> nr
		}
		
		++ nr: Row {
			++ -firstEntry-> $ne
		}
	}
	target {
		f: Field {
			++ -bottom-> nf
		}
		
		++ nf: Field
	}
}

tripleRule FirstColAllRowsEnd:SokobanImportExport -> FirstColAllRows, EndRule

tripleRule FirstColAllRowsNormal:SokobanImportExport -> FirstColAllRows, NormalRule



