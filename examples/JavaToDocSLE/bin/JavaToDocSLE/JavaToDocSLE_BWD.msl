import "platform:/resource/JavaToDocSLE/src/metamodels/SimpleJavaSLE.msl"
import "platform:/resource/JavaToDocSLE/src/metamodels/SimpleDocSLE.msl"

grammar JavaToDocSLE_BWD {
	ClazzToDocRule
	SubClazzToSubDocRule
	MethodToEntryRule
	AddParameterRule
	FieldToEntryRule
	createSrcModel
	createTrgModel
}

rule ClazzToDocRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	++c:Clazz {
		++-elementOf->srcM
		++-corr->d
		{
			._type_ := "ClazzToDoc"
		}
		.name := d::name
	}

	d:Doc {
		-elementOf->trgM
		~_tr_ : false
		~_tr_ := true
	}
	
	attributeConstraints {
	}
} 


rule SubClazzToSubDocRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	c:Clazz {
		-elementOf->srcM
		++-subTypes->sc
		-corr->d
		{
			._type_ : "ClazzToDoc"
		}
	}
	
	++sc:Clazz {
		++-elementOf->srcM
		++-corr->sd
		{
			._type_ := "ClazzToDoc"
		}
		.name := sd::name
	}

	d:Doc {
		-elementOf->trgM
		-hrefs->sd
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : true
	}
	
	sd:Doc {
		-elementOf->trgM
		~_tr_ : false
		~_tr_ := true
	}
	
	attributeConstraints {
	}
} 


rule MethodToEntryRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	c:Clazz {
		-elementOf->srcM
		++-methods->m
		-corr->d
		{
			._type_ : "ClazzToDoc"
		}
	}
	
	++m:Method {
		++-elementOf->srcM
		++-corr->e
		{
			._type_ := "MethodToEntry"
		}
		.name := e::name
	}

	d:Doc {
		-elementOf->trgM
		-entries->e
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : true
	}
	
	e:Entry {
		-elementOf->trgM
		~_tr_ : false
		~_tr_ := true
	}
	
	attributeConstraints {
	}
} 


rule AddParameterRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	m:Method {
		-elementOf->srcM
		++-parameters->p
		-corr->e
		{
			._type_ : "MethodToEntry"
		}
		.name : e::name
	}
	
	++p:Parameter {
		++-elementOf->srcM
		++-corr->e
		{
			._type_ := "ParamToEntry"
		}
		.name := <paramName>
	}

	e:Entry {
		-elementOf->trgM
		~_tr_ : true
	}
	
	attributeConstraints {
	}
} 


rule FieldToEntryRule {
	srcM : Model {
		.ename : <__srcModelName>
	}
	
	trgM : Model {
		.ename : <__trgModelName>
	}
	
	c:Clazz {
		-elementOf->srcM
		++-fields->f
		-corr->d
		{
			._type_ : "ClazzToDoc"
		}
	}
	
	++f:Field {
		++-elementOf->srcM
		++-corr->e
		{
			._type_ := "FieldToEntry"
		}
		.name := e::name
	}

	d:Doc {
		-elementOf->trgM
		-entries->e
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : true
	}
	
	e:Entry {
		-elementOf->trgM
		~_tr_ : false
		~_tr_ := true
	}
	
	attributeConstraints {
	}
} 


rule createSrcModel {
	++srcModel:Model {
		++-conformsTo->mmSimpleJavaSLE
		.ename := <__srcModelName>
	}
	
	mmSimpleJavaSLE:MetaModel {
		.ename : "SimpleJavaSLE"
	}

	
	attributeConstraints {
	}
} when createSrcModelNAC

constraint createSrcModelNAC = forbid createSrcModel_srcModelExists

pattern createSrcModel_srcModelExists {
	srcModel : Model {
		.ename : <__srcModelName>
	}
	
	
}

rule createTrgModel {

	trgModel:Model {
		-conformsTo->mmSimpleDocSLE
		{
			~_tr_ : false
			~_tr_ := true
		}
		~_tr_ : false
		~_tr_ := true
	}
	
	mmSimpleDocSLE:MetaModel {
		.ename : "SimpleDocSLE"
		~_tr_ : true
	}
	
	attributeConstraints {
	}
} 

