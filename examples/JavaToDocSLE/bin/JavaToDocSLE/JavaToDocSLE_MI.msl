import "platform:/resource/JavaToDocSLE/src/metamodels/SimpleJavaSLE.msl"
import "platform:/resource/JavaToDocSLE/src/metamodels/SimpleDocSLE.msl"

grammar JavaToDocSLE_MI {
	
	ClazzToDocRule
	ClazzToDocRule_1
	ClazzToDocRule_3
	ClazzToDocRule_5
	
	SubClazzToSubDocRule
	SubClazzToSubDocRule_1
	SubClazzToSubDocRule_2
	SubClazzToSubDocRule_3
	SubClazzToSubDocRule_7
	SubClazzToSubDocRule_8
	SubClazzToSubDocRule_9
	SubClazzToSubDocRule_25
	
	MethodToEntryRule
	MethodToEntryRule_1
	MethodToEntryRule_2
	MethodToEntryRule_3
	MethodToEntryRule_7
	MethodToEntryRule_8
	MethodToEntryRule_9
	MethodToEntryRule_25
	
	AddParameterRule
	AddParameterRule_1
	AddParameterRule_2
	AddParameterRule_3
	
	FieldToEntryRule
	FieldToEntryRule_1
	FieldToEntryRule_2
	FieldToEntryRule_3
	FieldToEntryRule_7
	FieldToEntryRule_8
	FieldToEntryRule_9
	FieldToEntryRule_25
	
	AddGlossaryRule
	
	LinkGlossaryEntryRule
	
	AddGlossaryEntryRule
	AddGlossaryEntryRule_1
	
	createSrcModel
	createTrgModel
	}
	
	  rule ClazzToDocRule {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
			.name : d::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule ClazzToDocRule_1 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-corr->d
			{
				._type_ := "ClazzToDoc"
			}
			.name : d::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule ClazzToDocRule_3 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-corr->d
			{
				._type_ := "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		++d:Doc {
			++-elementOf->trgM
			.name := c::name
		}
		
		attributeConstraints {
		}
	} 
	
	  rule ClazzToDocRule_5 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		++c:Clazz {
			++-elementOf->srcM
			++-corr->d
			{
				._type_ := "ClazzToDoc"
			}
			.name := d::name
		}
	
		d:Doc {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule SubClazzToSubDocRule {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-subTypes->sc
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			-corr->sd
			{
				._type_ : "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-hrefs->sd
			{
				~_ex_ : true
			}
		}
		
		sd:Doc {
			-elementOf->trgM
			.name : sc::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_1 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-subTypes->sc
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			++-corr->sd
			{
				._type_ := "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-hrefs->sd
			{
				~_ex_ : true
			}
		}
		
		sd:Doc {
			-elementOf->trgM
			.name : sc::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_2 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-subTypes->sc
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			-corr->sd
			{
				._type_ : "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-hrefs->sd
		}
		
		sd:Doc {
			-elementOf->trgM
			.name : sc::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_3 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-subTypes->sc
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			++-corr->sd
			{
				._type_ := "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-hrefs->sd
		}
		
		sd:Doc {
			-elementOf->trgM
			.name : sc::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_7 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-subTypes->sc
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			++-corr->sd
			{
				._type_ := "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-hrefs->sd
		}
		
		++sd:Doc {
			++-elementOf->trgM
			.name := sc::name
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_8 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-subTypes->sc
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			-corr->sd
			{
				._type_ : "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-hrefs->sd
			{
				~_ex_ : true
			}
		}
		
		sd:Doc {
			-elementOf->trgM
			.name : sc::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_9 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-subTypes->sc
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		sc:Clazz {
			-elementOf->srcM
			++-corr->sd
			{
				._type_ := "ClazzToDoc"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-hrefs->sd
			{
				~_ex_ : true
			}
		}
		
		sd:Doc {
			-elementOf->trgM
			.name : sc::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule SubClazzToSubDocRule_25 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-subTypes->sc
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		++sc:Clazz {
			++-elementOf->srcM
			++-corr->sd
			{
				._type_ := "ClazzToDoc"
			}
			.name := sd::name
		}
	
		d:Doc {
			-elementOf->trgM
			-hrefs->sd
			{
				~_ex_ : true
			}
		}
		
		sd:Doc {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule MethodToEntryRule {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-methods->m
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			.name : m::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_1 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-methods->m
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			.name : m::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_2 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-methods->m
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-entries->e
		}
		
		e:Entry {
			-elementOf->trgM
			.name : m::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_3 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-methods->m
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-entries->e
		}
		
		e:Entry {
			-elementOf->trgM
			.name : m::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_7 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-methods->m
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-entries->e
		}
		
		++e:Entry {
			++-elementOf->trgM
			.name := m::name
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_8 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-methods->m
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			.name : m::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_9 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-methods->m
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		m:Method {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "MethodToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			.name : m::name
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule MethodToEntryRule_25 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-methods->m
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		++m:Method {
			++-elementOf->srcM
			++-corr->e
			{
				._type_ := "MethodToEntry"
			}
			.name := e::name
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule AddParameterRule {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		m:Method {
			-elementOf->srcM
			-parameters->p
			{
				~_ex_ : true
			}
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			.name : e::name
		}
		
		p:Parameter {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "ParamToEntry"
			}
			~_ex_ : true
		}
	
		e:Entry {
			-elementOf->trgM
		}
		
		attributeConstraints {
		}
	} 
	
	  rule AddParameterRule_1 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		m:Method {
			-elementOf->srcM
			-parameters->p
			{
				~_ex_ : true
			}
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			.name : <entryName>
		}
		
		p:Parameter {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "ParamToEntry"
			}
			~_ex_ : true
		}
	
		e:Entry {
			-elementOf->trgM
			.name : <entryName>
		}
		
		attributeConstraints {
		}
	} 
	
	  rule AddParameterRule_2 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		m:Method {
			-elementOf->srcM
			++-parameters->p
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			.name : e::name
		}
		
		p:Parameter {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "ParamToEntry"
			}
			~_ex_ : true
		}
	
		e:Entry {
			-elementOf->trgM
		}
		
		attributeConstraints {
		}
	} 
	
	  rule AddParameterRule_3 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		m:Method {
			-elementOf->srcM
			++-parameters->p
			-corr->e
			{
				._type_ : "MethodToEntry"
			}
			.name : <entryName>
		}
		
		p:Parameter {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "ParamToEntry"
			}
			~_ex_ : true
		}
	
		e:Entry {
			-elementOf->trgM
			.name : <entryName>
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule FieldToEntryRule {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-fields->f
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "FieldToEntry"
			}
			.name : e::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_1 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-fields->f
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "FieldToEntry"
			}
			.name : e::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_2 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-fields->f
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "FieldToEntry"
			}
			.name : e::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-entries->e
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_3 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-fields->f
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "FieldToEntry"
			}
			.name : e::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-entries->e
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_7 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			-fields->f
			{
				~_ex_ : true
			}
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "FieldToEntry"
			}
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			++-entries->e
		}
		
		++e:Entry {
			++-elementOf->trgM
			.name := f::name
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_8 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-fields->f
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			-corr->e
			{
				._type_ : "FieldToEntry"
			}
			.name : e::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_9 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-fields->f
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		f:Field {
			-elementOf->srcM
			++-corr->e
			{
				._type_ := "FieldToEntry"
			}
			.name : e::name
			~_ex_ : true
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule FieldToEntryRule_25 {
	
		srcM : Model {
			.ename : <__srcModelName>
		}
		
		trgM : Model {
			.ename : <__trgModelName>
		}
		
		c:Clazz {
			-elementOf->srcM
			++-fields->f
			-corr->d
			{
				._type_ : "ClazzToDoc"
			}
		}
		
		++f:Field {
			++-elementOf->srcM
			++-corr->e
			{
				._type_ := "FieldToEntry"
			}
			.name := e::name
		}
	
		d:Doc {
			-elementOf->trgM
			-entries->e
			{
				~_ex_ : true
			}
		}
		
		e:Entry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule AddGlossaryRule {
	
		trgM : Model {
			.ename : <__trgModelName>
		}
		
	
		g:Glossary {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule LinkGlossaryEntryRule {
	
		trgM : Model {
			.ename : <__trgModelName>
		}
		
	
		e:Entry {
			-elementOf->trgM
			-gEntries->ge
			{
				~_ex_ : true
			}
		}
		
		ge:GlossaryEntry {
			-elementOf->trgM
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule AddGlossaryEntryRule {
	
		trgM : Model {
			.ename : <__trgModelName>
		}
		
	
		g:Glossary {
			-elementOf->trgM
			-gEntries->ge
			{
				~_ex_ : true
			}
		}
		
		ge:GlossaryEntry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	  rule AddGlossaryEntryRule_1 {
	
		trgM : Model {
			.ename : <__trgModelName>
		}
		
	
		g:Glossary {
			-elementOf->trgM
			++-gEntries->ge
		}
		
		ge:GlossaryEntry {
			-elementOf->trgM
			~_ex_ : true
		}
		
		attributeConstraints {
		}
	} 
	
	
	  rule createSrcModel {
	
		srcModel:Model {
			-conformsTo->mmSimpleJavaSLE
		}
		
		mmSimpleJavaSLE:MetaModel {
			.ename : "SimpleJavaSLE"
		}
	
		
		attributeConstraints {
		}
	} 
	
	
	  rule createTrgModel {
	
	
		trgModel:Model {
			-conformsTo->mmSimpleDocSLE
		}
		
		mmSimpleDocSLE:MetaModel {
			.ename : "SimpleDocSLE"
		}
		
		attributeConstraints {
		}
	} 
	
