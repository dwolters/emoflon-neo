import "platform:/resource/ExtType2Doc_ConcSync/src/metamodels/ExtTypeModel.msl"
import "platform:/resource/ExtType2Doc_ConcSync/src/metamodels/ExtDocModel.msl"

tripleGrammar ExtType2Doc_ConcSync {
	source {
		ExtTypeModel
	}
	
	target {
		ExtDocModel
	}
	
	correspondence {
		Project <- Project2DocContainer -> DocContainer
		Package <- Package2Folder -> Folder
		Type <- Type2Doc -> Doc
		Method <- Method2Entry -> Entry
		Parameter <- Param2Entry -> Entry
		Field <- Field2Entry -> Entry
		JavaDoc <- JDoc2Annotation -> Annotation
	}
	
	rules {
		ExtendingType2Doc
		Field2Entry
		Glossary
		GlossaryEntry
		GlossaryLink
		JDoc2Annotation
		Method2Entry
		Package2Folder
		Param2Entry
		Project2DocCont
		Type2Doc
	}
	
	constraints {
		
	}
}

tripleRule ExtendingType2Doc : ExtType2Doc_ConcSync {

	source { 
		p:Package {
			-types->t
			++-types->nt
		}
		
		t:Type {
			++-extendedBy->nt
			//-package->p
		}
		
		++nt:Type {
			++-inheritsFrom->t
			//++-package->p
			.name := <name>
		}
	}
	
	target {
		f:Folder {
			-docs->d
			++-docs->nd
		}
		d:Doc {
			//-folder->f
			++-subDocs->nd
		}
		
		++nd:Doc {
			//++-folder->f
			++-superDocs->d
			.name := <name>
		}
	}
	
	correspondence {
		p <-:Package2Folder->f 
		t <-:Type2Doc->d 
		++ nt <-:Type2Doc-> nd
	}
}

tripleRule Field2Entry : ExtType2Doc_ConcSync {

	source { 
		t:Type {
			++-fields->f
		}
		
		++f:Field {
			//++-type->t
			.name := <name>
		}
	}
	
	target {
		d:Doc {
			++-entries->e
		}
		
		++e:Entry {
			//++-doc->d
			.name := <name>
			.type := "FIELD"
		}
	}
	
	correspondence {
		t <- :Type2Doc -> d 
		++f <-:Field2Entry -> e
	}
}

tripleRule Glossary : ExtType2Doc_ConcSync {

	target {
		dc:DocContainer {
			++-glossary->g
		}
		
		++g:Glossary {
			//++-container->dc
		}
	}
}

tripleRule GlossaryEntry : ExtType2Doc_ConcSync{

	target {
		g:Glossary {
			++-entries->ge
		}
		
		++ge:GlossaryEntry {
			//++-glossary->g
		}
	}
}

tripleRule GlossaryLink : ExtType2Doc_ConcSync {

	target {
		e:Entry {
			++-glossaryEntries->ge
		}
		ge:GlossaryEntry {
			++-entries->e
		}
	}
}

tripleRule JDoc2Annotation : ExtType2Doc_ConcSync {

	source { 
		m:Method {
			++-docs->j
		}
		
		++j:JavaDoc {
			//++-method->m
			.comment := <value>
		}
	}
	
	target {
		e:Entry {
			++-annotations->a
		}
		
		++a:Annotation {
			//++-entry->e
			.value := <value>
		}
	}
	
	correspondence {
		m <- :Method2Entry -> e 
		++j <-:JDoc2Annotation -> a
	}
}

tripleRule Method2Entry : ExtType2Doc_ConcSync {

	source { 
		t:Type {
			++-methods->m
		}
		
		++m:Method {
			//++-type->t
			.name := <name>
		}
	}
	
	target {
		d:Doc {
			++-entries->e
		}
		
		++e:Entry {
			//++-doc->d
			.name := <name>
			.type:= "METHOD"
		}
	}
	
	correspondence {
		t <- :Type2Doc -> d 
		++m <-:Method2Entry -> e
	}
}

tripleRule Package2Folder : ExtType2Doc_ConcSync {

	source { 
		pr:Project {
			++-rootPackages->p
		}
		
		++p:Package {
			//++-project->pr
			.name := <name>
		}
	}
	
	target {
		dc:DocContainer {
			++-folders->f
		}
		
		++f:Folder {
			//++-container->dc
			.name := <name>
		}
	}
	
	correspondence {
		pr <-:Project2DocContainer -> dc 
		++p <-:Package2Folder-> f 
	}
}

tripleRule Param2Entry : ExtType2Doc_ConcSync {

source { 
	m:Method {
		++-params->p
	}
	
	++p:Parameter {
		//++-method->m
	}
}

target {
	e:Entry
}

correspondence {
	m <- :Method2Entry -> e
	++p <-:Param2Entry-> e 
}
}

tripleRule Project2DocCont : ExtType2Doc_ConcSync {
	source { 
		++pr:Project
	}
	
	target {
		++dc:DocContainer
	}
	
	correspondence {
		++pr <-:Project2DocContainer -> dc 
	}
}

tripleRule Type2Doc : ExtType2Doc_ConcSync {

	source { 
		p:Package {
			++-types->t
		}
		
		++t:Type {
			//++-package->p
			.name := <name>
		}
	}
	
	target {
		f:Folder {
			++-docs->d
		}
		
		++d:Doc {
			//++-folder->f
			.name := <name>
		}
	}
	
	correspondence {
		p <-:Package2Folder-> f 
		++t <-:Type2Doc-> d 
	}
}

